{"version":3,"file":"2d.dist.js","sources":["../../../../src/util/endian.js","../../../../src/util/util.js","../../../../src/math/Math.js","../../../../src/math/Vector.js","../../../../src/math/Point.js","../../../../src/math/Plane.js","../../../../src/math/Matrix.js","../../../../src/math/Quaternion.js","../../../../src/math/Polynomial1.js","../../../../src/math/Triangle3.js","../../../../src/math/Line3.js","../../../../src/core/D3Object.js","../../../../src/core/BinDataView.js","../../../../src/graphics/controllers/Controller.js","../../../../src/graphics/dataTypes/Transform.js","../../../../src/graphics/controllers/TransformController.js","../../../../src/graphics/controllers/BlendTransformController.js","../../../../src/graphics/controllers/ControlledObject.js","../../../../src/graphics/controllers/IKController.js","../../../../src/graphics/controllers/KeyframeController.js","../../../../src/graphics/resources/Buffer.js","../../../../src/graphics/resources/IndexBuffer.js","../../../../src/graphics/resources/VertexBuffer.js","../../../../src/graphics/resources/Texture.js","../../../../src/graphics/renderer/webgl/GLMapping.js","../../../../src/graphics/shaders/SamplerState.js","../../../../src/graphics/shaders/Shader.js","../../../../src/graphics/renderer/webgl/GLShader.js","../../../../src/graphics/renderer/webgl/GLVertexShader.js","../../../../src/graphics/renderer/webgl/GLFragShader.js","../../../../src/graphics/resources/VertexFormat.js","../../../../src/graphics/renderer/webgl/GLVertexFormat.js","../../../../src/graphics/renderer/webgl/GLVertexArray.js","../../../../src/graphics/renderer/webgl/GLIndexBuffer.js","../../../../src/graphics/renderer/webgl/GLTexture2D.js","../../../../src/graphics/shaders/AlphaState.js","../../../../src/graphics/shaders/CullState.js","../../../../src/graphics/shaders/DepthState.js","../../../../src/graphics/shaders/OffsetState.js","../../../../src/graphics/shaders/StencilState.js","../../../../src/graphics/renderer/webgl/GLRenderState.js","../../../../src/graphics/renderer/webgl/GLRenderData.js","../../../../src/graphics/renderer/webgl/GLSampler.js","../../../../src/graphics/renderer/webgl/GLProgram.js","../../../../src/graphics/renderer/webgl/GLExtensions.js","../../../../src/graphics/shaders/Program.js","../../../../src/graphics/shaders/FragShader.js","../../../../src/graphics/shaders/VertexShader.js","../../../../src/graphics/shaders/ShaderParameters.js","../../../../src/graphics/shaders/VisualEffect.js","../../../../src/graphics/shaders/VisualEffectInstance.js","../../../../src/graphics/shaders/VisualPass.js","../../../../src/graphics/shaders/VisualTechnique.js","../../../../src/graphics/dataTypes/Bound.js","../../../../src/graphics/sceneTree/Spatial.js","../../../../src/graphics/sceneTree/Visual.js","../../../../src/graphics/renderer/Renderer.js","../../../../src/graphics/resources/Texture2D.js","../../../../src/graphics/resources/VertexBufferAccessor.js","../../../../src/graphics/sceneTree/Camera.js","../../../../src/graphics/sceneTree/Node.js","../../../../src/graphics/sceneTree/Projector.js","../../../../src/graphics/sceneTree/VisibleSet.js","../../../../src/graphics/sceneTree/Culler.js","../../../../src/graphics/sceneTree/Light.js","../../../../src/graphics/sceneTree/Material.js","../../../../src/graphics/sceneTree/Triangles.js","../../../../src/graphics/sceneTree/TriMesh.js","../../../../src/graphics/detail/SwitchNode.js","../../../../src/graphics/sceneTree/PickRecord.js","../../../../src/graphics/sceneTree/Picker.js","../../../../src/graphics/sceneTree/StandardMesh.js","../../../../src/graphics/sceneTree/TriStrip.js","../../../../src/graphics/controllers/SkinController.js","../../../../src/graphics/shaderFloat/ShaderFloat.js","../../../../src/graphics/shaderFloat/LightAmbientConstant.js","../../../../src/graphics/shaderFloat/LightDiffuseConstant.js","../../../../src/graphics/shaderFloat/LightSpecularConstant.js","../../../../src/graphics/shaderFloat/LightAttenuationConstant.js","../../../../src/graphics/shaderFloat/LightSpotConstant.js","../../../../src/graphics/shaderFloat/LightModelDirectionConstant.js","../../../../src/graphics/shaderFloat/LightModelPositionConstant.js","../../../../src/graphics/shaderFloat/LightWorldDirectionConstant.js","../../../../src/graphics/shaderFloat/LightWorldPositionConstant.js","../../../../src/graphics/shaderFloat/MaterialAmbientConstant.js","../../../../src/graphics/shaderFloat/MaterialDiffuseConstant.js","../../../../src/graphics/shaderFloat/MaterialEmissiveConstant.js","../../../../src/graphics/shaderFloat/MaterialSpecularConstant.js","../../../../src/graphics/shaderFloat/WMatrixConstant.js","../../../../src/graphics/shaderFloat/PVWMatrixConstant.js","../../../../src/graphics/shaderFloat/CameraModelPositionConstant.js","../../../../src/graphics/localEffects/DefaultEffect.js","../../../../src/graphics/localEffects/LightAmbEffect.js","../../../../src/graphics/localEffects/LightDirPerFragEffect.js","../../../../src/graphics/localEffects/LightDirPerVerEffect.js","../../../../src/graphics/localEffects/LightPointPerFragEffect.js","../../../../src/graphics/localEffects/LightPointPerVertexEffect.js","../../../../src/graphics/localEffects/LightSpotPerFragEffect.js","../../../../src/graphics/localEffects/LightSpotPerVertexEffect.js","../../../../src/graphics/localEffects/MaterialEffect.js","../../../../src/graphics/localEffects/Texture2DEffect.js","../../../../src/graphics/localEffects/VertexColor3Effect.js","../../../../src/graphics/localEffects/Texture2DLightDirPerFragEffect.js","../../../../src/input/key.js","../../../../src/application/BaseApplication.js","../../../../src/application/Application3D.js","../../../../src/loader/XHRLoader.js","2d.src.js"],"sourcesContent":["let buf = new Uint32Array(1);\nlet dv = new DataView(buf.buffer);\ndv.setUint32(0, 0x12345678, true); // little endian\n\nexport const BigEndian = (buf[0] === 0x12345678);\n","export { uuid } from './uuid';\n\nexport * from './endian';\nexport * from './version';\n\nexport function def(obj, key, value) {\n    Object.defineProperty(obj, key, { value: value });\n}\n\nexport function runApplication(Klass) {\n    if (!document.querySelector('.l5-nodes-info')) {\n        let nodesInfo = document.createElement('div');\n        nodesInfo.className = 'l5-nodes-info';\n        document.body.appendChild(nodesInfo);\n    }\n    let l5Instance = new Klass();\n    l5Instance.run();\n    window.x = l5Instance;\n}\n\n/**\n * 类枚举定义\n * @param {Object} tar    枚举承载体\n * @param {Object<String, *>} val 枚举变量键值\n * @param {boolean} lock 是否锁定类\n */\nexport function DECLARE_ENUM(tar, val, lock = true) {\n    for (let k in val) {\n        if (val.hasOwnProperty(k)) {\n            Object.defineProperty(tar, k, { value: val[k] });\n        }\n    }\n    if (lock) Object.seal(tar);\n}\n","const _Math = {\n    // 一些通用常量.\n    EPSILON: Number.EPSILON,\n    ZERO_TOLERANCE: Number.EPSILON,\n    MAX_REAL: window.Infinity,\n    PI: 3.14159265358979323846,\n    TWO_PI: 2 * 3.14159265358979323846,\n    HALF_PI: 0.5 * 3.14159265358979323846,\n    INV_PI: 1 / 3.14159265358979323846,\n    INV_TWO_PI: 1 / (3.14159265358979323846 * 2),\n    DEG_TO_RAD: 3.14159265358979323846 / 180,\n    RAD_TO_DEG: 180 / 3.14159265358979323846,\n    LN_2: Math.log(2),\n    LN_10: Math.log(10),\n    INV_LN_2: 1 / Math.log(2),\n    INV_LN_10: 1 / Math.log(10),\n    SQRT_2: Math.sqrt(2),\n    INV_SQRT_2: 1 / Math.sqrt(2),\n    SQRT_3: Math.sqrt(3),\n    INV_SQRT_3: 1 / Math.sqrt(3),\n\n    // native function\n    random: Math.random,\n    floor: Math.floor,\n    ceil: Math.ceil,\n    abs: Math.abs,\n    atan: Math.atan,\n    atan2: Math.atan2,\n    exp: Math.exp,\n    cos: Math.cos,\n    sin: Math.sin,\n    tan: Math.tan,\n    sign: Math.sign,\n\n    /**\n     * 开平方\n     * @param {number} value \n     * @returns {number}\n     */\n    sqrt(value) {\n        if (value >= 0) {\n            return Math.sqrt(value);\n        }\n        console.warn('Negative input to Sqrt');\n        return 0;\n    },\n    /**\n     * 是否是2的整次幂\n     * @param {number} value 需要判断的整数\n     * @returns {boolean}\n     */\n    isPowerOfTwo(value) {\n        return (value > 0) && ((value & (value - 1)) === 0);\n    },\n    /**\n     * 判断2个浮点数是否相等\n     * @param a {number}\n     * @param b {number}\n     * @returns {boolean}\n     */\n    floatEqual(a, b) {\n        if (Math.abs(a - b) < 0.000001) {\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * 获取以2为底的对数\n     * @param powerOfTwo {number}\n     * @returns {number}\n     */\n    log2OfPowerOfTwo(powerOfTwo) {\n        let log2 = (powerOfTwo & 0xaaaaaaaa) !== 0;\n        log2 |= ((powerOfTwo & 0xffff0000) !== 0) << 4;\n        log2 |= ((powerOfTwo & 0xff00ff00) !== 0) << 3;\n        log2 |= ((powerOfTwo & 0xf0f0f0f0) !== 0) << 2;\n        log2 |= ((powerOfTwo & 0xcccccccc) !== 0) << 1;\n        return log2;\n    },\n\n    /**\n     * 转换IEEE 32位浮点数value[0,1]到32位整数[0,2^power-1]\n     */\n    scaledFloatToInt: (function () {\n        let da = new Float32Array([0]);\n        let dv = new DataView(da.buffer);\n\n        /**\n         * @param {number} value 需要转换的浮点数 [0,1]\n         * @param power {number}\n         * @returns {number}\n         */\n        return function (value, power) {\n            da[0] = value;\n            let result = 0;\n            let shift = 150 - power - (dv.getUint8(3) << 1) + (dv.getUint8(2) >> 7);\n            if (shift < 24) {\n                result = ((dv.getUint32(0) & 0x007fffff) | 0x00800000) >> shift;\n                if (result === (1 << power)) {\n                    --result;\n                }\n            }\n            return result;\n        };\n    })(),\n\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n    acos(value) {\n        if (-1 < value) {\n            return value < 1 ? Math.acos(value) : 0;\n        }\n        return this.PI;\n    },\n\n\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n\n    asin(value) {\n        if (-1 < value) {\n            return value < 1 ? Math.asin(value) : this.HALF_PI;\n        }\n        return -HALF_PI;\n    },\n\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n    invSqrt(value) {\n        if (value !== 0) {\n            return 1 / Math.sqrt(value);\n        }\n        console.warn('Division by zero in invSqr');\n        return 0;\n    },\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n    log(value) {\n        if (value > 0) {\n            return Math.log(value);\n        }\n        console.warn('Nonpositive input to log');\n        return 0;\n    },\n\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n    log2(value) {\n        if (value > 0) {\n            return this.INV_LN_2 * Math.log(value);\n        }\n        console.warn('Nonpositive input to log2');\n        return 0;\n    },\n\n    /**\n     * @param {number} value\n     * @returns {number}\n     */\n    log10(value) {\n        if (value > 0) {\n            return this.INV_LN_10 * Math.log(value);\n        }\n        console.warn('Nonpositive input to log10');\n        return 0;\n    },\n\n    /**\n     * @param {number} base\n     * @param {number} exponent\n     * @returns {number}\n     */\n    pow(base, exponent) {\n        if (base >= 0) {\n            return Math.pow(base, exponent);\n        }\n        console.warn('Negative base not allowed in Pow');\n        return this.MAX_REAL;\n    },\n\n    /**\n     * 求平方\n     * @param {number} value\n     * @returns {number}\n     */\n    sqr(value) {\n        return value * value;\n    },\n\n    /**\n     * 生成[-1,1]随机数\n     * @returns {number}\n     */\n    symmetricRandom() {\n        return 2 * Math.random() - 1;\n    },\n\n    /**\n     * 生成[0,1]随机数\n     * @returns {number}\n     */\n    unitRandom() {\n        return Math.random();\n    },\n\n    /**\n     * 生成[min,max]随机数\n     * @param {number} min 随机数的最小值\n     * @param {number} max 随机数的最大值\n     * @returns {number}\n     */\n    intervalRandom(min, max) {\n        return min + (max - min) * Math.random();\n    },\n\n    intervalIntRandom(min, max) {\n        return Math.floor(min + (max - min) * Math.random());\n    },\n\n    /**\n     * Clamp the input to the specified interval [min,max].\n     * @param {number} value 夹取的值\n     * @param {number} min 区间开始\n     * @param {number} max 区间结束\n     * @returns {number}\n     */\n    clamp(value, min, max) {\n        if (value <= min) {\n            return min;\n        }\n        if (value >= max) {\n            return max;\n        }\n        return value;\n    },\n\n    /**\n     * Clamp the input to [0,1].\n     * @param {number} value\n     * @returns {number}\n     */\n    saturate(value) {\n        if (value <= 0) {\n            return 0;\n        }\n        if (value >= 1) {\n            return 1;\n        }\n        return value;\n    },\n\n    // ================= 快速版本的三角/反三角函数,使用多项式逼近，提升计算性能 ====================\n    /**\n     * @param {number} angle 必须在[0,pi/2]\n     * @returns {number}\n     */\n    fastSin0(angle) {\n        const angleSqr = angle * angle;\n        let result = 7.61e-03;\n        result *= angleSqr;\n        result -= 1.6605e-01;\n        result *= angleSqr;\n        result += 1;\n        return result * angle;\n    },\n\n    /**\n     * @param {number} angle 必须在[0,pi/2]\n     * @returns {number}\n     */\n    fastSin1(angle) {\n        const angleSqr = angle * angle;\n        let result = -2.39e-08;\n        result *= angleSqr;\n        result += 2.7526e-06;\n        result *= angleSqr;\n        result -= 1.98409e-04;\n        result *= angleSqr;\n        result += 8.3333315e-03;\n        result *= angleSqr;\n        result -= 1.666666664e-01;\n        result *= angleSqr;\n        result += 1;\n        return result * angle;\n    },\n\n    /**\n     * @param {number} angle 必须在[0,pi/2]\n     * @returns {number}\n     */\n    fastCos0(angle) {\n        const angleSqr = angle * angle;\n        let result = 3.705e-02;\n        result *= angleSqr;\n        result -= 4.967e-01;\n        return result * angleSqr + 1;\n    },\n\n    /**\n     * @param {number} angle 必须在[0,pi/2]\n     * @returns {number}\n     */\n    fastCos1(angle) {\n        const angleSqr = angle * angle;\n        let result = -2.605e-07;\n        result *= angleSqr;\n        result += 2.47609e-05;\n        result *= angleSqr;\n        result -= 1.3888397e-03;\n        result *= angleSqr;\n        result += 4.16666418e-02;\n        result *= angleSqr;\n        result -= 4.999999963e-01;\n        return result * angleSqr + 1;\n    },\n\n    /**\n     * @param {number} angle 必须在[0,pi/4]\n     * @returns {number}\n     */\n    fastTan0(angle) {\n        const angleSqr = angle * angle;\n        let result = 2.033e-01;\n        result *= angleSqr;\n        result += 3.1755e-01;\n        result *= angleSqr;\n        result += 1;\n        return result * angle;\n    },\n\n    /**\n     * @param {number} angle 必须在[0,pi/4]\n     * @returns {number}\n     */\n    fastTan1(angle) {\n        const angleSqr = angle * angle;\n        let result = 9.5168091e-03;\n        result *= angleSqr;\n        result += 2.900525e-03;\n        result *= angleSqr;\n        result += 2.45650893e-02;\n        result *= angleSqr;\n        result += 5.33740603e-02;\n        result *= angleSqr;\n        result += 1.333923995e-01;\n        result *= angleSqr;\n        result += 3.333314036e-01;\n        result *= angleSqr;\n        result += 1;\n        return result * angle;\n    },\n\n    /**\n     * @param {number} value 必须在[0,1]\n     * @returns {number}\n     */\n    fastInvSin0(value) {\n        let root = Math.sqrt(Math.abs(1 - value));\n        let result = -0.0187293;\n        result *= value;\n        result += 0.0742610;\n        result *= value;\n        result -= 0.2121144;\n        result *= value;\n        result += 1.5707288;\n        result = this.HALF_PI - root * result;\n        return result;\n    },\n\n    /**\n     * @param {number} value 必须在[0,1]\n     * @returns {number}\n     */\n    fastInvSin1(value) {\n        let root = Math.sqrt(Math.abs(1 - value));\n        let result = -0.0012624911;\n        result *= value;\n        result += 0.0066700901;\n        result *= value;\n        result -= 0.0170881256;\n        result *= value;\n        result += 0.0308918810;\n        result *= value;\n        result -= 0.0501743046;\n        result *= value;\n        result += 0.0889789874;\n        result *= value;\n        result -= 0.2145988016;\n        result *= value;\n        result += 1.5707963050;\n        result = this.HALF_PI - root * result;\n        return result;\n    },\n\n    /**\n     * @param {number} value 必须在[0,1]\n     * @returns {number}\n     */\n    fastInvCos0(value) {\n        const root = Math.sqrt(Math.abs(1 - value));\n        let result = -0.0187293;\n        result *= value;\n        result += 0.0742610;\n        result *= value;\n        result -= 0.2121144;\n        result *= value;\n        result += 1.5707288;\n        return result * root;\n    },\n\n    /**\n     * @param {number} value 必须在[0,1]\n     * @returns {number}\n     */\n    fastInvCos1(value) {\n        let root = Math.sqrt(Math.abs(1 - value));\n        let result = -0.0012624911;\n        result *= value;\n        result += 0.0066700901;\n        result *= value;\n        result -= 0.0170881256;\n        result *= value;\n        result += 0.0308918810;\n        result *= value;\n        result -= 0.0501743046;\n        result *= value;\n        result += 0.0889789874;\n        result *= value;\n        result -= 0.2145988016;\n        result *= value;\n        result += 1.5707963050;\n        return result * root;\n    },\n\n    /**\n     * @param {number} value 必须在[-1,1]\n     * @returns {number}\n     */\n    fastInvTan0(value) {\n        const valueSqr = value * value;\n        let result = 0.0208351;\n        result *= valueSqr;\n        result -= 0.085133;\n        result *= valueSqr;\n        result += 0.180141;\n        result *= valueSqr;\n        result -= 0.3302995;\n        result *= valueSqr;\n        result += 0.999866;\n        return result * value;\n    },\n\n    /**\n     * @param {number} value 必须在[-1,1]\n     * @returns {number}\n     */\n    fastInvTan1(value) {\n        const valueSqr = value * value;\n        let result = 0.0028662257;\n        result *= valueSqr;\n        result -= 0.0161657367;\n        result *= valueSqr;\n        result += 0.0429096138;\n        result *= valueSqr;\n        result -= 0.0752896400;\n        result *= valueSqr;\n        result += 0.1065626393;\n        result *= valueSqr;\n        result -= 0.1420889944;\n        result *= valueSqr;\n        result += 0.1999355085;\n        result *= valueSqr;\n        result -= 0.3333314528;\n        result *= valueSqr;\n        result += 1;\n        return result * value;\n    },\n\n    // ============= exp(-x)快速逼近版本 =============================\n    /**\n     * @param {number} value 值必须在[0, Infinity)\n     * @returns {number}\n     */\n    fastNegExp0(value) {\n        let result = 0.0038278;\n        result *= value;\n        result += 0.0292732;\n        result *= value;\n        result += 0.2507213;\n        result *= value;\n        result += 1;\n        result *= result;\n        result *= result;\n        return 1 / result;\n    },\n\n    /**\n     * @param {number} value 值必须在[0, Infinity)\n     * @returns {number}\n     */\n    fastNegExp1(value) {\n        let result = 0.00026695;\n        result *= value;\n        result += 0.00227723;\n        result *= value;\n        result += 0.03158565;\n        result *= value;\n        result += 0.24991035;\n        result *= value;\n        result += 1;\n        result *= result;\n        result *= result;\n        return 1 / result;\n    },\n\n    /**\n     * @param {number} value 值必须在[0, Infinity)\n     * @returns {number}\n     */\n    fastNegExp2(value) {\n        let result = 0.000014876;\n        result *= value;\n        result += 0.000127992;\n        result *= value;\n        result += 0.002673255;\n        result *= value;\n        result += 0.031198056;\n        result *= value;\n        result += 0.250010936;\n        result *= value;\n        result += 1;\n        result *= result;\n        result *= result;\n        return 1 / result;\n    },\n\n    /**\n     * @param {number} value 值必须在[0, Infinity)\n     * @returns {number}\n     */\n    fastNegExp3(value) {\n        let result = 0.0000006906;\n        result *= value;\n        result += 0.0000054302;\n        result *= value;\n        result += 0.0001715620;\n        result *= value;\n        result += 0.0025913712;\n        result *= value;\n        result += 0.0312575832;\n        result *= value;\n        result += 0.2499986842;\n        result *= value;\n        result += 1;\n        result *= result;\n        result *= result;\n        return 1 / result;\n    }\n}\n\nexport { _Math }\n","import { _Math } from './Math';\n\nclass Vector extends Float32Array {\n\n    constructor(x = 0, y = 0, z = 0) {\n        super(4);\n        if (x instanceof Float32Array) {\n            this.set(x.slice(0, 3));\n        } else {\n            this[0] = x;\n            this[1] = y;\n            this[2] = z;\n        }\n        this[3] = 0;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(n) {\n        this[0] = n;\n    }\n\n    set y(n) {\n        this[1] = n;\n    }\n\n    set z(n) {\n        this[2] = n;\n    }\n\n    set w(n) {\n        this[3] = n;\n    }\n\n    /**\n     * 复制\n     * @param {Vector} vec\n     * @returns {Vector}\n     */\n    copy(vec) {\n        this.set(vec);\n        return this;\n    }\n\n    /**\n     * 赋值\n     * @param {number} x\n     * @param {number} y\n     * @param {number} z\n     */\n    assign(x, y, z) {\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n    }\n\n    /**\n     * 求向量长度\n     */\n    get length() {\n        return Math.hypot(this[0], this[1], this[2]);\n    }\n\n    /**\n     * 长度平方\n     * none side-effect\n     * @returns {number}\n     */\n    squaredLength() {\n        let x = this[0];\n        let y = this[1];\n        let z = this[2];\n        return x * x + y * y + z * z;\n    }\n\n    /**\n     * 是否相等\n     * @param {Vector} v\n     */\n    equals(v) {\n        return this[0] === v[0] && this[1] === v[1] && this[2] === v[2];\n    }\n\n    /**\n     * 规格化向量\n     */\n    normalize() {\n        let length = this.length;\n        if (length === 1) {\n            return length;\n        } else if (length > 0) {\n            let invLength = 1 / length;\n            this[0] *= invLength;\n            this[1] *= invLength;\n            this[2] *= invLength;\n        } else {\n            length = 0;\n            this[0] = 0;\n            this[1] = 0;\n            this[2] = 0;\n        }\n        return length;\n    }\n\n    /**\n     * calc cross to vec\n     * \n     * none side-effect\n     * @param {Vector} vec\n     */\n    cross(vec) {\n        return new Vector(\n            this[1] * vec[2] - this[2] * vec[1],\n            this[2] * vec[0] - this[0] * vec[2],\n            this[0] * vec[1] - this[1] * vec[0]\n        );\n    }\n\n    /**\n     * calc unitCross to vec\n     * \n     * none side-effect\n     * @param {Vector} vec\n     */\n    unitCross(vec) {\n        let x = this[0], y = this[1], z = this[2],\n            bx = vec[0], by = vec[1], bz = vec[2];\n        let cross = new Vector(\n            y * bz - z * by,\n            z * bx - x * bz,\n            x * by - y * bx\n        );\n        cross.normalize();\n        return cross;\n    }\n\n    /**\n     * add two Vector\n     * \n     * none side-effect\n     * @param {Vector} v\n     */\n    add(v) {\n        return new Vector(\n            this[0] + v[0],\n            this[1] + v[1],\n            this[2] + v[2]\n        );\n    }\n\n    /**\n     * sub two Vector\n     * \n     * none side-effect\n     * @param {Vector} v\n     */\n    sub(v) {\n        return new Vector(\n            this[0] - v[0],\n            this[1] - v[1],\n            this[2] - v[2]\n        );\n    }\n\n    /**\n     * scalar Vector\n     * \n     * none side-effect\n     * @param {number} scalar\n     */\n    scalar(scalar) {\n        return new Vector(\n            this[0] * scalar,\n            this[1] * scalar,\n            this[2] * scalar\n        );\n    }\n\n    /**\n     * div Vector\n     * \n     * none side-effect\n     * @param {number} scalar\n     */\n    div(scalar) {\n        if (scalar !== 0) {\n            scalar = 1 / scalar;\n\n            return new Vector(\n                this[0] * scalar,\n                this[1] * scalar,\n                this[2] * scalar\n            );\n        }\n        return Vector.ZERO;\n    }\n\n    /**\n     * negative Vector  \n     * none side-effect\n     */\n    negative() {\n        return new Vector(-this[0], -this[1], -this[2]);\n    }\n\n    /**\n     * dot two Vector  \n     * none side-effect\n     * @param v {Vector}\n     */\n    dot(v) {\n        return this[0] * v[0] + this[1] * v[1] + this[2] * v[2];\n    }\n\n    static get ZERO() {\n        return new Vector();\n    }\n\n    static get UNIT_X() {\n        return new Vector(1);\n    }\n\n    static get UNIT_Y() {\n        return new Vector(0, 1);\n    }\n\n    static get UNIT_Z() {\n        return new Vector(0, 0, 1);\n    }\n\n    /**\n     * 正交化给定的3个向量\n     *\n     * u0 = normalize(v0)  \n     * u1 = normalize(v1 - dot(u0,v1)u0)  \n     * u2 = normalize(v2 - dot(u0,v2)u0 - dot(u1,v2)u1)  \n     *\n     * @param {Vector} vec0\n     * @param {Vector} vec1\n     * @param {Vector} vec2\n     */\n    static orthoNormalize(vec0, vec1, vec2) {\n        vec0.normalize();\n\n        let dot0 = vec0.dot(vec1);\n        let t = vec0.scalar(dot0);\n        vec1.copy(vec1.sub(t));\n        vec1.normalize();\n\n        let dot1 = vec1.dot(vec2);\n        dot0 = vec0.dot(vec2);\n        t = vec0.scalar(dot0);\n        let t1 = vec1.scalar(dot1);\n        vec2.copy(vec2.sub(t.add(t1)));\n        vec2.normalize();\n    }\n\n\n    /**\n     * Input vec2 must be a nonzero vector. The output is an orthonormal\n     * basis {vec0,vec1,vec2}.  The input vec2 is normalized by this function.\n     * If you know that vec2 is already unit length, use the function\n     * generateComplementBasis to compute vec0 and vec1.\n     * Input vec0 must be a unit-length vector.  The output vectors\n     * {vec0,vec1} are unit length and mutually perpendicular, and\n     * {vec0,vec1,vec2} is an orthonormal basis.\n     *\n     * @param {Vector} vec0\n     * @param {Vector} vec1\n     * @param {Vector} vec2\n     */\n    static generateComplementBasis(vec0, vec1, vec2) {\n        vec2.normalize();\n        let invLength;\n\n        if (Math.abs(vec2.x) >= Math.abs(vec2.y)) {\n            // vec2.x or vec2.z is the largest magnitude component, swap them\n            invLength = 1 / Math.hypot(vec2.x, vec2.z);\n            vec0.x = -vec2.z * invLength;\n            vec0.y = 0;\n            vec0.z = +vec2.x * invLength;\n            vec1.x = vec2.y * vec0.z;\n            vec1.y = vec2.z * vec0.x - vec2.x * vec0.z;\n            vec1.z = -vec2.y * vec0.x;\n        }\n        else {\n            // vec2.y or vec2.z is the largest magnitude component, swap them\n            invLength = 1 / Math.hypot(vec2.y, vec2.z);\n            vec0.x = 0;\n            vec0.y = +vec2.z * invLength;\n            vec0.z = -vec2.y * invLength;\n            vec1.x = vec2.y * vec0.z - vec2.z * vec0.y;\n            vec1.y = -vec2.x * vec0.z;\n            vec1.z = vec2.x * vec0.y;\n        }\n    }\n}\n\nexport { Vector };","import { Vector } from './Vector';\n\nclass Point extends Float32Array {\n\n    constructor(x = 0, y = 0, z = 0) {\n        super(4);\n        if (x instanceof Float32Array) {\n            this.set(x.slice(0, 3));\n        } else {\n            this[0] = x;\n            this[1] = y;\n            this[2] = z;\n        }\n        this[3] = 1;\n    }\n\n    //////////////////// 辅助读写器 ////////////////////////////////////////////\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(n) {\n        this[0] = n;\n    }\n\n    set y(n) {\n        this[1] = n;\n    }\n\n    set z(n) {\n        this[2] = n;\n    }\n\n    set w(n) {\n        this[3] = n;\n    }\n\n    /**\n     * 判断是否为同一点\n     * @param {Point} p\n     * @returns {boolean}\n     */\n    equals(p) {\n        return this[0] === p[0] && this[1] === p[1] && this[2] === p[2] && this[3] === p[3];\n    }\n\n    /**\n     * 复制\n     * @param {Point} p\n     * @returns {Point}\n     */\n    copy(p) {\n        this.set(p);\n        return this;\n    }\n\n    /**\n     * 赋值\n     * @param {float} x\n     * @param {float} y\n     * @param {float} z\n     */\n    assign(x, y, z) {\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n    }\n\n    /**\n     * 2个点相减，结果为向量\n     * @param {Point} p\n     * @returns {Vector}\n     */\n    subAsVector(p) {\n        return new Vector(\n            this[0] - p[0],\n            this[1] - p[1],\n            this[2] - p[2]\n        );\n    }\n\n    /**\n     * 点减向量，结果为点\n     * @param {Vector} v\n     */\n    sub(v) {\n        return new Point(\n            this[0] - v.x,\n            this[1] - v.y,\n            this[2] - v.z\n        );\n    }\n\n\n    /**\n     * 点加向量，结果为点\n     * @param {Vector} v\n     */\n    add(v) {\n        return new Point(\n            this[0] + v.x,\n            this[1] + v.y,\n            this[2] + v.z\n        );\n    }\n\n    /**\n     * 点乘标量\n     * @param {number} scalar\n     */\n    scalar(scalar) {\n        return new Point(\n            scalar * this[0],\n            scalar * this[1],\n            scalar * this[2]\n        );\n    }\n\n    /**\n     * 标量除\n     * @param {number} scalar\n     */\n    div(scalar) {\n        if (scalar !== 0) {\n            scalar = 1 / scalar;\n\n            return new Point(\n                this[0] * scalar,\n                this[1] * scalar,\n                this[2] * scalar\n            );\n        }\n        return new Point(MAX_REAL, MAX_REAL, MAX_REAL);\n    }\n\n    /**\n     * 填充固定值\n     * @param {number} val\n     */\n    fill(val) {\n        super.fill(val, 0, 3);\n    }\n\n    /**\n     * 求中心对称点\n     */\n    negative() {\n        return new Point(\n            -this[0],\n            -this[1],\n            -this[2]\n        );\n    }\n\n    /**\n     * 点与向量求点积\n     * @param {Vector} vec\n     * @returns {number}\n     */\n    dot(vec) {\n        return this[0] * vec.x + this[1] * vec.y + this[2] * vec.z;\n    }\n\n    static get ORIGIN() {\n        return new Point();\n    }\n}\n\nexport { Point };\n","import { Vector } from './Vector'\n\n/**\n * Plane - 平面\n * \n * 平面表示为 `Dot(N, X) - c = 0`, 其中：  \n *  - `N = (n0, n1, n2, 0)` 一个单位法向量  \n *  - `X = (x0, x1, x2, 1)` 是任何在该平面上的点  \n *  - `c` 是平面常量\n */\nexport class Plane extends Float32Array {\n\n    /**\n     * @param {Vector} normal 平面单位法向量\n     * @param {number} constant 平面常量\n     */\n    constructor(normal, constant) {\n        super(4);\n        this.set(normal, 0, 3);\n        this[3] = -constant;\n    }\n\n    /**\n     *  `c = dot(normal, point)`\n     * @param {Vector} normal specified\n     * @param {Point} point 平面上的点\n     */\n    static fromPoint1(normal, point) {\n        return new Plane(\n            normal,\n            point.dot(normal)\n        );\n    }\n\n    /**\n     * @param {number} n0\n     * @param {number} n1\n     * @param {number} n2\n     * @param {number} constant\n     */\n    static fromNumber(n0, n1, n2, constant) {\n        return new Plane(new Vector(n0, n1, n2), constant);\n    }\n\n    /**\n     * 通过3个点创建一个平面\n     *\n     * - `normal = normalize( cross(point1-point0, point2-point0) )`\n     * - `c = dot(normal, point0)`\n     *\n     * @param {Point} point0\n     * @param {Point} point1\n     * @param {Point} point2\n     */\n    static fromPoint3(point0, point1, point2) {\n        let edge1 = point1.subAsVector(point0);\n        let edge2 = point2.subAsVector(point0);\n        let normal = edge1.unitCross(edge2);\n        return new Plane(normal, point0.dot(normal));\n    }\n\n    get normal() {\n        return new Vector(this[0], this[1], this[2]);\n    }\n\n    set normal(n) {\n        this.set(n, 0, 3);\n    }\n\n    get constant() {\n        return -this[3];\n    }\n\n    set constant(c) {\n        this[3] = -c;\n    }\n\n    /**\n     * 复制\n     * @param {Plane} plane\n     * @return {Plane}\n     */\n    copy(plane) {\n        this[0] = plane[0];\n        this[1] = plane[1];\n        this[2] = plane[2];\n        this[3] = plane[3];\n        return this;\n    }\n\n    /**\n     * 计算平面法向量的长度，并返回，同时规格化法向量和平面常量\n     * @returns {number}\n     */\n    normalize() {\n        let length = Math.hypot(this[0], this[1], this[2]);\n\n        if (length > 0) {\n            let invLength = 1 / length;\n            this[0] *= invLength;\n            this[1] *= invLength;\n            this[2] *= invLength;\n            this[3] *= invLength;\n        }\n\n        return length;\n    }\n\n\n    /**\n     * 计算点到平面的距离[有符号]  \n     * > `d = dot(normal, point) - c`\n     *  - normal 是平面的法向量\n     *  - c 是平面常量  \n     * 结果说明\n     *  - 如果返回值是正值则点在平面的正坐标一边，\n     *  - 如果是负值，则在负坐标一边\n     *  - 否则在平面上\n     * @param {Point} p\n     * @returns {number}\n     */\n    distanceTo(p) {\n        return this[0] * p.x + this[1] * p.y + this[2] * p.z + this[3];\n    }\n\n    /**\n     * @param {Point} p\n     */\n    whichSide(p) {\n        let distance = this.distanceTo(p);\n\n        if (distance < 0) {\n            return -1;\n        }\n        else if (distance > 0) {\n            return +1;\n        }\n\n        return 0;\n    }\n}\n","import { _Math } from './Math';\r\nimport { Point } from './Point';\r\n\r\n/**\r\n * 4阶矩阵\r\n */\r\nexport class Matrix extends Float32Array {\r\n    constructor(m00, m01, m02, m03,\r\n        m10, m11, m12, m13,\r\n        m20, m21, m22, m23,\r\n        m30, m31, m32, m33) {\r\n        super(16);\r\n        this[0] = m00;\r\n        this[1] = m01;\r\n        this[2] = m02;\r\n        this[3] = m03;\r\n\r\n        this[4] = m10;\r\n        this[5] = m11;\r\n        this[6] = m12;\r\n        this[7] = m13;\r\n\r\n        this[8] = m20;\r\n        this[9] = m21;\r\n        this[10] = m22;\r\n        this[11] = m23;\r\n\r\n        this[12] = m30;\r\n        this[13] = m31;\r\n        this[14] = m32;\r\n        this[15] = m33;\r\n    }\r\n\r\n    /**\r\n     * 复制\r\n     * @param {Matrix} m\r\n     * @returns {Matrix}\r\n     */\r\n    copy(m) {\r\n        this[0] = m[0];\r\n        this[1] = m[1];\r\n        this[2] = m[2];\r\n        this[3] = m[3];\r\n        this[4] = m[4];\r\n        this[5] = m[5];\r\n        this[6] = m[6];\r\n        this[7] = m[7];\r\n        this[8] = m[8];\r\n        this[9] = m[9];\r\n        this[10] = m[10];\r\n        this[11] = m[11];\r\n        this[12] = m[12];\r\n        this[13] = m[13];\r\n        this[14] = m[14];\r\n        this[15] = m[15];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 判断2个矩阵是否相等\r\n     * @param {Matrix} m\r\n     * @returns {boolean}\r\n     */\r\n    equals(m) {\r\n        let floatEqual = _Math.floatEqual;\r\n        for (let i = 0; i < 16; ++i) {\r\n            if (!floatEqual(this[i], m[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 判断2个矩阵是否不等\r\n     * @param {Matrix} m\r\n     * @returns {boolean}\r\n     */\r\n    notEquals(m) {\r\n        let floatEqual = _Math.floatEqual;\r\n        for (let i = 0; i < 16; ++i) {\r\n            if (!floatEqual(this[i], m[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 置零矩阵\r\n     * @returns {Matrix}\r\n     */\r\n    zero() {\r\n        return this.fill(0);\r\n    }\r\n\r\n    /**\r\n     * 置单位矩阵\r\n     * @returns {Matrix}\r\n     */\r\n    identity() {\r\n        this.fill(0);\r\n        this[0] = this[5] = this[10] = this[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 转置\r\n     */\r\n    transpose() {\r\n        let m = this;\r\n        return new Matrix(\r\n            m[0], m[4], m[8], m[12],\r\n            m[1], m[5], m[9], m[13],\r\n            m[2], m[6], m[10], m[14],\r\n            m[3], m[7], m[11], m[15]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 计算逆矩阵\r\n     * @returns {Matrix}\r\n     */\r\n    inverse() {\r\n        let m = this;\r\n        let a00 = m[0], a01 = m[1], a02 = m[2], a03 = m[3];\r\n        let a10 = m[4], a11 = m[5], a12 = m[6], a13 = m[7];\r\n        let a20 = m[8], a21 = m[9], a22 = m[10], a23 = m[11];\r\n        let a30 = m[12], a31 = m[13], a32 = m[14], a33 = m[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        let invDet = 1 / (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\r\n        return new Matrix(\r\n            (a11 * b11 - a12 * b10 + a13 * b09) * invDet,\r\n            (-a01 * b11 + a02 * b10 - a03 * b09) * invDet,\r\n            (a31 * b05 - a32 * b04 + a33 * b03) * invDet,\r\n            (-a21 * b05 + a22 * b04 - a23 * b03) * invDet,\r\n            (-a10 * b11 + a12 * b08 - a13 * b07) * invDet,\r\n            (a00 * b11 - a02 * b08 + a03 * b07) * invDet,\r\n            (-a30 * b05 + a32 * b02 - a33 * b01) * invDet,\r\n            (a20 * b05 - a22 * b02 + a23 * b01) * invDet,\r\n            (a10 * b10 - a11 * b08 + a13 * b06) * invDet,\r\n            (-a00 * b10 + a01 * b08 - a03 * b06) * invDet,\r\n            (a30 * b04 - a31 * b02 + a33 * b00) * invDet,\r\n            (-a20 * b04 + a21 * b02 - a23 * b00) * invDet,\r\n            (-a10 * b09 + a11 * b07 - a12 * b06) * invDet,\r\n            (a00 * b09 - a01 * b07 + a02 * b06) * invDet,\r\n            (-a30 * b03 + a31 * b01 - a32 * b00) * invDet,\r\n            (a20 * b03 - a21 * b01 + a22 * b00) * invDet\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * 伴随矩阵\r\n     */\r\n    adjoint() {\r\n        let m00 = this[0], m01 = this[1], m02 = this[2], m03 = this[3];\r\n        let m10 = this[4], m11 = this[5], m12 = this[6], m13 = this[7];\r\n        let m20 = this[8], m21 = this[9], m22 = this[10], m23 = this[11];\r\n        let m30 = this[12], m31 = this[13], m32 = this[14], m33 = this[15];\r\n\r\n\r\n        let a0 = m00 * m11 - m01 * m10;\r\n        let a1 = m00 * m12 - m02 * m10;\r\n        let a2 = m00 * m13 - m03 * m10;\r\n        let a3 = m01 * m12 - m02 * m11;\r\n        let a4 = m01 * m13 - m03 * m11;\r\n        let a5 = m02 * m13 - m03 * m12;\r\n        let b0 = m20 * m31 - m21 * m30;\r\n        let b1 = m20 * m32 - m22 * m30;\r\n        let b2 = m20 * m33 - m23 * m30;\r\n        let b3 = m21 * m32 - m22 * m31;\r\n        let b4 = m21 * m33 - m23 * m31;\r\n        let b5 = m22 * m33 - m23 * m32;\r\n\r\n        return Matrix(\r\n            +m11 * b5 - m12 * b4 + m13 * b3,\r\n            -m01 * b5 + m02 * b4 - m03 * b3,\r\n            +m31 * a5 - m32 * a4 + m33 * a3,\r\n            -m21 * a5 + m22 * a4 - m23 * a3,\r\n\r\n            -m10 * b5 + m12 * b2 - m13 * b1,\r\n            +m00 * b5 - m02 * b2 + m03 * b1,\r\n            -m30 * a5 + m32 * a2 - m33 * a1,\r\n            +m20 * a5 - m22 * a2 + m23 * a1,\r\n\r\n            +m10 * b4 - m11 * b2 + m13 * b0,\r\n            -m00 * b4 + m01 * b2 - m03 * b0,\r\n            +m30 * a4 - m31 * a2 + m33 * a0,\r\n            -m20 * a4 + m21 * a2 - m23 * a0,\r\n\r\n            -m10 * b3 + m11 * b1 - m12 * b0,\r\n            +m00 * b3 - m01 * b1 + m02 * b0,\r\n            -m30 * a3 + m31 * a1 - m32 * a0,\r\n            +m20 * a3 - m21 * a1 + m22 * a0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 计算行列式\r\n     * @returns {number}\r\n     */\r\n    det() {\r\n        let m = this;\r\n        let a00 = m[0], a01 = m[1], a02 = m[2], a03 = m[3];\r\n        let a10 = m[4], a11 = m[5], a12 = m[6], a13 = m[7];\r\n        let a20 = m[8], a21 = m[9], a22 = m[10], a23 = m[11];\r\n        let a30 = m[12], a31 = m[13], a32 = m[14], a33 = m[15];\r\n\r\n        return a30 * a21 * a12 * a03 - a20 * a31 * a12 * a03 - a30 * a11 * a22 * a03 + a10 * a31 * a22 * a03 +\r\n            a20 * a11 * a32 * a03 - a10 * a21 * a32 * a03 - a30 * a21 * a02 * a13 + a20 * a31 * a02 * a13 +\r\n            a30 * a01 * a22 * a13 - a00 * a31 * a22 * a13 - a20 * a01 * a32 * a13 + a00 * a21 * a32 * a13 +\r\n            a30 * a11 * a02 * a23 - a10 * a31 * a02 * a23 - a30 * a01 * a12 * a23 + a00 * a31 * a12 * a23 +\r\n            a10 * a01 * a32 * a23 - a00 * a11 * a32 * a23 - a20 * a11 * a02 * a33 + a10 * a21 * a02 * a33 +\r\n            a20 * a01 * a12 * a33 - a00 * a21 * a12 * a33 - a10 * a01 * a22 * a33 + a00 * a11 * a22 * a33;\r\n    }\r\n\r\n    /**\r\n     * 对点或向量应用矩阵\r\n     * @param {Point|Vector} p\r\n     * @return {Point|Vector}\r\n     */\r\n    mulPoint(p) {\r\n        let c = this,\r\n            x = p[0], y = p[1], z = p[2], w = p[3];\r\n\r\n        return new p.constructor(\r\n            c[0] * x + c[4] * y + c[8] * z + c[12] * w,\r\n            c[1] * x + c[5] * y + c[9] * z + c[13] * w,\r\n            c[2] * x + c[6] * y + c[10] * z + c[14] * w,\r\n            c[3] * x + c[7] * y + c[11] * z + c[15] * w\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 矩阵相乘\r\n     * @param {Matrix} b\r\n     */\r\n    mul(b) {\r\n        let a = this,\r\n\r\n            a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = b[0], b01 = b[1], b02 = b[2], b03 = b[3],\r\n            b10 = b[4], b11 = b[5], b12 = b[6], b13 = b[7],\r\n            b20 = b[8], b21 = b[9], b22 = b[10], b23 = b[11],\r\n            b30 = b[12], b31 = b[13], b32 = b[14], b33 = b[15];\r\n\r\n        return new Matrix(\r\n            b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n            b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n            b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n            b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n            b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n            b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n            b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n            b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n            b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n            b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n            b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n            b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n            b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n            b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n            b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n            b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {number} s \r\n     * @return {Matrix}\r\n     */\r\n    scalar(s) {\r\n        for (let i = 0; i < 16; ++i)\r\n            this[i] *= s;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {Matrix} m\r\n     * @return {Matrix}\r\n     */\r\n    add(m) {\r\n        for (let i = 0; i < 16; ++i)\r\n            this[i] += m[i];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对点数组应用矩阵\r\n     * @param {number} num\r\n     * @param {Array<Point>} points\r\n     * @return {Array<Point>}\r\n     */\r\n    batchMul(num, points) {\r\n        let ret = new Array(points.length);\r\n        for (let i = 0; i < num; ++i) {\r\n            ret[i] = this.mulPoint(points[i]);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 正交化矩阵旋转部分\r\n     * @return {Matrix}\r\n     */\r\n    orthoNormalize() {\r\n        // Algorithm uses Gram-Schmidt orthogonalization.  If 'this' matrix has\r\n        // upper-left 3x3 block M = [m0|m1|m2], then the orthonormal output matrix\r\n        // is Q = [q0|q1|q2],\r\n        //\r\n        //   q0 = m0/|m0|\r\n        //   q1 = (m1-(q0*m1)q0)/|m1-(q0*m1)q0|\r\n        //   q2 = (m2-(q0*m2)q0-(q1*m2)q1)/|m2-(q0*m2)q0-(q1*m2)q1|\r\n        //\r\n        // where |V| indicates length of vector V and A*B indicates dot\r\n        // product of vectors A and B.\r\n\r\n        // Compute q0.\r\n        let invLength = Math.hypot(this[0], this[4], this[8]);\r\n\r\n        this[0] *= invLength;\r\n        this[4] *= invLength;\r\n        this[8] *= invLength;\r\n\r\n        // Compute q1.\r\n        let dot0 = this[0] * this[1] + this[4] * this[5] + this[8] * this[9];\r\n\r\n        this[1] -= dot0 * this[0];\r\n        this[5] -= dot0 * this[4];\r\n        this[9] -= dot0 * this[8];\r\n\r\n        invLength = Math.hypot(this[1], this[5], this[9]);\r\n\r\n        this[1] *= invLength;\r\n        this[5] *= invLength;\r\n        this[9] *= invLength;\r\n\r\n        // Compute q2.\r\n        let dot1 = this[1] * this[2] + this[5] * this[6] + this[9] * this[10];\r\n\r\n        dot0 = this[0] * this[2] + this[4] * this[6] + this[8] * this[10];\r\n\r\n        this[2] -= dot0 * this[0] + dot1 * this[1];\r\n        this[6] -= dot0 * this[4] + dot1 * this[5];\r\n        this[10] -= dot0 * this[8] + dot1 * this[9];\r\n\r\n        invLength = Math.hypot(this[2], this[6], this[10]);\r\n\r\n        this[2] *= invLength;\r\n        this[6] *= invLength;\r\n        this[10] *= invLength;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 获取矩阵R行N列的值\r\n     * @param {number} r  行\r\n     * @param {number} c  列\r\n     */\r\n    item(r, c) {\r\n        return this[r + 4 * c];\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵R行N列的值\r\n     * @param {number} r 行\r\n     * @param {number} c 列\r\n     * @param {number} value 值\r\n     */\r\n    setItem(r, c, value) {\r\n        this[r + 4 * c] = value;\r\n    }\r\n\r\n    /**\r\n     * @param {Point} p\r\n     */\r\n    timesDiagonal(p) {\r\n        let c = this;\r\n        return new Matrix(\r\n            c[0] * p[0], c[1] * p[1], c[2] * p[2], c[3],\r\n            c[4] * p[0], c[5] * p[1], c[6] * p[2], c[7],\r\n            c[8] * p[0], c[9] * p[1], c[10] * p[2], c[11],\r\n            c[12] * p[0], c[13] * p[1], c[14] * p[2], c[15]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {number} row\r\n     * @param {Point} p\r\n     */\r\n    setRow(row, p) {\r\n        let i = 4 * row;\r\n        this[i] = p[0];\r\n        this[i + 1] = p[1];\r\n        this[i + 2] = p[2];\r\n        this[i + 3] = p[3];\r\n    }\r\n\r\n    /**\r\n     * @param {number} row\r\n     */\r\n    getRow(row) {\r\n        let i = 4 * row;\r\n        let ret = new Point(this[i], this[i + 1], this[i + 2]);\r\n        ret[3] = this[i + 3];\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @param {number} col\r\n     * @param {Vector} p\r\n     */\r\n    setColumn(col, p) {\r\n        let s = col * 4;\r\n        this[s] = p[0];\r\n        this[s + 1] = p[1];\r\n        this[s + 2] = p[2];\r\n        this[s + 3] = p[3];\r\n    }\r\n\r\n    /**\r\n     * @param {number} col in\r\n     * @param {Vector} v out\r\n     */\r\n    getColumn(col, v) {\r\n        let s = col * 4;\r\n        v[0] = this[s];\r\n        v[1] = this[s + 1];\r\n        v[2] = this[s + 2];\r\n        v[3] = this[s + 3];\r\n    }\r\n\r\n    static get IDENTITY() {\r\n        return (new Matrix()).identity();\r\n    }\r\n\r\n    static get ZERO() {\r\n        return (new Matrix()).zero();\r\n    }\r\n\r\n    /**\r\n     * @param {Vector} p0\r\n     * @param {Vector} p1\r\n     * @param {Vector} p2\r\n     * @param {Point} p3\r\n     * @returns {Matrix}\r\n     */\r\n    static IPMake(p0, p1, p2, p3) {\r\n        return new Matrix(\r\n            p0.x, p1.x, p2.x, p3.x,\r\n            p0.y, p1.y, p2.y, p3.y,\r\n            p0.z, p1.z, p2.z, p3.z,\r\n            p0.w, p1.w, p2.w, p3.w\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Set the transformation to a perspective projection matrix onto a specified plane.\r\n     *\r\n     * @param {Point} origin - plane's origin\r\n     * @param {Vector} normal - unit-length normal for plane\r\n     * @param {Point} eye - the origin of projection\r\n     */\r\n    makePerspectiveProjection(origin, normal, eye) {\r\n        //     +-                                                 -+\r\n        // M = | Dot(N,E-P)*I - E*N^T    -(Dot(N,E-P)*I - E*N^T)*E |\r\n        //     |        -N^t                      Dot(N,E)         |\r\n        //     +-                                                 -+\r\n        //\r\n        // where E is the eye point, P is a point on the plane, and N is a\r\n        // unit-length plane normal.\r\n\r\n        let dotND = normal.dot(eye.sub(origin)); // normal * (eye -origin)\r\n\r\n        let nx = normal.x, ny = normal.y, nz = normal.z;\r\n        let ex = eye.x, ey = eye.y, ez = eye.z;\r\n        let t = this;\r\n\r\n        t[0] = dotND - ex * nx;\r\n        t[1] = -ey * nx;\r\n        t[2] = -ez * nx;\r\n        t[3] = -nx;\r\n\r\n        t[4] = -ex * ny;\r\n        t[5] = dotND - ey * ny;\r\n        t[6] = -ez * ny;\r\n        t[7] = -ny;\r\n        t[8] = -ex * nz;\r\n        t[9] = -ey * nz;\r\n        t[10] = dotND - ez * nz;\r\n        t[11] = -nz;\r\n\r\n        t[12] = -(t[0] * ex + t[1] * ey + t[2] * ez);\r\n        t[13] = -(t[4] * ex + t[5] * ey + t[6] * ez);\r\n        t[14] = -(t[8] * ex + t[9] * ey + t[10] * ez);\r\n        t[15] = eye.dot(normal);\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置为在一个有效平面上的斜投影矩阵\r\n     *\r\n     * @param {Point} origin 平面上任意一点\r\n     * @param {Vector} normal 平面法向量\r\n     * @param {Vector} dir 光源方向\r\n     */\r\n    makeObliqueProjection(origin, normal, dir) {\r\n        // 平面方程 origin * normal + d = 0\r\n        // n = (nx, ny, nz)  平面法向量\r\n        // l = (lx, ly, lz) 光源方向(单位向量)\r\n        //\r\n        // | nl-nx*lx    -nx*ly   -nx*lz  -nx  |\r\n        // |   -ny*lx  nl-ny*ly   -ny*lz  -ny  |\r\n        // |   -nz*lx    -nz*ly nl-nz*lz  -nz  |\r\n        // |    -d*lx     -d*ly    -d*lz   nl  |\r\n\r\n        let nl = normal.dot(dir);\r\n        let c = origin.dot(normal);\r\n\r\n        let m = this;\r\n        let lx = dir.x, ly = dir.y, lz = dir.z,\r\n            nx = normal.x, ny = normal.y, nz = normal.z;\r\n\r\n        m[0] = lx * nx - nl;\r\n        m[1] = ly * nx;\r\n        m[2] = lz * nx;\r\n        m[3] = 0;\r\n        m[4] = lx * ny;\r\n        m[5] = ly * ny - nl;\r\n        m[6] = lz * ny;\r\n        m[7] = 0;\r\n        m[8] = lx * nz;\r\n        m[9] = ly * nz;\r\n        m[10] = lz * nz - nl;\r\n        m[11] = 0;\r\n        m[12] = -c * lx;\r\n        m[13] = -c * ly;\r\n        m[14] = -c * lz;\r\n        m[15] = -nl;\r\n    }\r\n\r\n    /**\r\n     * Set the transformation to a reflection matrix through a specified plane.\r\n     *\r\n     * @param {Point} origin plane's origin\r\n     * @param {Vector} normal unit-length normal for plane\r\n     */\r\n    makeReflection(origin, normal) {\r\n        let d = 2 * origin.dot(normal);\r\n        let x = normal.x, y = normal.y, z = normal.z;\r\n        let xy = x * y, xz = x * z, yz = y * z;\r\n        this.fill(0);\r\n        this[0] = 1 - 2 * x * x;\r\n        this[1] = -2 * xy;\r\n        this[2] = -2 * xz;\r\n\r\n        this[4] = -2 * xy;\r\n        this[5] = 1 - 2 * y * y;\r\n        this[6] = -2 * yz;\r\n\r\n        this[8] = -2 * xz;\r\n        this[9] = -2 * yz;\r\n        this[10] = 1 - 2 * z * z;\r\n\r\n\r\n        this[12] = d * x;\r\n        this[13] = d * y;\r\n        this[14] = d * z;\r\n        this[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * @param {Vector} v0\r\n     * @param {Vector} v1\r\n     * @param {Vector} v2\r\n     * @param {Point} p\r\n     */\r\n    static fromVectorAndPoint(v0, v1, v2, p) {\r\n        return new Matrix(\r\n            v0.x, v0.y, v0.z, v0.w,\r\n            v1.x, v1.y, v1.z, v1.w,\r\n            v2.x, v2.y, v2.z, v2.w,\r\n            p.x, p.y, p.z, p.w\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 生成旋转矩阵\r\n     * @param {Vector} axis 旋转轴\r\n     * @param {number} angle 旋转角度\r\n     */\r\n    static makeRotation(axis, angle) {\r\n        let c = Math.cos(angle),\r\n            s = Math.sin(angle),\r\n            x = axis.x, y = axis.y, z = axis.z,\r\n            oc = 1 - c,\r\n            xx = x * x,\r\n            yy = y * y,\r\n            zz = z * z,\r\n            xym = x * y * oc,\r\n            xzm = x * z * oc,\r\n            yzm = y * z * oc,\r\n            xs = x * s,\r\n            ys = y * s,\r\n            zs = z * s;\r\n\r\n        return new Matrix(\r\n            oc * xx + c, xym + zs, xzm - ys, 0,\r\n            xym - zs, yy * oc + c, yzm + xs, 0,\r\n            xzm + ys, yzm - xs, zz * oc + c, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 从数组创建矩阵\r\n     * @param  {ArrayBuffer|Array<number>} arr\r\n     */\r\n    static fromArray(arr) {\r\n        console.assert(arr.length >= 16, 'invalid array for Matrix.fromArray');\r\n\r\n        return new Matrix(\r\n            arr[0], arr[1], arr[2], arr[3],\r\n            arr[4], arr[5], arr[6], arr[7],\r\n            arr[8], arr[9], arr[10], arr[11],\r\n            arr[12], arr[13], arr[14], arr[15]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 绕X轴旋转指定角度\r\n     * @param {number} angle\r\n     */\r\n    static makeRotateX(angle) {\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        return new Matrix(\r\n            1, 0, 0, 0,\r\n            0, c, s, 0,\r\n            0, -s, c, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @param {number} angle\r\n     */\r\n    static makeRotateY(angle) {\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        return new Matrix(\r\n            c, 0, -s, 0,\r\n            0, 1, 0, 0,\r\n            s, 0, c, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n    static makeRotateZ(angle) {\r\n        let c = Math.cos(angle), s = Math.sin(angle);\r\n        return new Matrix(\r\n            c, s, 0, 0,\r\n            -s, c, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n\r\n    /**\r\n     * 生成缩放矩阵\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {number} scaleZ\r\n     */\r\n    static makeScale(scaleX, scaleY, scaleZ) {\r\n        return new Matrix(\r\n            scaleX, 0, 0, 0,\r\n            0, scaleY, 0, 0,\r\n            0, 0, scaleZ, 0,\r\n            0, 0, 0, 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 平移快捷函数\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @param {number} z \r\n     */\r\n    static makeTranslate(x, y, z) {\r\n        return new Matrix(\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            x, y, z, 1\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 是否是单位矩阵\r\n     * @param {Matrix} dst\r\n     * @returns {boolean}\r\n     */\r\n    static isIdentity(dst) {\r\n        for (let i = 0, l = 16; i < l; ++i) {\r\n            if (i % 5) {\r\n                if (dst[i] !== 0) return false;\r\n            } else {\r\n                if (dst[i] !== 1) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { _Math } from './Math';\nimport { Matrix } from './Matrix';\n\n/**\n * Quaternion 四元数\n * \n * 四元数表示为  \n * `q = w + x*i + y*j + z*k`  \n * 但(w, x, y, z) 在4D空间不一定是单位向量\n */\nclass Quaternion extends Float32Array {\n\n    constructor(w = 0, x = 0, y = 0, z = 0) {\n        super(4);\n        this[0] = w;\n        this[1] = x;\n        this[2] = y;\n        this[3] = z;\n    }\n\n    get w() {\n        return this[0];\n    }\n\n    get x() {\n        return this[1];\n    }\n\n    get y() {\n        return this[2];\n    }\n\n    get z() {\n        return this[3];\n    }\n\n    set w(n) {\n        this[0] = n;\n    }\n\n    set x(n) {\n        this[1] = n;\n    }\n\n    set y(n) {\n        this[2] = n;\n    }\n\n    set z(n) {\n        this[3] = n;\n    }\n\n    /**\n     * 复制\n     * @param {Quaternion} q\n     * @returns {Quaternion}\n     */\n    copy(q) {\n        this.set(q);\n        return this;\n    }\n\n    /**\n     * 克隆四元素\n     */\n    clone() {\n        return new Quaternion(this[0], this[1], this[2], this[3]);\n    }\n\n    /**\n     * 判断是否相等\n     * @param {Quaternion} q\n     */\n    equals(q) {\n        return this[0] === q[0] && this[1] === q[1] && this[2] === q[2] && this[3] === q[3];\n    }\n\n    /**\n     * 加法\n     * @param {Quaternion} q\n     */\n    add(q) {\n        return new Quaternion(this[0] + q[0], this[1] + q[1], this[2] + q[2], this[3] + q[3]);\n    }\n\n    /**\n     * 减法\n     * @param {Quaternion} q\n     */\n    sub(q) {\n        return new Quaternion(this[0] - q[0], this[1] - q[1], this[2] - q[2], this[3] - q[3]);\n    }\n\n    /**\n     * 乘标量\n     * @param {number} scalar\n     */\n    scalar(scalar) {\n        return new Quaternion(this[0] * scalar, this[1] * scalar, this[2] * scalar, this[3] * scalar);\n    }\n\n    /**\n     * 除标量\n     * @param {Quaternion} scalar\n     */\n    div(scalar) {\n        if (q !== 0) {\n            let invScalar = 1 / scalar;\n            return new Quaternion(this[0] * invScalar, this[1] * invScalar, this[2] * invScalar, this[3] * invScalar);\n        }\n        return new Quaternion(_Math.MAX_REAL, _Math.MAX_REAL, _Math.MAX_REAL, _Math.MAX_REAL);\n    }\n\n    /**\n     * 乘四元数\n     * @param {Quaternion} q\n     */\n    mul(q) {\n        let tw = this[0], tx = this[1], ty = this[2], tz = this[3];\n        let qw = q[0], qx = q[1], qy = q[2], qz = q[3];\n\n        return new Quaternion(\n            tw * qw - tx * qx - ty * qy - tz * qz,\n            tw * qx + tx * qw + ty * qz - tz * qy,\n            tw * qy + ty * qw + tz * qx - tx * qz,\n            tw * qz + tz * qw + tx * qy - ty * qx\n        );\n    }\n\n    /**\n     * 求负\n     */\n    negative() {\n        return new Quaternion(-this[0], -this[1], -this[2], -this[3]);\n    }\n\n    /**\n     * 提取旋转矩阵\n     */\n    toRotateMatrix() {\n        let w = this[0], x = this[1], y = this[2], z = this[3],\n            x2 = 2 * x, y2 = 2 * y, z2 = 2 * z,\n            wx2 = x2 * w, wy2 = y2 * w, wz2 = z2 * w,\n            xx2 = x2 * x, xy2 = y2 * x, xz2 = z2 * x,\n            yy2 = y2 * y, yz2 = z2 * y, zz2 = z2 * z;\n\n        return new Matrix(\n            1 - yy2 - zz2, xy2 - wz2, xz2 + wy2, 0,\n            xy2 + wz2, 1 - xx2 - zz2, yz2 - wx2, 0,\n            xz2 - wy2, yz2 + wx2, 1 - xx2 - yy2, 0,\n            0, 0, 0, 1\n        );\n    }\n\n    /**\n     * 提取旋转矩阵\n     * - 0: axis\n     * - 1: angle\n     * @returns {Array<number|Vector>}\n     */\n    toAxisAngle() {\n        // The quaternion representing the rotation is\n        //   q = cos(A/2)+sin(A/2)*(x*i+y*j+z*k)\n\n        let ret = [];\n        let sqrLength = this[1] * this[1] + this[2] * this[2] + this[3] * this[3];\n\n        if (sqrLength > 0) {\n            ret[1] = 2 * _Math.acos(this[0]);\n            let invLength = 1 / Math.sqrt(sqrLength);\n            ret[0] = new Vector(this[1] * invLength, this[2] * invLength, this[3] * invLength);\n        }\n        else {\n            // Angle is 0 (mod 2*pi), so any axis will do.\n            ret[1] = 0;\n            ret[0] = new Vector(1);\n        }\n        return ret;\n    }\n\n    /**\n     * 求当前四元数的模\n     */\n    get length() {\n        return Math.hypot(this[0], this[1], this[2], this[3]);\n    }\n\n    /**\n     * 模的平方\n     */\n    squaredLength() {\n        return this[0] * this[0] + this[1] * this[1] + this[2] * this[2] + this[3] * this[3];\n    }\n\n    /**\n     * 规格化\n     */\n    normalize() {\n        let length = this.length;\n\n        if (length > 0) {\n            let invLength = 1 / length;\n            this[0] *= invLength;\n            this[1] *= invLength;\n            this[2] *= invLength;\n            this[3] *= invLength;\n        }\n        else {\n            length = 0;\n            super.fill(0);\n        }\n\n        return length;\n    }\n\n    /**\n     * apply to non-zero quaternion\n     * @returns {Quaternion}\n     */\n    inverse() {\n        let norm = this.squaredLength();\n        if (norm > 0) {\n            let invNorm = 1 / norm;\n            return new Quaternion(this[0] * invNorm, -this[1] * invNorm, -this[2] * invNorm, -this[3] * invNorm);\n        }\n        return Quaternion.ZERO;\n    }\n\n    /**\n     * negate x, y, and z terms\n     * @returns {Quaternion}\n     */\n    conjugate() {\n        return new Quaternion(this[0], -this[1], -this[2], -this[3]);\n    }\n\n    /**\n     * apply to quaternion with w = 0\n     */\n    exp() {\n        // If q = A*(x*i+y*j+z*k) where (x,y,z) is unit length, then\n        // exp(q) = cos(A)+sin(A)*(x*i+y*j+z*k).  If sin(A) is near zero,\n        // use exp(q) = cos(A)+A*(x*i+y*j+z*k) since A/sin(A) has limit 1.\n\n        let angle = Math.hypot(this[1], this[2], this[3]);\n        let sn = Math.sin(angle);\n        let w = Math.cos(angle);\n        if (Math.abs(sn) > 0) {\n            let coeff = sn / angle;\n            return new Quaternion(w, coeff * this[1], coeff * this[2], coeff * this[3]);\n        }\n        return new Quaternion(w, this[1], this[2], this[3]);\n    }\n\n    /**\n     * apply to unit-length quaternion\n     */\n    log() {\n        // If q = cos(A)+sin(A)*(x*i+y*j+z*k) where (x,y,z) is unit length, then\n        // log(q) = A*(x*i+y*j+z*k).  If sin(A) is near zero, use log(q) =\n        // sin(A)*(x*i+y*j+z*k) since sin(A)/A has limit 1.\n\n        if (Math.abs(this[0]) < 1) {\n            let angle = _Math.acos(this[0]);\n            let sn = Math.sin(angle);\n            if (Math.abs(sn) > 0) {\n                let coeff = angle / sn;\n                return new Quaternion(0, coeff * this[1], coeff * this[2], coeff * this[3]);\n            }\n        }\n        return new Quaternion(0, this[1], this[2], this[3]);\n    }\n\n    /**\n     * 使用四元数旋转向量\n     * >内部转为矩阵后旋转\n     * @param {Vector} vec\n     * @returns {Vector}\n     */\n    rotate(vec) {\n        // Given a vector u = (x0,y0,z0) and a unit length quaternion\n        // q = <w,x,y,z>, the vector v = (x1,y1,z1) which represents the\n        // rotation of u by q is v = q*u*q^{-1} where * indicates quaternion\n        // multiplication and where u is treated as the quaternion <0,x0,y0,z0>.\n        // Note that q^{-1} = <w,-x,-y,-z>, so no real work is required to\n        // invert q.  Now\n        //\n        //   q*u*q^{-1} = q*<0,x0,y0,z0>*q^{-1}\n        //     = q*(x0*i+y0*j+z0*k)*q^{-1}\n        //     = x0*(q*i*q^{-1})+y0*(q*j*q^{-1})+z0*(q*k*q^{-1})\n        //\n        // As 3-vectors, q*i*q^{-1}, q*j*q^{-1}, and 2*k*q^{-1} are the columns\n        // of the rotation matrix computed in Quaternion::ToRotationMatrix.\n        // The vector v is obtained as the product of that rotation matrix with\n        // vector u.  As such, the quaternion representation of a rotation\n        // matrix requires less space than the matrix and more time to compute\n        // the rotated vector.  Typical space-time tradeoff...\n\n        return this.toRotateMatrix().mulPoint(vec);\n    }\n\n    /**\n     * 球面插值\n     * @param {number} t\n     * @param {Quaternion} p\n     * @param {Quaternion} q\n     * @returns {Quaternion}\n     */\n    slerp(t, p, q) {\n        let cs = p.dot(q);\n        let angle = _Math.acos(cs);\n\n        if (Math.abs(angle) > 0) {\n            let sn = Math.sin(angle);\n            let invSn = 1 / sn;\n            let tAngle = t * angle;\n            let coeff0 = Math.sin(angle - tAngle) * invSn;\n            let coeff1 = Math.sin(tAngle) * invSn;\n\n            this[0] = coeff0 * p[0] + coeff1 * q[0];\n            this[1] = coeff0 * p[1] + coeff1 * q[1];\n            this[2] = coeff0 * p[2] + coeff1 * q[2];\n            this[3] = coeff0 * p[3] + coeff1 * q[3];\n        }\n        else {\n            this.copy(p);\n        }\n        return this;\n    }\n\n    /**\n     * 球面插值\n     * @param {number} t\n     * @param {Quaternion} p\n     * @param {Quaternion} q\n     * @param {number} extraSpins\n     * @returns {Quaternion}\n     */\n    slerpExtraSpins(t, p, q, extraSpins) {\n        let cs = p.dot(q);\n        let angle = _Math.acos(cs);\n\n        if (Math.abs(angle) >= _Math.ZERO_TOLERANCE) {\n            let sn = Math.sin(angle);\n            let phase = Math.PI * extraSpins * t;\n            let invSin = 1 / sn;\n            let coeff0 = Math.sin((1 - t) * angle - phase) * invSin;\n            let coeff1 = Math.sin(t * angle + phase) * invSin;\n\n            this[0] = coeff0 * p[0] + coeff1 * q[0];\n            this[1] = coeff0 * p[1] + coeff1 * q[1];\n            this[2] = coeff0 * p[2] + coeff1 * q[2];\n            this[3] = coeff0 * p[3] + coeff1 * q[3];\n        }\n        else {\n            this.copy(p);\n        }\n\n        return this;\n    }\n\n    /**\n     * 球面2次插值中间项\n     * @param {Quaternion} q0\n     * @param {Quaternion} q1\n     * @param {Quaternion} q2\n     * @returns {Quaternion}\n     */\n    intermediate(q0, q1, q2) {\n        let q1Inv = q1.conjugate();\n        let p0 = q1Inv.mul(q0).log();\n        let p2 = q1Inv.mul(q2).log();\n        let arg = p0.add(p2).scalar(-0.25).exp();\n        this.copy(q1.mul(arg));\n\n        return this;\n    }\n\n    /**\n     * 球面2次插值\n     * @param {number} t\n     * @param {Quaternion} q0\n     * @param {Quaternion} a0\n     * @param {Quaternion} a1\n     * @param {Quaternion} q1\n     * @returns {Quaternion}\n     */\n    squad(t, q0, a0, a1, q1) {\n        let slerpT = 2 * t * (1 - t);\n\n        let slerpP = this.slerp(t, q0, q1);\n        let slerpQ = this.slerp(t, a0, a1);\n        return this.slerp(slerpT, slerpP, slerpQ);\n    }\n\n    static get ZERO() {\n        return new Quaternion();\n    }\n\n    static get IDENTIRY() {\n        return new Quaternion(1);\n    }\n\n    /**\n     * 从矩阵的旋转部分创建四元数\n     * @param {Matrix} rot\n     */\n    static fromRotateMatrix(rot) {\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n        // article \"Quaternion Calculus and Fast Animation\".\n\n        let trace = rot[0] + rot[5] + rot[10];\n        let root;\n\n        if (trace > 0) {\n            // |w| > 1/2, may as well choose w > 1/2\n            root = Math.sqrt(trace + 1);  // 2w\n            let root1 = 0.5 / root;  // 1/(4w)\n\n            return new Quaternion(\n                0.5 * root,\n                (rot[9] - rot[6]) * root1,\n                (rot[2] - rot[8]) * root1,\n                (rot[4] - rot[1]) * root1\n            );\n        }\n\n        let next = [1, 2, 0];\n\n        // |w| <= 1/2\n        let i = 0;\n        if (rot[5] > rot[0]) {\n            i = 1;\n        }\n        if (rot[10] > rot.item(i, i)) {\n            i = 2;\n        }\n\n        let j = next[i];\n        let k = next[j];\n        root = Math.sqrt(rot.item(i, i) - rot.item(j, j) - rot.item(k, k) + 1);\n        let ret = new Array(4);\n        ret[i + 1] = 0.5 * root;\n        root = 0.5 / root;\n        ret[0] = (rot.item(k, j) - rot.item(j, k)) * root;\n        ret[j] = (rot.item(j, i) + rot.item(i, j)) * root;\n        ret[k] = (rot.item(k, i) + rot.item(i, k)) * root;\n\n        return new Quaternion(ret[0], ret[1], ret[2], ret[3]);\n    }\n\n    /**\n     * 使用旋转轴和旋转角度创建四元数\n     * @param {Vector} axis\n     * @param {number} angle\n     */\n    static fromAxisAngle(axis, angle) {\n        // assert:  axis[] is unit length\n        //\n        // The quaternion representing the rotation is\n        //   q = cos(A/2)+sin(A/2)*(x*i+y*j+z*k)\n\n        let halfAngle = 0.5 * angle;\n        let sn = Math.sin(halfAngle);\n        return new Quaternion(Math.cos(halfAngle), sn * axis.x, sn * axis.y, sn * axis.z);\n    }\n\n\n    /**\n     * 计算V1 到 V2 的旋转四元数， 旋转轴同时垂直于V1&V1\n     * @param {Vector} v1 单位向量\n     * @param {Vector} v2 单位向量\n     */\n    static align(v1, v2) {\n        // If V1 and V2 are not parallel, the axis of rotation is the unit-length\n        // vector U = Cross(V1,V2)/Length(Cross(V1,V2)).  The angle of rotation,\n        // A, is the angle between V1 and V2.  The quaternion for the rotation is\n        // q = cos(A/2) + sin(A/2)*(ux*i+uy*j+uz*k) where U = (ux,uy,uz).\n        //\n        // (1) Rather than extract A = acos(Dot(V1,V2)), multiply by 1/2, then\n        //     compute sin(A/2) and cos(A/2), we reduce the computational costs by\n        //     computing the bisector B = (V1+V2)/Length(V1+V2), so cos(A/2) =\n        //     Dot(V1,B).\n        //\n        // (2) The rotation axis is U = Cross(V1,B)/Length(Cross(V1,B)), but\n        //     Length(Cross(V1,B)) = Length(V1)*Length(B)*sin(A/2) = sin(A/2), in\n        //     which case sin(A/2)*(ux*i+uy*j+uz*k) = (cx*i+cy*j+cz*k) where\n        //     C = Cross(V1,B).\n        //\n        // If V1 = V2, then B = V1, cos(A/2) = 1, and U = (0,0,0).  If V1 = -V2,\n        // then B = 0.  This can happen even if V1 is approximately -V2 using\n        // floating point arithmetic, since Vector3::Normalize checks for\n        // closeness to zero and returns the zero vector accordingly.  The test\n        // for exactly zero is usually not recommend for floating point\n        // arithmetic, but the implementation of Vector3::Normalize guarantees\n        // the comparison is robust.  In this case, the A = pi and any axis\n        // perpendicular to V1 may be used as the rotation axis.\n\n        let bisector = v1.add(v2).normalize();\n        let cosHalfAngle = v1.dot(bisector);\n        let w, x, y, z;\n\n        w = cosHalfAngle;\n\n        if (cosHalfAngle !== 0) {\n            let cross = v1.cross(bisector);\n            x = cross.x;\n            y = cross.y;\n            z = cross.z;\n        }\n        else {\n            let invLength;\n            if (Math.abs(v1.x) >= Math.abs(v1.y)) {\n                // V1.x or V1.z is the largest magnitude component.\n                invLength = Math.hypot(v1.x, v1.z);\n                x = -v1.z * invLength;\n                y = 0;\n                z = +v1.x * invLength;\n            }\n            else {\n                // V1.y or V1.z is the largest magnitude component.\n                invLength = Math.hypot(v1.y, v1.z);\n                x = 0;\n                y = +v1.z * invLength;\n                z = -v1.y * invLength;\n            }\n        }\n\n        return new Quaternion(w, x, y, z);\n    }\n\n    /**\n     * @param {Quaternion} q \n     */\n    dot(q) {\n        return this[0] * q[0] + this[1] * q[1] + this[2] * q[2] + this[3] * q[3];\n    }\n}\n\nexport { Quaternion };","/**\n * Polynomial1\n */\nexport class Polynomial1 {}\n","import { Vector } from './Vector';\n\nclass Triangle3 {\n\t/**\n\t * @param {Vector} v0 \n\t * @param {Vector} v1 \n\t * @param {Vector} v2 \n\t */\n\tconstructor(v0 = undefined, v1 = undefined, v2 = undefined) {\n\t\tthis.V = [Vector.ZERO, Vector.ZERO, Vector.ZERO];\n\t\tif (v0 !== undefined) {\n\t\t\tthis.V[0].copy(v0);\n\t\t\tthis.V[1].copy(v1);\n\t\t\tthis.V[2].copy(v2);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Vector} v \n\t */\n\tdistanceTo(v) {\n\t\tlet diff = this.V[0].sub(v);\n\t\tlet edge0 = this.V[1].sub(this.V[0]);\n\t\tlet edge1 = this.V[2].sub(this.V[0]);\n\t\tlet a00 = edge0.squaredLength();\n\t\tlet a01 = edge0.dot(edge1);\n\t\tlet a11 = edge1.squaredLength();\n\t\tlet b0 = diff.dot(edge0);\n\t\tlet b1 = diff.dot(edge1);\n\t\tlet c = diff.squaredLength();\n\t\tlet det = Math.abs(a00 * a11 - a01 * a01);\n\t\tlet s = a01 * b1 - a11 * b0;\n\t\tlet t = a01 * b0 - a00 * b1;\n\t\tlet sqrDistance;\n\n\t\tif (s + t <= det) {\n\t\t\tif (s < 0) {\n\t\t\t\tif (t < 0)  // region 4\n\t\t\t\t{\n\t\t\t\t\tif (b0 < 0) {\n\t\t\t\t\t\tif (-b0 >= a00) {\n\t\t\t\t\t\t\tsqrDistance = a00 + (2) * b0 + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsqrDistance = c - b0 * b0 / a00;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (b1 >= 0) {\n\t\t\t\t\t\t\tsqrDistance = c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (-b1 >= a11) {\n\t\t\t\t\t\t\tsqrDistance = a11 + 2 * b1 + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsqrDistance = c - b1 * b1 / a11;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse  // region 3\n\t\t\t\t{\n\t\t\t\t\tif (b1 >= 0) {\n\t\t\t\t\t\tsqrDistance = c;\n\t\t\t\t\t}\n\t\t\t\t\telse if (-b1 >= a11) {\n\t\t\t\t\t\tsqrDistance = a11 + 2 * b1 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsqrDistance = c - b1 * b1 / a11;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (t < 0)  // region 5\n\t\t\t{\n\t\t\t\tif (b0 >= 0) {\n\t\t\t\t\tsqrDistance = c;\n\t\t\t\t}\n\t\t\t\telse if (-b0 >= a00) {\n\t\t\t\t\tsqrDistance = a00 + 2 * b0 + c;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsqrDistance = b0 * s + c - b0 * b0 / a00;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // region 0\n\t\t\t{\n\t\t\t\t// The minimum is at an interior point of the triangle.\n\t\t\t\tlet invDet = 1 / det;\n\t\t\t\ts *= invDet;\n\t\t\t\tt *= invDet;\n\t\t\t\tsqrDistance = s * (a00 * s + a01 * t + 2 * b0) + t * (a01 * s + a11 * t + 2 * b1) + c;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet tmp0, tmp1, numer, denom;\n\n\t\t\tif (s < 0)  // region 2\n\t\t\t{\n\t\t\t\ttmp0 = a01 + b0;\n\t\t\t\ttmp1 = a11 + b1;\n\t\t\t\tif (tmp1 > tmp0) {\n\t\t\t\t\tnumer = tmp1 - tmp0;\n\t\t\t\t\tdenom = a00 - 2 * a01 + a11;\n\t\t\t\t\tif (numer >= denom) {\n\t\t\t\t\t\tsqrDistance = a00 + 2 * b0 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts = numer / denom;\n\t\t\t\t\t\tt = 1 - s;\n\t\t\t\t\t\tsqrDistance = s * (a00 * s + a01 * t + 2 * b0) + t * (a01 * s + a11 * t + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (tmp1 <= 0) {\n\t\t\t\t\t\tsqrDistance = a11 + 2 * b1 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b1 >= 0) {\n\t\t\t\t\t\tsqrDistance = c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsqrDistance = c - b1 * b1 / a11;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (t < 0)  // region 6\n\t\t\t{\n\t\t\t\ttmp0 = a01 + b1;\n\t\t\t\ttmp1 = a00 + b0;\n\t\t\t\tif (tmp1 > tmp0) {\n\t\t\t\t\tnumer = tmp1 - tmp0;\n\t\t\t\t\tdenom = a00 - 2 * a01 + a11;\n\t\t\t\t\tif (numer >= denom) {\n\t\t\t\t\t\tt = 1;\n\t\t\t\t\t\ts = 0;\n\t\t\t\t\t\tsqrDistance = a11 + 2 * b1 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tt = numer / denom;\n\t\t\t\t\t\ts = 1 - t;\n\t\t\t\t\t\tsqrDistance = s * (a00 * s + a01 * t + 2 * b0) + t * (a01 * s + a11 * t + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (tmp1 <= 0) {\n\t\t\t\t\t\tsqrDistance = a00 + 2 * b0 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b0 >= 0) {\n\t\t\t\t\t\tsqrDistance = c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsqrDistance = c - b0 * b0 / a00;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse  // region 1\n\t\t\t{\n\t\t\t\tnumer = a11 + b1 - a01 - b0;\n\t\t\t\tif (numer <= 0) {\n\t\t\t\t\tsqrDistance = a11 + 2 * b1 + c;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdenom = a00 - 2 * a01 + a11;\n\t\t\t\t\tif (numer >= denom) {\n\t\t\t\t\t\tsqrDistance = a00 + 2 * b0 + c;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts = numer / denom;\n\t\t\t\t\t\tt = 1 - s;\n\t\t\t\t\t\tsqrDistance = s * (a00 * s + a01 * t + 2 * b0) + t * (a01 * s + a11 * t + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Math.sqrt(Math.abs(sqrDistance));\n\t}\n}\n\nexport { Triangle3 };","import { Vector } from './Vector';\nimport { Point } from './Point';\n\nclass Line3 {\n\t/**\n\t * @param {Point} org \n\t * @param {Vector} dir\n\t */\n\tconstructor(org, dir) {\n\t\tthis.org = Point.ORIGIN;\n\t\tthis.dir = Vector.ZERO;\n\t\tif (org) this.org.copy(org);\n\t\tif (dir) this.dir.copy(dir);\n\t}\n}\n\nexport { Line3 };","\nclass D3Object {\n    constructor(name = '') {\n        this.name = name || new.target.name;\n    }\n\n    getObjectByName(name) {\n        if (name === this.name) {\n            return this;\n        }\n        return null;\n    }\n\n    getAllObjectsByName(name, objs) {\n        if (name === this.name) {\n            objs.push(this);\n        }\n    }\n\n    // streaming.\n    load(inStream) {\n        inStream.readUniqueID(this);\n        this.name = inStream.readString();\n    }\n    link(inStream) { }\n    postLink() { }\n\n    save(tar) {\n        tar.writeString(this.constructor.name);\n        tar.writeUniqueID(this);\n        tar.writeString(this.name);\n    }\n\n    static get factories() {\n        return D3Object._factories;\n    }\n\n    static find(name) {\n        return D3Object.factories.get(name);\n    }\n\n    static factory(inStream) {\n        let obj = new this();\n        obj.load(inStream);\n        return obj;\n    }\n\n    /**\n     * @param {string} name \n     * @param {function(InStream):D3Object} factory \n     */\n    static Register(name, factory) {\n        D3Object.factories.set(name, factory);\n    }\n}\n\n/**\n * @type {Map<string, function(InStream):D3Object>}\n */\nD3Object._factories = new Map();\nexport { D3Object };","class BinDataView {\n\n    /**\n     * @param {ArrayBuffer} buf\n     * @param {number} offset\n     * @param {number} size\n     */\n    constructor(buf, offset = 0, size = 0) {\n        if (size === 0) {\n            size = buf.byteLength - offset;\n        }\n        this.dv = new DataView(buf, offset, size);\n        this.offset = 0;\n    }\n\n    int8() {\n        return this.dv.getInt8(this.offset++);\n    }\n    setInt8(val) {\n        this.dv.setInt8(this.offset++, val);\n    }\n\n    uint8() {\n        return this.dv.getUint8(this.offset++);\n    }\n    setUint8(val) {\n        this.dv.setUint8(this.offset++, val);\n    }\n\n    uint16() {\n        let val = this.dv.getUint16(this.offset, true);\n        this.offset += 2;\n        return val;\n    }\n\n    setUint16(val) {\n        this.dv.setUint16(this.offset, val, true);\n        this.offset += 2;\n    }\n\n    int16() {\n        let val = this.dv.getInt16(this.offset, true);\n        this.offset += 2;\n        return val;\n    }\n    setInt16(val) {\n        this.dv.setInt16(this.offset, val, true);\n        this.offset += 2;\n    }\n\n    int32() {\n        let val = this.dv.getInt32(this.offset, true);\n        this.offset += 4;\n        return val;\n    }\n    setInt32(val) {\n        this.dv.setInt32(this.offset, val, true);\n        this.offset += 4;\n    }\n\n    uint32() {\n        let val = this.dv.getUint32(this.offset, true);\n        this.offset += 4;\n        return val;\n    }\n\n    setUint32(val) {\n        this.dv.setUint32(this.offset, val, true);\n        this.offset += 4;\n    }\n\n    float32() {\n        let val = this.dv.getFloat32(this.offset, true);\n        this.offset += 4;\n        return val;\n    }\n\n    setFloat32(val) {\n        this.dv.setFloat32(this.offset, val, true);\n        this.offset += 4;\n    }\n\n    float64() {\n        let val = this.dv.getFloat64(this.offset, true);\n        this.offset += 8;\n        return val;\n    }\n\n    setFloat64(val) {\n        this.dv.setFloat64(this.offset, val, true);\n        this.offset += 8;\n    }\n\n    string() {\n        let size = this.uint16(), ret = '';\n        for (let i = 0; i < size; ++i) {\n            ret += String.fromCharCode(this.uint8());\n        }\n        return ret;\n    }\n    setString(val) {\n        let size = val.length;\n        this.setUint16(size);\n        for (let i = 0; i < size; ++i) {\n            this.setUint8(val[i].charCodeAt(i));\n        }\n        this.offset += size;\n    }\n\n    bytes(size) {\n        let val = this.dv.buffer.slice(this.offset, size);\n        this.offset += size;\n        return new Uint8Array(val);\n    }\n\n    setBytes(val) {\n        (new Uint8Array(this.dv.buffer, this.offset)).set(val);\n        this.offset += val.byteLength;\n    }\n}\n\nexport { BinDataView };\n","import { D3Object } from '../../core/D3Object';\n\nclass Controller extends D3Object {\n    constructor() {\n        super();\n        this.repeat = Controller.RT_CLAMP;\n        this.minTime = 0;                      // default = 0\n        this.maxTime = 0;                      // default = 0\n        this.phase = 0;                        // default = 0\n        this.frequency = 1;                    // default = 1\n        this.active = true;                    // default = true\n        this.object = null;                    // ControlledObject.\n        this.applicationTime = -1;             // application time, ms\n    }\n\n    /**\n     * Conversion from application time units to controller time units.\n     * Derived classes may use this in their update routines.\n     * @param {number} applicationTime\n     * @returns {number}\n     * @protected\n     */\n    getControlTime(applicationTime) {\n        let controlTime = this.frequency * applicationTime + this.phase;\n\n        if (this.repeat === Controller.RT_CLAMP) {\n            // Clamp the time to the [min, max] interval.\n            if (controlTime < this.minTime) {\n                return this.minTime;\n            }\n            if (controlTime > this.maxTime) {\n                return this.maxTime;\n            }\n            return controlTime;\n        }\n\n        const timeRange = this.maxTime - this.minTime;\n        if (timeRange > 0) {\n            let multiples = (controlTime - this.minTime) / timeRange;\n            let integerTime = Math.floor(multiples);\n            let fractionTime = multiples - integerTime;\n            if (this.repeat === Controller.RT_WRAP) {\n                return this.minTime + fractionTime * timeRange;\n            }\n\n            // repeat == RT_CYCLE\n            if (integerTime & 1) {\n                // Go backward in time.\n                return this.maxTime - fractionTime * timeRange;\n            }\n            else {\n                // Go forward in time.\n                return this.minTime + fractionTime * timeRange;\n            }\n        }\n\n        // minTime is equal maxTime\n        return this.minTime;\n    }\n\n    /**\n     * The animation update\n     * @param {number} applicationTime - milliseconds\n     */\n    update(applicationTime) {\n        if (this.active) {\n            this.applicationTime = applicationTime;\n            return true;\n        }\n        return false;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.repeat = inStream.readEnum();\n        this.minTime = inStream.readFloat64();\n        this.maxTime = inStream.readFloat64();\n        this.phase = inStream.readFloat64();\n        this.frequency = inStream.readFloat64();\n        this.active = inStream.readBool();\n        this.object = inStream.readPointer();\n        this.applicationTime = -1;\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.object = inStream.resolveLink(this.object);\n    }\n}\n\n// Time management.  A controller may use its own time scale, and it\n// specifies how times are to be mapped to application time.\nController.RT_CLAMP = 0;  // default\nController.RT_WRAP = 1;\nController.RT_CYCLE = 2;\n\nexport { Controller };","import { Matrix, Point } from '../../math/index';\n\n/**\n * 变换用公式 Y= M*X+T 表示:  \n * - M  3\\*3 Matrix, 大部分情况下为\n *  - 旋转矩阵\n *  - 或者 `M = R*S`:\n *   - R = 旋转矩阵\n *   - S = 正缩放对角矩阵  \n *     为支持模型包,允许普通仿射变换  \n *      M可以是任意可逆3*3矩阵\n * - T 平移向量\n * - X 前方向为Y轴的向量  \n * 从Y翻转至X, 一般情况下记做: `X = M^{-1}*(Y-T)`\n *\n * 在 M = R*S 的特殊情况下:\n * `X = S^{-1}*R^t*(Y-T)`\n * - `S^{-1}` S的逆\n * - `R^t` R的转置矩阵\n *\n * 构造默认是个单位变换\n */\nclass Transform {\n    constructor() {\n        // The full 4x4 homogeneous matrix H = {{M,T},{0,1}} and its inverse\n        // H^{-1} = {M^{-1},-M^{-1}*T},{0,1}}.  The inverse is computed only\n        // on demand.\n\n        // 变换矩阵\n        this.__matrix = Matrix.IDENTITY;\n        // 变换矩阵的逆矩阵\n        this._invMatrix = Matrix.IDENTITY;\n\n        this._matrix = Matrix.IDENTITY;     // M (general) or R (rotation)\n\n\n        this._scale = new Point(1, 1, 1);        // S\n        this._translate = Point.ORIGIN;          // T\n\n        this._isIdentity = true;\n        this._isRSMatrix = true;\n        this._isUniformScale = true;\n        this._inverseNeedsUpdate = false;\n    }\n\n    /**\n     * depth copy a Transform\n     * @param {Transform} transform \n     */\n    copy(transform) {\n        this.__matrix.copy(transform.__matrix);\n        this._invMatrix.copy(transform._invMatrix);\n        this._matrix.copy(transform._matrix);\n        this._scale.copy(transform._scale);\n        this._translate.copy(transform._translate);\n        this._isIdentity = transform._isIdentity;\n        this._isRSMatrix = transform._isRSMatrix;\n        this._isUniformScale = transform._isUniformScale;\n        this._inverseNeedsUpdate = transform._inverseNeedsUpdate;\n    }\n\n    /**\n     * 置单位变换\n     */\n    makeIdentity() {\n        this._matrix = Matrix.IDENTITY;\n        this._translate.fill(0);\n        this._scale.fill(1);\n        this._isIdentity = true;\n        this._isRSMatrix = true;\n        this._isUniformScale = true;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * 缩放置1\n     */\n    makeUnitScale() {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation');\n        this._scale.fill(1);\n        this._isUniformScale = true;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isIdentity() {\n        return this._isIdentity;\n    }\n\n    /**\n     * R*S\n     * @returns {boolean}\n     */\n    isRSMatrix() {\n        return this._isRSMatrix;\n    }\n\n    /**\n     * R*S, S = c*I\n     * @returns {boolean}\n     */\n    isUniformScale() {\n        return this._isRSMatrix && this._isUniformScale;\n    }\n\n\n    // Member access.\n    // (1) The Set* functions set the is-identity hint to false.\n    // (2) The SetRotate function sets the is-rsmatrix hint to true.  If this\n    //     hint is false,  GetRotate fires an \"assert\" in debug mode.\n    // (3) The SetMatrix function sets the is-rsmatrix and is-uniform-scale\n    //     hints to false.\n    // (4) The SetScale function sets the is-uniform-scale hint to false.\n    //     The SetUniformScale function sets the is-uniform-scale hint to\n    //     true.  If this hint is false, GetUniformScale fires an \"assert\" in\n    //     debug mode.\n    // (5) All Set* functions set the inverse-needs-update to true.  When\n    //     GetInverse is called, the inverse must be computed in this case and\n    //     the inverse-needs-update is reset to false.\n    /**\n     * @param {Matrix} rotate\n     */\n    setRotate(rotate) {\n        this._matrix.copy(rotate);\n        this._isIdentity = false;\n        this._isRSMatrix = true;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @param {Matrix} matrix\n     */\n    setMatrix(matrix) {\n        this._matrix.copy(matrix);\n        this._isIdentity = false;\n        this._isRSMatrix = false;\n        this._isUniformScale = false;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @param {Point} translate\n     */\n    setTranslate(translate) {\n        this._translate.copy(translate);\n        this._isIdentity = false;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @param {Point} scale\n     */\n    setScale(scale) {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation');\n        console.assert(!this._scale.equals(Point.ORIGIN), 'Scales must be nonzero');\n        this._scale.copy(scale);\n        this._isIdentity = false;\n        this._isUniformScale = false;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @param {number} scale\n     */\n    setUniformScale(scale) {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation');\n        console.assert(scale !== 0, 'Scale must be nonzero');\n\n        this._scale.fill(scale);\n        this._isIdentity = false;\n        this._isUniformScale = true;\n        this._updateMatrix();\n        return this;\n    }\n\n    /**\n     * @returns {Matrix}\n     */\n    getRotate() {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation');\n        return this._matrix;\n    }\n\n    /**\n     * @returns {Matrix}\n     */\n    getMatrix() {\n        return this._matrix;\n    }\n\n    /**\n     * @returns {Point}\n     */\n    getTranslate() {\n        return this._translate;\n    }\n\n    /**\n     * @returns {Point}\n     */\n    getScale() {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation-scale');\n        return this._scale;\n    }\n\n    /**\n     * @returns {number}\n     */\n    getUniformScale() {\n        console.assert(this._isRSMatrix, 'Matrix is not a rotation-scale');\n        console.assert(this._isUniformScale, 'Matrix is not uniform scale');\n        return this._scale[0];\n    }\n\n\n    /**\n     * For M = R*S, the largest value of S in absolute value is returned.\n     * For general M, the max-row-sum norm is returned, which is a reasonable\n     * measure of maximum scale of the transformation.\n     * @returns {number}\n     */\n    getNorm() {\n        const abs = Math.abs;\n        if (this._isRSMatrix) {\n            let maxValue = abs(this._scale[0]);\n            if (abs(this._scale[1]) > maxValue) {\n                maxValue = abs(this._scale[1]);\n            }\n            if (abs(this._scale[2]) > maxValue) {\n                maxValue = abs(this._scale[2]);\n            }\n            return maxValue;\n        }\n\n        // A general matrix.  Use the max-row-sum matrix norm.  The spectral\n        // norm (the maximum absolute value of the eigenvalues) is smaller or\n        // equal to this norm.  Therefore, this function returns an approximation\n        // to the maximum scale.\n        let m = this._matrix;\n        let maxRowSum = abs(m[0]) + abs(m[4]) + abs(m[8]);\n        let rowSum = abs(m[1]) + abs(m[5]) + abs(m[9]);\n\n        if (rowSum > maxRowSum) {\n            maxRowSum = rowSum;\n        }\n        rowSum = abs(m[2]) + abs(m[6]) + abs(m[10]);\n        if (rowSum > maxRowSum) {\n            maxRowSum = rowSum;\n        }\n\n        return maxRowSum;\n    }\n\n    /**\n     * @param {Point|Vector} p\n     * Matrix-point/vector 乘法, M*p.\n     */\n    mulPoint(p) {\n        return this.__matrix.mulPoint(p);\n    }\n\n    /**\n     * Matrix-matrix multiplication.\n     * @param {Transform} transform\n     * @returns {Transform}\n     */\n    mul(transform) {\n        if (this._isIdentity) {\n            return transform;\n        }\n\n        if (transform.isIdentity()) {\n            return this;\n        }\n        const IsRS = this._isRSMatrix;\n        let product = new Transform();\n\n        if (IsRS && transform.isRSMatrix()) {\n            if (this._isUniformScale) {\n                let scale0 = this._scale[0];\n                product.setRotate(this._matrix.mul(transform.getMatrix()));\n\n                product.setTranslate(\n                    this._matrix.mulPoint(transform.getTranslate())\n                        .scalar(scale0)\n                        .add(this._translate)\n                );\n\n                if (transform.isUniformScale()) {\n                    product.setUniformScale(scale0 * transform.getUniformScale());\n                } else {\n                    product.setScale(transform.getScale().scalar(scale0));\n                }\n\n                return product;\n            }\n        }\n\n        // In all remaining cases, the matrix cannot be written as R*S*X+T.\n        let matMA = (IsRS ? this._matrix.timesDiagonal(this._scale) : this._matrix);\n        let matMB = (\n            transform.isRSMatrix() ?\n                transform.getMatrix().timesDiagonal(transform.getScale()) :\n                transform.getMatrix()\n        );\n\n        product.setMatrix(matMA.mul(matMB));\n        product.setTranslate(matMA.mulPoint(transform.getTranslate()).add(this._translate));\n        return product;\n    }\n\n    /**\n     * Get the homogeneous matrix.\n     */\n    toMatrix() {\n        return this.__matrix;\n    }\n\n\n    /**\n     * Get the inverse homogeneous matrix, recomputing it when necessary.\n     * If H = {{M,T},{0,1}}, then H^{-1} = {{M^{-1},-M^{-1}*T},{0,1}}.\n     * @returns {Matrix}\n     */\n    inverse() {\n        if (!this._inverseNeedsUpdate) {\n            return this._invMatrix;\n        }\n        if (this._isIdentity) {\n            this._invMatrix.copy(Matrix.IDENTITY);\n            this._inverseNeedsUpdate = false;\n            return this._invMatrix;\n        }\n\n        let im = this._invMatrix,\n            m = this._matrix;\n\n        if (this._isRSMatrix) {\n            let [s0, s1, s2] = this._scale;\n            if (this._isUniformScale) {\n                let invScale = 1 / s0;\n                im[0] = invScale * m[0];\n                im[4] = invScale * m[1];\n                im[8] = invScale * m[2];\n                im[1] = invScale * m[4];\n                im[5] = invScale * m[5];\n                im[9] = invScale * m[6];\n                im[2] = invScale * m[8];\n                im[6] = invScale * m[9];\n                im[10] = invScale * m[10];\n            } else {\n                // Replace 3 reciprocals by 6 multiplies and 1 reciprocal.\n                let s01 = s0 * s1;\n                let s02 = s0 * s2;\n                let s12 = s1 * s2;\n                let invs012 = 1 / (s01 * s2);\n                let invS0 = s12 * invs012;\n                let invS1 = s02 * invs012;\n                let invS2 = s01 * invs012;\n                im[0] = invS0 * m[0];\n                im[4] = invS0 * m[1];\n                im[8] = invS0 * m[2];\n                im[1] = invS1 * m[4];\n                im[5] = invS1 * m[5];\n                im[9] = invS1 * m[6];\n                im[2] = invS2 * m[8];\n                im[6] = invS2 * m[9];\n                im[10] = invS2 * m[10];\n            }\n        } else {\n            Transform.invert3x3(this.__matrix, im);\n        }\n\n        let [t0, t1, t2] = this._translate;\n        im[12] = -(im[0] * t0 + im[4] * t1 + im[8] * t2);\n        im[13] = -(im[1] * t0 + im[5] * t1 + im[9] * t2);\n        im[14] = -(im[2] * t0 + im[6] * t1 + im[10] * t2);\n\n        this._inverseNeedsUpdate = false;\n        return this._invMatrix;\n    }\n\n\n    /**\n     * Get the inversion transform.  No test is performed to determine whether\n     * the caller transform is invertible.\n     * @returns {Transform}\n     */\n    inverseTransform() {\n        if (this._isIdentity) {\n            return Transform.IDENTITY;\n        }\n\n        let inverse = new Transform();\n        let invTrn = Point.ORIGIN;\n\n        if (this._isRSMatrix) {\n            let invRot = this._matrix.transpose();\n            let invScale;\n            inverse.setRotate(invRot);\n            if (this._isUniformScale) {\n                invScale = 1 / this._scale[0];\n                inverse.setUniformScale(invScale);\n                invTrn.copy(invRot.mulPoint(this._translate).scalar(-invScale));\n            }\n            else {\n                invScale = new Point(1 / this._scale[0], 1 / this._scale[1], 1 / this._scale[2]);\n                inverse.setScale(invScale);\n                invTrn = invRot.mulPoint(this._translate);\n                invTrn[0] *= -invScale[0];\n                invTrn[1] *= -invScale[1];\n                invTrn[2] *= -invScale[2];\n            }\n        }\n        else {\n            let invMat = new Matrix();\n            Transform.invert3x3(this._matrix, invMat);\n            inverse.setMatrix(invMat);\n            invTrn.copy(invMat.mulPoint(this._translate).negative());\n        }\n        inverse.setTranslate(invTrn);\n\n        return inverse;\n    }\n\n    /**\n     * Fill in the entries of mm whenever one of the components\n     * m, mTranslate, or mScale changes.\n     * @private\n     */\n    _updateMatrix() {\n        if (this._isIdentity) {\n            this.__matrix.identity();\n        } else {\n            let mm = this.__matrix;\n            const m = this._matrix;\n            if (this._isRSMatrix) {\n                let [s0, s1, s2] = this._scale;\n                mm[0] = m[0] * s0;\n                mm[4] = m[4] * s1;\n                mm[8] = m[8] * s2;\n                mm[1] = m[1] * s0;\n                mm[5] = m[5] * s1;\n                mm[9] = m[9] * s2;\n                mm[2] = m[2] * s0;\n                mm[6] = m[6] * s1;\n                mm[10] = m[10] * s2;\n            }\n            else {\n                mm[0] = m[0];\n                mm[1] = m[1];\n                mm[2] = m[2];\n                mm[4] = m[4];\n                mm[5] = m[5];\n                mm[6] = m[6];\n                mm[8] = m[8];\n                mm[9] = m[9];\n                mm[10] = m[10];\n            }\n            [mm[12], mm[13], mm[14]] = this._translate;\n\n            // The last row of mm is always (0,0,0,1) for an affine\n            // transformation, so it is set once in the constructor.  It is not\n            // necessary to reset it here.\n        }\n\n        this._inverseNeedsUpdate = true;\n    }\n\n    /**\n     * Invert the 3x3 upper-left block of the input matrix.\n     * @param {Matrix} mat\n     * @param {Matrix} invMat\n     * @private\n     */\n    static invert3x3(mat, invMat) {\n        // Compute the adjoint of M (3x3).\n        invMat[0] = mat[5] * mat[10] - mat[9] * mat[6];\n        invMat[4] = mat[8] * mat[6] - mat[4] * mat[10];\n        invMat[8] = mat[4] * mat[9] - mat[8] * mat[5];\n        invMat[1] = mat[9] * mat[2] - mat[1] * mat[10];\n        invMat[5] = mat[0] * mat[10] - mat[8] * mat[2];\n        invMat[9] = mat[8] * mat[1] - mat[0] * mat[9];\n        invMat[2] = mat[1] * mat[6] - mat[5] * mat[2];\n        invMat[6] = mat[4] * mat[2] - mat[0] * mat[6];\n        invMat[10] = mat[0] * mat[5] - mat[4] * mat[1];\n\n        // Compute the reciprocal of the determinant of M.\n        let invDet = 1 / (mat[0] * invMat[0] + mat[4] * invMat[1] + mat[8] * invMat[2]);\n\n        // inverse(M) = adjoint(M)/determinant(M).\n        invMat[0] = invMat[0] * invDet;\n        invMat[4] = invMat[4] * invDet;\n        invMat[8] = invMat[8] * invDet;\n        invMat[1] = invMat[1] * invDet;\n        invMat[5] = invMat[5] * invDet;\n        invMat[9] = invMat[9] * invDet;\n        invMat[2] = invMat[2] * invDet;\n        invMat[6] = invMat[6] * invDet;\n        invMat[10] = invMat[10] * invDet;\n    }\n\n    static get IDENTITY() {\n        return new Transform().makeIdentity();\n    }\n}\n\nexport { Transform };\n","import { Controller } from './Controller';\nimport { Transform } from '../dataTypes/Transform';\n\nclass TransformController extends Controller {\n\n    /**\n     * @param {Transform} localTransform\n     */\n    constructor(localTransform) {\n        super();\n        this.localTransform = Transform.IDENTITY;\n        this.localTransform.copy(localTransform);\n    }\n\n    /**\n     * @param {number} applicationTime - ms\n     */\n    update(applicationTime) {\n        if (super.update(applicationTime)) {\n            this.object.localTransform.copy(this.localTransform);\n            return true;\n        }\n        return false;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.localTransform = inStream.readTransform();\n    }\n}\n\nexport { TransformController };","import { D3Object } from '../../core/D3Object';\nimport { Quaternion } from '../../math/Quaternion';\nimport { _Math } from '../../math/Math';\nimport { TransformController } from './TransformController';\n\nclass BlendTransformController extends TransformController {\n\n    /**\n     *  #### Construction\n     *  \n     *  Set 'rsMatrices' to 'true' when theinput controllers manage\n     *  transformations of the form Y = R*S*X + T, where R is a rotation, S is\n     *  a diagonal scale matrix of positive scales, and T is a translation;\n     *  that is, each transform has mIsRSMatrix equal to 'true'.  In this case,\n     *  the rotation and scale blending is either geometric or arithmetic, as\n     *  specified in the other constructor inputs.  Translation blending is\n     *  always arithmetic.  Let {R0,S0,T0} and {R1,S1,T1} be the transformation\n     *  channels, and let weight w be in [0,1].  Let {R,S,T} be the blended\n     *  result.  Let q0, q1, and q be quaternions corresponding to R0, R1, and\n     *  R with Dot(q0,q1) >= 0 and A = angle(q0,q1) = acos(Dot(q0,q1)).\n     *  \n     *  Translation:  `T = (1-w)*T0 + w*T1`\n     *  \n     *  Arithmetic rotation:  `q = Normalize((1-w)*q0 + w*q1)`  \n     *  Geometric rotation:\n     *  q = `Slerp(w, q0, q1)`\n     *    = `(sin((1-w)*A)*q0 + sin(w*A)*q1)/sin(A)`\n     *\n     * Arithmetic scale:  s = `(1-w)*s0 + w*s1` for each channel s0, s1, s  \n     * Geometric scale:  s = `sign(s0)*sign(s1)*pow(|s0|,1-w)*pow(|s1|,w)`  \n     * If either of s0 or s1 is zero, then s is zero.\n     *\n     * Set 'rsMatrices' to 'false' when mIsRMatrix is 'false' for either\n     * transformation.  In this case, a weighted average of the full\n     * transforms is computed.  This is not recommended, because the visual\n     * results are difficult to predict.\n     * @param {TransformController} controller0\n     * @param {TransformController} controller1\n     * @param {boolean} rsMatrices\n     * @param {boolean} geometricRotation\n     * @param {boolean} geometricScale\n     */\n    constructor(controller0, controller1, rsMatrices, geometricRotation = false, geometricScale = false) {\n        super(Transform.IDENTITY);\n\n        this.controller0 = controller0;\n        this.controller1 = controller1;\n\n        this.weight = 0.0;\n        this.rsMatrices = rsMatrices;\n        this.geometricRotation = geometricRotation;\n        this.geometricScale = geometricScale;\n    }\n\n    /**\n     * @param {ControlledObject} obj\n     */\n    setObject(obj) {\n        this.object = obj;\n        this.controller0.object = obj;\n        this.controller1.object = obj;\n    }\n\n    /**\n     * 动画更新\n     * @param {number} applicationTime  毫秒\n     */\n    update(applicationTime) {\n        if (!super.update(applicationTime)) {\n            return false;\n        }\n\n        this.controller0.update(applicationTime);\n        this.controller1.update(applicationTime);\n\n        let weight = this.weight;\n        let oneMinusWeight = 1 - weight;\n        const xfrm0 = this.controller0.localTransform;\n        const xfrm1 = this.controller1.localTransform;\n\n        // Arithmetic blend of translations.\n        const trn0 = xfrm0.getTranslate();\n        const trn1 = xfrm1.getTranslate();\n\n        this.localTransform.setTranslate(trn0.scalar(oneMinusWeight).add(trn1.scalar(weight)));\n\n        if (this.rsMatrices) {\n            const rot0 = xfrm0.getRotate();\n            const rot1 = xfrm1.getRotate();\n\n            let quat0 = Quaternion.fromRotateMatrix(rot0);\n            let quat1 = Quaternion.fromRotateMatrix(rot1);\n            if (quat0.dot(quat1) < 0) {\n                quat1.copy(quat1.negative());\n            }\n\n            let sca0 = xfrm0.getScale();\n            let sca1 = xfrm1.getScale();\n            let blendQuat = Quaternion.ZERO.clone();\n\n            if (this.geometricRotation) {\n                blendQuat.slerp(weight, quat0, quat1);\n            }\n            else {\n                blendQuat = quat0.scalar(oneMinusWeight).add(quat1.scalar(weight));\n                blendQuat.normalize();\n            }\n            this.localTransform.setRotate(blendQuat.toRotateMatrix());\n\n            let pow = Math.pow;\n            let sign = Math.sign;\n            let abs = Math.abs;\n            let blendSca;\n\n            if (this.geometricScale) {\n                let s0, s1;\n                blendSca = Point.ORIGIN;\n                for (let i = 0; i < 3; ++i) {\n                    s0 = sca0[i];\n                    s1 = sca1[i];\n                    if (s0 !== 0 && s1 !== 0) {\n                        let sign0 = sign(s0);\n                        let sign1 = sign(s1);\n                        let pow0 = pow(abs(s0), oneMinusWeight);\n                        let pow1 = pow(abs(s1), weight);\n                        blendSca[i] = sign0 * sign1 * pow0 * pow1;\n                    }\n                    // else\n                    // {\n                    //    blendSca[i] = 0;\n                    // }\n                }\n            }\n            else {\n                blendSca = sca0.scalar(oneMinusWeight).add(sca1.scalar(weight));\n            }\n            this.localTransform.setScale(blendSca);\n        }\n        else {\n            let m0 = xfrm0.getMatrix();\n            let m1 = xfrm1.getMatrix();\n            let blendMat = m0.scalar(oneMinusWeight).add(m1.scalar(weight));\n\n            this.localTransform.setMatrix(blendMat);\n        }\n        this.object.localTransform.copy(this.localTransform);\n        return true;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.controller0 = inStream.readPointer();\n        this.controller1 = inStream.readPointer();\n        this.weight = inStream.readFloat32();\n        this.rsMatrices = inStream.readBool();\n        this.geometricRotation = inStream.readBool();\n        this.geometricScale = inStream.readBool();\n    }\n    link(inStream) {\n        super.link(inStream);\n        this.controller0 = inStream.resolveLink(this.controller0);\n        this.controller1 = inStream.resolveLink(this.controller1);\n    }\n}\n\nD3Object.Register('BlendTransformController', BlendTransformController.factory);\n\nexport { BlendTransformController };\n","import { D3Object } from '../../core/D3Object';\nimport { Controller } from './Controller';\n\n/**\n * Abstract base class\n */\nclass ControlledObject extends D3Object {\n    /** @protected */\n    constructor() {\n        super();\n        this.numControllers = 0;\n        this.controllers = [];\n    }\n\n    /**\n     * @param {number} i\n     * @returns {Controller|null}\n     */\n    getController(i) {\n        return this.controllers[i] || null;\n    }\n\n    /**\n     * @param {Controller} controller\n     */\n    attachController(controller) {\n        // By design, controllers may not be controlled.  This avoids arbitrarily\n        // complex graphs of controllers.  TODO:  Consider allowing this?\n        if (!(controller instanceof Controller)) {\n            console.assert(false, 'Controllers may not be controlled');\n            return;\n        }\n\n        // Test whether the controller is already in the array.\n        let i, l = this.numControllers;\n        for (i = 0; i < l; ++i) {\n            if (controller === this.controllers[i]) {\n                return;\n            }\n        }\n\n        // Bind the controller to the object.\n        controller.object = this;\n\n        this.controllers[(this.numControllers)++] = controller;\n    }\n\n    /**\n     * @param {Controller} controller\n     */\n    detachController(controller) {\n        let l = this.numControllersl;\n        for (let i = 0; i < l; ++i) {\n            if (controller === this.controllers[i]) {\n                // Unbind the controller from the object.\n                controller.object = null;\n\n                // Remove the controller from the array, keeping the array\n                // compact.\n                for (let j = i + 1; j < l; ++j, ++i) {\n                    this.controllers[i] = this.controllers[j];\n                }\n                this.controllers[--(this.numControllers)] = null;\n                return;\n            }\n        }\n    }\n\n    detachAllControllers() {\n        let i, l = this.numControllers;\n        for (i = 0; i < l; ++i) {\n            // Unbind the controller from the object.\n            this.controllers[i].object = null;\n            this.controllers[i] = null;\n        }\n        this.numControllers = 0;\n    }\n\n    /**\n     * @param {number} applicationTime\n     */\n    updateControllers(applicationTime) {\n        let someoneUpdated = false, l = this.numControllers;\n        for (let i = 0; i < l; ++i) {\n            if (this.controllers[i].update(applicationTime)) {\n                someoneUpdated = true;\n            }\n        }\n        return someoneUpdated;\n    }\n\n    /**\n     * @param {InStream} inStream\n     */\n    load(inStream) {\n        super.load(inStream);\n        let r = inStream.readPointerArray();\n        if (r !== false) {\n            this.numControllers = r.length;\n            this.controllers = r.slice();\n        }\n        this.capacity = this.numControllers;\n    }\n\n    /**\n     * @param {InStream} inStream\n     */\n    link(inStream) {\n        super.link(inStream);\n        this.controllers = inStream.resolveArrayLink(this.numControllers, this.controllers);\n    }\n}\n\nexport { ControlledObject };","import { Controller } from './Controller';\nimport { D3Object } from '../../core/D3Object';\n\n/**\n * IKController assumes responsibility for \n * the input arrays and will delete them.  They should be dynamically allocated.\n */\nclass IKController extends Controller {\n\n\t/**\n\t * \n\t * @param {number} numJoints \n\t * @param {Array<IKJoint>} joints \n\t * @param {number} numGoals \n\t * @param {Array<IKGoal>} goals \n\t */\n\tconstructor(numJoints, joints, numGoals, goals) {\n\t\tthis.iterations = 128;\n\t\tthis.orderEndToRoot = true;\n\t\tthis.numJoints = numJoints;\n\t\tthis.joints = joints;\n\t\tthis.numGoals = numGoals;\n\t\tthis.goals = goals;\n\t}\n\t\n\t/**\n\t * @param {number} applicationTime - ms\n\t */\n\tupdate(applicationTime) {\n\t\tif (!super.update(applicationTime)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Make sure effectors are all current in world space.  It is assumed\n\t\t// that the joints form a chain, so the world transforms of joint I\n\t\t// are the parent transforms for the joint I+1.\n\t\tlet k, numJoints = this.numJoints;\n\t\tfor (k = 0; k < numJoints; ++k) {\n\t\t\tthis.joints[k].updateWorldSRT();\n\t\t}\n\n\t\t// Update joints one-at-a-time to meet goals.  As each joint is updated,\n\t\t// the nodes occurring in the chain after that joint must be made current\n\t\t// in world space.\n\t\tlet iter, i, j;\n\t\tlet joint, joints = this.joints;\n\t\tif (this.orderEndToRoot) {\n\t\t\tfor (iter = 0; iter < this.iterations; ++iter) {\n\t\t\t\tfor (k = 0; k < numJoints; ++k) {\n\t\t\t\t\tlet r = numJoints - 1 - k;\n\t\t\t\t\tjoint = joints[r];\n\n\t\t\t\t\tfor (i = 0; i < 3; ++i) {\n\t\t\t\t\t\tif (joint.allowTranslation[i]) {\n\t\t\t\t\t\t\tif (joint.updateLocalT(i)) {\n\t\t\t\t\t\t\t\tfor (j = r; j < numJoints; ++j) {\n\t\t\t\t\t\t\t\t\tjoints[j].updateWorldRT();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; ++i) {\n\t\t\t\t\t\tif (joint.allowRotation[i]) {\n\t\t\t\t\t\t\tif (joint.updateLocalR(i)) {\n\t\t\t\t\t\t\t\tfor (j = r; j < numJoints; ++j) {\n\t\t\t\t\t\t\t\t\tjoints[j].updateWorldRT();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse  // order root to end\n\t\t{\n\t\t\tfor (iter = 0; iter < this.iterations; ++iter) {\n\t\t\t\tfor (k = 0; k < numJoints; ++k) {\n\t\t\t\t\tjoint = joints[k];\n\n\t\t\t\t\tfor (i = 0; i < 3; ++i) {\n\t\t\t\t\t\tif (joint.allowTranslation[i]) {\n\t\t\t\t\t\t\tif (joint.updateLocalT(i)) {\n\t\t\t\t\t\t\t\tfor (j = k; j < numJoints; ++j) {\n\t\t\t\t\t\t\t\t\tjoints[j].updateWorldRT();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < 3; ++i) {\n\t\t\t\t\t\tif (joint.allowRotation[i]) {\n\t\t\t\t\t\t\tif (joint.updateLocalR(i)) {\n\t\t\t\t\t\t\t\tfor (j = k; j < numJoints; ++j) {\n\t\t\t\t\t\t\t\t\tjoints[j].updateWorldRT();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nD3Object.Register(IKController.name, IKController.factory.bind(IKController));\n\nexport { IKController };","import { D3Object } from '../../core/D3Object';\nimport { Point, Matrix, Quaternion } from '../../math/index';\nimport { TransformController } from './TransformController';\n\n/**\n * construction. If the translations, rotations, and\n * scales all share the same keyframe times, then numCommonTimes is\n * set to a positive number.  Each remaining number is numCommonTimes\n * when the channel exists or zero when it does not.  If the keyframe\n * times are not shared, then numCommonTimes must be set to zero and\n * the remaining numbers set to the appropriate values--positive when\n * the channel exists or zero otherwise.\n * \n * The Transform input initializes the controlled object's local\n * transform.  The previous behavior of this class was to fill in only\n * those transformation channels represented by the key frames, which\n * relied implicitly on the Spatial object to have its other channels\n * set appropriately by the application.  Now KeyframeController sets\n * *all* the channels.\n */\nclass KeyframeController extends TransformController {\n\n    /**\n     * @param {number} numCommonTimes\n     * @param {number} numTranslations\n     * @param {number} numRotations\n     * @param {number} numScales\n     * @param {Transform} localTransform\n     */\n    constructor(numCommonTimes, numTranslations, numRotations, numScales, localTransform) {\n        super(localTransform);\n        if (numCommonTimes > 0) {\n            this.numCommonTimes = numCommonTimes;\n\n            // This array is used only when times are shared by translations, rotations, and scales.\n            this.commonTimes = new Array(numCommonTimes);\n\n            if (numTranslations > 0) {\n                this.numTranslations = numTranslations;\n                this.translationTimes = this.commonTimes;\n                this.translations = new Array(numTranslations);\n            }\n            else {\n                this.numTranslations = 0;\n                this.translationTimes = null;\n                this.translations = null;\n            }\n\n            if (numRotations > 0) {\n                this.numRotations = numRotations;\n                this.rotationTimes = this.commonTimes;\n                this.rotations = new Array(numRotations);\n            }\n            else {\n                this.numRotations = 0;\n                this.rotationTimes = null;\n                this.rotations = null;\n            }\n\n            if (numScales > 0) {\n                this.numScales = numScales;\n                this.scaleTimes = this.commonTimes;\n                this.scales = new Array(numScales);\n            }\n            else {\n                this.numScales = 0;\n                this.scaleTimes = null;\n                this.scales = null;\n            }\n        }\n        else {\n            this.numCommonTimes = 0;\n            this.commonTimes = null;\n\n            if (numTranslations > 0) {\n                this.numTranslations = numTranslations;\n                this.translationTimes = new Array(numTranslations);\n                this.translations = new Array(numTranslations);\n            }\n            else {\n                this.numTranslations = 0;\n                this.translationTimes = null;\n                this.translations = null;\n            }\n\n            if (numRotations > 0) {\n                this.numRotations = numRotations;\n                this.rotationTimes = new Array(numRotations);\n                this.rotations = new Array(numRotations);\n            }\n            else {\n                this.numRotations = 0;\n                this.rotationTimes = null;\n                this.rotations = null;\n            }\n\n            if (numScales > 0) {\n                this.numScales = numScales;\n                this.scaleTimes = new Array(numScales);\n                this.scales = new Array(numScales);\n            }\n            else {\n                this.numScales = 0;\n                this.scaleTimes = null;\n                this.scales = null;\n            }\n        }\n\n        // Cached indices for the last found pair of keys used for interpolation.\n        // For a sequence of times, this guarantees an O(1) lookup.\n        this.tLastIndex = 0;\n        this.rLastIndex = 0;\n        this.sLastIndex = 0;\n        this.cLastIndex = 0;\n    }\n\n    /**\n     * @param {number} applicationTime - ms\n     */\n    update(applicationTime) {\n        if (!super.update(applicationTime)) {\n            return false;\n        }\n\n        let ctrlTime = this.getControlTime(applicationTime);\n        let trn = Point.ORIGIN;\n        let rot = Matrix.IDENTITY;\n        let scale = 0;\n        let t;\n\n        // The logic here checks for equal-time arrays to minimize the number of\n        // times GetKeyInfo is called.\n        if (this.numCommonTimes > 0) {\n            t = KeyframeController.getKeyInfo(ctrlTime, this.numCommonTimes, this.commonTimes, this.cLastIndex);\n            this.cLastIndex = t[0];\n            let normTime = t[1], i0 = t[2], i1 = t[3];\n            t = null;\n\n            if (this.numTranslations > 0) {\n                trn = this.getTranslate(normTime, i0, i1);\n                this.localTransform.setTranslate(trn);\n            }\n\n            if (this.numRotations > 0) {\n                rot = this.getRotate(normTime, i0, i1);\n                this.localTransform.setRotate(rot);\n            }\n\n            if (this.numScales > 0) {\n                scale = this.getScale(normTime, i0, i1);\n                this.localTransform.setUniformScale(scale);\n            }\n        }\n        else {\n            if (this.numTranslations > 0) {\n                t = KeyframeController.getKeyInfo(ctrlTime, this.numTranslations, this.translationTimes, this.tLastIndex);\n                this.tLastIndex = t[0];\n                trn = this.getTranslate(t[1], t[2], t[3]);\n                this.localTransform.setTranslate(trn);\n            }\n\n            if (this.numRotations > 0) {\n                t = KeyframeController.getKeyInfo(ctrlTime, this.numRotations, this.rotationTimes, this.rLastIndex);\n                this.rLastIndex = t[0];\n                rot = this.getRotate(t[1], t[2], t[3]);\n                this.localTransform.setRotate(rot);\n            }\n\n            if (this.numScales > 0) {\n                t = KeyframeController.getKeyInfo(ctrlTime, this.numScales, this.scaleTimes, this.sLastIndex);\n                this.sLastIndex = t[0];\n                scale = this.getScale(t[1], t[2], t[3]);\n                this.localTransform.setUniformScale(scale);\n            }\n        }\n\n        this.object.localTransform.copy(this.localTransform);\n        return true;\n    }\n\n    // Support for looking up keyframes given the specified time.\n\n    /**\n     * @param {number} ctrlTime \n     * @param {number} numTimes \n     * @param {Array<number>} times \n     * @param {number} lIndex\n     * @protected\n     */\n    static getKeyInfo(ctrlTime, numTimes, times, lIndex) {\n        if (ctrlTime <= times[0]) {\n            return [0, 0, 0, 0];\n        }\n\n        if (ctrlTime >= times[numTimes - 1]) {\n            let l = numTimes - 1;\n            return [0, l, l, l];\n        }\n\n        let nextIndex;\n        if (ctrlTime > times[lIndex]) {\n            nextIndex = lIndex + 1;\n            while (ctrlTime >= times[nextIndex]) {\n                lIndex = nextIndex;\n                ++nextIndex;\n            }\n\n            return [\n                lIndex,\n                (ctrlTime - times[lIndex]) / (times[nextIndex] - times[lIndex]),\n                lIndex,\n                nextIndex\n            ];\n        }\n        else if (ctrlTime < times[lIndex]) {\n            nextIndex = lIndex - 1;\n            while (ctrlTime <= times[nextIndex]) {\n                lIndex = nextIndex;\n                --nextIndex;\n            }\n            return [\n                lIndex,\n                (ctrlTime - times[nextIndex]) / (times[lIndex] - times[nextIndex]),\n                nextIndex,\n                lIndex\n            ];\n        }\n\n        return [lIndex, 0, lIndex, lIndex];\n    }\n\n    /**\n     * @param {number} normTime\n     * @param {number} i0\n     * @param {number} i1\n     * @returns {Point}\n     * @protected\n     */\n    getTranslate(normTime, i0, i1) {\n        const t0 = this.translations[i0];\n        const t1 = this.translations[i1];\n        return t0.add(t1.sub(t0).scalar(normTime));  // t0 + (t1 - t0) * normalTime\n    }\n\n    /**\n     *\n     * @param {number} normTime\n     * @param {number} i0\n     * @param {number} i1\n     * @returns {Matrix}\n     * @protected\n     */\n    getRotate(normTime, i0, i1) {\n        let q = new Quaternion();\n        q.slerp(normTime, this.rotations[i0], this.rotations[i1]);\n        return q.toRotateMatrix();\n    }\n\n    /**\n     * @param {number} normTime\n     * @param {number} i0\n     * @param {number} i1\n     * @returns {number}\n     * @protected\n     */\n    getScale(normTime, i0, i1) {\n        return this.scales[i0] + normTime * (this.scales[i1] - this.scales[i0]);\n    }\n\n    load(inStream) {\n\n        super.load(inStream);\n        this.numCommonTimes = inStream.readUint32();\n        if (this.numCommonTimes > 0) {\n            this.commonTimes = inStream.readArray(this.numCommonTimes);\n\n            this.translations = inStream.readPointArray();\n            this.numTranslations = this.translations.length;\n\n            this.rotations = inStream.readQuaternionArray();\n            this.numRotations = this.rotations.length;\n\n            this.scales = inStream.readFloatArray();\n            this.numScales = this.scales.length;\n        }\n        else {\n            this.translationTimes = inStream.readFloatArray();\n            this.numTranslations = this.translationTimes.length;\n            this.translations = inStream.readSizedPointArray(this.numTranslations);\n\n            this.rotationTimes = inStream.readFloatArray();\n            this.numRotations = this.rotationTimes.length;\n            this.rotations = inStream.readSizedQuaternionArray(this.numRotations);\n\n            this.scaleTimes = inStream.readFloatArray();\n            this.numScales = this.scaleTimes.length;\n            this.scales = inStream.readArray(this.numScales);\n        }\n    }\n\n    static factory(inStream) {\n        let obj = new KeyframeController(0, 0, 0, 0, 0);\n        obj.load(inStream);\n        return obj;\n    }\n}\n\nD3Object.Register('KeyframeController', KeyframeController.factory);\n\nexport { KeyframeController };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\n/**\n * Buffer - 缓冲基础类\n * @abstract\n */\nclass Buffer extends D3Object {\n    /**\n     * @param {number} numElements - 元素数量\n     * @param {number} elementSize - 一个元素的尺寸，单位比特\n     * @param {number} usage - 缓冲用途， 参照Buffer.BU_XXX\n     */\n    constructor(numElements, elementSize, usage) {\n        super();\n        this.numElements = numElements;\n        this.elementSize = elementSize;\n        this.usage = usage;\n        this.numBytes = numElements * elementSize;\n        if (this.numBytes > 0) {\n            this._data = new Uint8Array(this.numBytes);\n        }\n    }\n    /**\n     * @returns {(Uint8Array|null)}\n     */\n    getData() {\n        return this._data;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.numElements = inStream.readUint32();\n        this.elementSize = inStream.readUint32();\n        this.usage = inStream.readEnum();\n        this._data = new Uint8Array(inStream.readBinary(this.numBytes));\n        this.numBytes = this._data.length;\n    }\n}\n\nDECLARE_ENUM(Buffer, {\n    BU_STATIC: 0,\n    BU_DYNAMIC: 1,\n    BU_RENDER_TARGET: 2,\n    BU_DEPTH_STENCIL: 3\n});\n\nexport { Buffer };","import { Buffer } from './Buffer';\nimport { D3Object } from '../../core/D3Object';\n\nclass IndexBuffer extends Buffer {\n\n    /**\n     * @param {number} numElements\n     * @param {number} elementSize\n     * @param {number} usage - 缓冲用途， 参照Buffer.BU_XXX\n     */\n    constructor(numElements = 0, elementSize = 0, usage = Buffer.BU_STATIC) {\n        super(numElements, elementSize, usage);\n        this.offset = 0;\n    }\n\n    /**\n     * @param {InStream} inStream\n     */\n    load(inStream) {\n        super.load(inStream);\n        this.offset = inStream.readUint32();\n    }\n}\nD3Object.Register('IndexBuffer', IndexBuffer.factory);\n\nexport { IndexBuffer };","import { Buffer } from './Buffer';\nimport { D3Object } from '../../core/D3Object';\n\nclass VertexBuffer extends Buffer {\n\n    /**\n     * @param numElements\n     * @param elementSize\n     * @param usage {number} 缓冲用途， 参照Buffer.BU_XXX\n     */\n    constructor(numElements, elementSize, usage = Buffer.BU_STATIC) {\n        super(numElements, elementSize, usage);\n    }\n\n    static factory(inStream) {\n        var obj = new VertexBuffer(0, 0);\n        obj.load(inStream);\n        return obj;\n    }\n}\n\nD3Object.Register('VertexBuffer', VertexBuffer.factory);\n\nexport { VertexBuffer };\n","import { D3Object } from '../../core/D3Object';\nimport { BinDataView } from '../../core/BinDataView';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass Texture extends D3Object {\n\n    /**\n     * @param {number} format 纹理格式， 参考Texture.TF_XXX\n     * @param {number} type 纹理类型, 参考Texture.TT_XXX\n     */\n    constructor(format, type) {\n        super();\n        this.format = format;                          // 纹理元素格式\n        this.type = type;                              // 纹理类型， 例如 2d, 3d...\n        this.hasMipmaps = false;                       // 是否生成MipMaps\n        this.numDimensions = Texture.DIMENSIONS[type]; // 纹理拥有的维度\n        this.numTotalBytes = 0;\n        this.width = 0;\n        this.height = 0;\n        this.depth = 0;\n        this.data = null;\n        this.static = true;\n    }\n\n    /**\n     * 判断是否是压缩格式\n     * @returns {boolean}\n     */\n    isCompressed() {\n        return this.format === Texture.TF_DXT1 || this.format === Texture.TF_DXT3 || this.format === Texture.TF_DXT5;\n    }\n\n    /**\n     * 判断是否可以生成MipMaps纹理\n     * @returns {boolean}\n     */\n    isMipMapsAble() {\n        return Texture.MIPMAPABLE[this.format];\n    }\n\n    /**\n     * 在系统内存中管理纹理的一个拷贝\n     *\n     * 字节数通过getNumTotalBytes查询\n     * 获取到的数据不能修改，因为渲染器并不会知道\n     * @returns {Uint8Array}\n     * @abstract\n     */\n    getData() {\n    }\n\n    /**\n     * 获取数据流大小\n     * @returns {number}\n     */\n    getFileSize() {\n        let size = 0;\n        size += 1;                // format\n        size += 1;                // type\n        size += 1;                // hasMipmaps\n        size += 1;                // numDimension\n        size += 2 * 3;            // width, height, depth\n        size += 4;                // numTotalBytes\n        size += this.numTotalBytes;\n        return size;\n    }\n\n    /**\n     *\n     * @param {ArrayBuffer} buffer\n     * @param {Texture} texture\n     */\n    static unpackTo(buffer, texture) {\n\n        let io = new BinDataView(buffer);\n        let format = io.int8();\n        let type = io.int8();\n        let hasMipMaps = (io.int8() == 1);\n        let numDimensions = io.int8();\n        let width = io.int16();\n        let height = io.int16();\n        let depth = io.int16();\n        let numTotalBytes = io.int32();\n        if (type !== texture.type) {\n            return new Error('Invalid type for ' + texture.name);\n        }\n\n        texture.format = format;\n        texture.hasMipmaps = hasMipMaps;\n        texture.numDimensions = numDimensions;\n        texture.depth = depth;\n\n        switch (type) {\n            case Texture.TT_2D:\n                texture.width = width;\n                texture.height = height;\n                break;\n            case Texture.TT_CUBE:\n                texture.width = width;\n                break;\n        }\n        texture.enableMipMaps = hasMipMaps;\n        texture._update();\n        texture.data.set(io.bytes(numTotalBytes));\n        io = null;\n        return null;\n    }\n\n    /**\n     * 将纹理对象处理成文件形式\n     * @param {Texture} texture\n     * @returns {ArrayBuffer}\n     */\n    static pack(texture) {\n        let size = texture.getFileSize();\n        let buffer = new ArrayBuffer(size);\n        let io = new BinDataView(buffer);\n\n        io.setInt8(texture.format);\n        io.setInt8(texture.type);\n        io.setInt8(texture.hasMipmaps ? 1 : 0);\n        io.setInt8(texture.numDimensions);\n        io.setInt16(texture.width);\n        io.setInt16(texture.height);\n        io.setInt16(texture.depth);\n        io.setInt32(texture.numTotalBytes);\n        io.setBytes(texture.getData());\n        return buffer;\n    }\n}\n\n// 纹理格式定义\nDECLARE_ENUM(Texture, {\n    TF_NONE: 0,\n    TF_R5G6B5: 1,\n    TF_A1R5G5B5: 2,\n    TF_A4R4G4B4: 3,\n    TF_A8: 4,\n    TF_L8: 5,\n    TF_A8L8: 6,\n    TF_R8G8B8: 7,\n    TF_A8R8G8B8: 8,\n    TF_A8B8G8R8: 9,\n    TF_L16: 10,\n    TF_G16R16: 11,\n    TF_A16B16G16R16: 12,\n    TF_R16F: 13,  // not support\n    TF_G16R16F: 14,  // not support\n    TF_A16B16G16R16F: 15,  // not support\n    TF_R32F: 16,\n    TF_G32R32F: 17,\n    TF_A32B32G32R32F: 18,\n    TF_DXT1: 19,\n    TF_DXT3: 20,\n    TF_DXT5: 21,\n    TF_D24S8: 22,\n    TF_QUANTITY: 23\n}, false);\n\n// 每种格式纹理是否支持生成MipMaps\nDECLARE_ENUM(Texture, {\n    TT_2D: 1,\n    TT_CUBE: 3,\n    MIPMAPABLE: [\n        false,  // Texture.TF_NONE\n        true,   // Texture.TF_R5G6B5\n        true,   // Texture.TF_A1R5G5B5\n        true,   // Texture.TF_A4R4G4B4\n        true,   // Texture.TF_A8\n        true,   // Texture.TF_L8\n        true,   // Texture.TF_A8L8\n        true,   // Texture.TF_R8G8B8\n        true,   // Texture.TF_A8R8G8B8\n        true,   // Texture.TF_A8B8G8R8\n        true,   // Texture.TF_L16\n        true,   // Texture.TF_G16R16\n        true,   // Texture.TF_A16B16G16R16\n        false,   // Texture.TF_R16F\n        false,   // Texture.TF_G16R16F\n        false,   // Texture.TF_A16B16G16R16F\n        false,  // Texture.TF_R32F\n        false,  // Texture.TF_G32R32F\n        false,  // Texture.TF_A32B32G32R32F,\n        true,   // Texture.TF_DXT1 (special handling)\n        true,   // Texture.TF_DXT3 (special handling)\n        true,   // Texture.TF_DXT5 (special handling)\n        false   // Texture.TF_D24S8\n    ],\n\n    /////////////////////////    纹理类型维度    //////////////////////////////////\n    DIMENSIONS: [\n        2,  // TT_2D\n        2  // TT_CUBE\n    ]\n}, false);\n\n// 每种像素格式单个像素占用的尺寸单位，字节\nDECLARE_ENUM(Texture, {\n    PIXEL_SIZE: [\n        0,              // Texture.TF_NONE\n        2,              // Texture.TF_R5G6B5\n        2,              // Texture.TF_A1R5G5B5\n        2,              // Texture.TF_A4R4G4B4\n        1,              // Texture.TF_A8\n        1,              // Texture.TF_L8\n        2,              // Texture.TF_A8L8\n        3,              // Texture.TF_R8G8B8\n        4,              // Texture.TF_A8R8G8B8\n        4,              // Texture.TF_A8B8G8R8\n        2,              // Texture.TF_L16\n        4,              // Texture.TF_G16R16\n        8,              // Texture.TF_A16B16G16R16\n        2,              // Texture.TF_R16F\n        4,              // Texture.TF_G16R16F\n        8,              // Texture.TF_A16B16G16R16F\n        4,              // Texture.TF_R32F\n        8,              // Texture.TF_G32R32F\n        16,             // Texture.TF_A32B32G32R32F,\n        0,              // Texture.TF_DXT1 (special handling)\n        0,              // Texture.TF_DXT3 (special handling)\n        0,              // Texture.TF_DXT5 (special handling)\n        4               // Texture.TF_D24S8\n    ]\n});\n\nexport { Texture };","let mapping = {};\n\n/* ClearBufferMask */\nmapping.DEPTH_BUFFER_BIT = 0x00000100;\nmapping.STENCIL_BUFFER_BIT = 0x00000400;\nmapping.COLOR_BUFFER_BIT = 0x00004000;\n\n/* BeginMode */\nmapping.POINTS = 0x0000;\nmapping.LINES = 0x0001;\nmapping.LINE_LOOP = 0x0002;\nmapping.LINE_STRIP = 0x0003;\nmapping.TRIANGLES = 0x0004;\nmapping.TRIANGLE_STRIP = 0x0005;\nmapping.TRIANGLE_FAN = 0x0006;\n\n/* AlphaFunction (not supported in ES20) */\n/*      NEVER */\n/*      LESS */\n/*      EQUAL */\n/*      LEQUAL */\n/*      GREATER */\n/*      NOTEQUAL */\n/*      GEQUAL */\n/*      ALWAYS */\n\n/* BlendingFactorDest */\nmapping.ZERO = 0;\nmapping.ONE = 1;\nmapping.SRC_COLOR = 0x0300;\nmapping.ONE_MINUS_SRC_COLOR = 0x0301;\nmapping.SRC_ALPHA = 0x0302;\nmapping.ONE_MINUS_SRC_ALPHA = 0x0303;\nmapping.DST_ALPHA = 0x0304;\nmapping.ONE_MINUS_DST_ALPHA = 0x0305;\n\n/* BlendingFactorSrc */\n/*      ZERO */\n/*      ONE */\nmapping.DST_COLOR = 0x0306;\nmapping.ONE_MINUS_DST_COLOR = 0x0307;\nmapping.SRC_ALPHA_SATURATE = 0x0308;\n/*      SRC_ALPHA */\n/*      ONE_MINUS_SRC_ALPHA */\n/*      DST_ALPHA */\n/*      ONE_MINUS_DST_ALPHA */\n\n/* BlendEquationSeparate */\nmapping.FUNC_ADD = 0x8006;\nmapping.BLEND_EQUATION = 0x8009;\nmapping.BLEND_EQUATION_RGB = 0x8009;\n/* same as BLEND_EQUATION */\nmapping.BLEND_EQUATION_ALPHA = 0x883D;\n\n/* BlendSubtract */\nmapping.FUNC_SUBTRACT = 0x800A;\nmapping.FUNC_REVERSE_SUBTRACT = 0x800B;\n\n/* Separate Blend Functions */\nmapping.BLEND_DST_RGB = 0x80C8;\nmapping.BLEND_SRC_RGB = 0x80C9;\nmapping.BLEND_DST_ALPHA = 0x80CA;\nmapping.BLEND_SRC_ALPHA = 0x80CB;\nmapping.CONSTANT_COLOR = 0x8001;\nmapping.ONE_MINUS_CONSTANT_COLOR = 0x8002;\nmapping.CONSTANT_ALPHA = 0x8003;\nmapping.ONE_MINUS_CONSTANT_ALPHA = 0x8004;\nmapping.BLEND_COLOR = 0x8005;\n\n/* Buffer Objects */\nmapping.ARRAY_BUFFER = 0x8892;\nmapping.ELEMENT_ARRAY_BUFFER = 0x8893;\nmapping.ARRAY_BUFFER_BINDING = 0x8894;\nmapping.ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;\n\nmapping.STREAM_DRAW = 0x88E0;\nmapping.STATIC_DRAW = 0x88E4;\nmapping.DYNAMIC_DRAW = 0x88E8;\n\nmapping.BUFFER_SIZE = 0x8764;\nmapping.BUFFER_USAGE = 0x8765;\n\nmapping.CURRENT_VERTEX_ATTRIB = 0x8626;\n\n/* CullFaceMode */\nmapping.FRONT = 0x0404;\nmapping.BACK = 0x0405;\nmapping.FRONT_AND_BACK = 0x0408;\n\n/* DepthFunction */\n/*      NEVER */\n/*      LESS */\n/*      EQUAL */\n/*      LEQUAL */\n/*      GREATER */\n/*      NOTEQUAL */\n/*      GEQUAL */\n/*      ALWAYS */\n\n/* EnableCap */\n/* TEXTURE_2D */\nmapping.CULL_FACE = 0x0B44;\nmapping.BLEND = 0x0BE2;\nmapping.DITHER = 0x0BD0;\nmapping.STENCIL_TEST = 0x0B90;\nmapping.DEPTH_TEST = 0x0B71;\nmapping.SCISSOR_TEST = 0x0C11;\nmapping.POLYGON_OFFSET_FILL = 0x8037;\nmapping.SAMPLE_ALPHA_TO_COVERAGE = 0x809E;\nmapping.SAMPLE_COVERAGE = 0x80A0;\n\n/* ErrorCode */\nmapping.NO_ERROR = 0;\nmapping.INVALID_ENUM = 0x0500;\nmapping.INVALID_VALUE = 0x0501;\nmapping.INVALID_OPERATION = 0x0502;\nmapping.OUT_OF_MEMORY = 0x0505;\n\n/* FrontFaceDirection */\nmapping.CW = 0x0900;\nmapping.CCW = 0x0901;\n\n/* GetPName */\nmapping.LINE_WIDTH = 0x0B21;\nmapping.ALIASED_POINT_SIZE_RANGE = 0x846D;\nmapping.ALIASED_LINE_WIDTH_RANGE = 0x846E;\nmapping.CULL_FACE_MODE = 0x0B45;\nmapping.FRONT_FACE = 0x0B46;\nmapping.DEPTH_RANGE = 0x0B70;\nmapping.DEPTH_WRITEMASK = 0x0B72;\nmapping.DEPTH_CLEAR_VALUE = 0x0B73;\nmapping.DEPTH_FUNC = 0x0B74;\nmapping.STENCIL_CLEAR_VALUE = 0x0B91;\nmapping.STENCIL_FUNC = 0x0B92;\nmapping.STENCIL_FAIL = 0x0B94;\nmapping.STENCIL_PASS_DEPTH_FAIL = 0x0B95;\nmapping.STENCIL_PASS_DEPTH_PASS = 0x0B96;\nmapping.STENCIL_REF = 0x0B97;\nmapping.STENCIL_VALUE_MASK = 0x0B93;\nmapping.STENCIL_WRITEMASK = 0x0B98;\nmapping.STENCIL_BACK_FUNC = 0x8800;\nmapping.STENCIL_BACK_FAIL = 0x8801;\nmapping.STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;\nmapping.STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;\nmapping.STENCIL_BACK_REF = 0x8CA3;\nmapping.STENCIL_BACK_VALUE_MASK = 0x8CA4;\nmapping.STENCIL_BACK_WRITEMASK = 0x8CA5;\nmapping.VIEWPORT = 0x0BA2;\nmapping.SCISSOR_BOX = 0x0C10;\n/*      SCISSOR_TEST */\nmapping.COLOR_CLEAR_VALUE = 0x0C22;\nmapping.COLOR_WRITEMASK = 0x0C23;\nmapping.UNPACK_ALIGNMENT = 0x0CF5;\nmapping.PACK_ALIGNMENT = 0x0D05;\nmapping.MAX_TEXTURE_SIZE = 0x0D33;\nmapping.MAX_VIEWPORT_DIMS = 0x0D3A;\nmapping.SUBPIXEL_BITS = 0x0D50;\nmapping.RED_BITS = 0x0D52;\nmapping.GREEN_BITS = 0x0D53;\nmapping.BLUE_BITS = 0x0D54;\nmapping.ALPHA_BITS = 0x0D55;\nmapping.DEPTH_BITS = 0x0D56;\nmapping.STENCIL_BITS = 0x0D57;\nmapping.POLYGON_OFFSET_UNITS = 0x2A00;\n/*      POLYGON_OFFSET_FILL */\nmapping.POLYGON_OFFSET_FACTOR = 0x8038;\nmapping.TEXTURE_BINDING_2D = 0x8069;\nmapping.SAMPLE_BUFFERS = 0x80A8;\nmapping.SAMPLES = 0x80A9;\nmapping.SAMPLE_COVERAGE_VALUE = 0x80AA;\nmapping.SAMPLE_COVERAGE_INVERT = 0x80AB;\n\n/* GetTextureParameter */\n/*      TEXTURE_MAG_FILTER */\n/*      TEXTURE_MIN_FILTER */\n/*      TEXTURE_WRAP_S */\n/*      TEXTURE_WRAP_T */\n\nmapping.COMPRESSED_TEXTURE_FORMATS = 0x86A3;\n\n/* HintMode */\nmapping.DONT_CARE = 0x1100;\nmapping.FASTEST = 0x1101;\nmapping.NICEST = 0x1102;\n\n/* HintTarget */\nmapping.GENERATE_MIPMAP_HINT = 0x8192;\n\n/* DataType */\nmapping.BYTE = 0x1400;\nmapping.UNSIGNED_BYTE = 0x1401;\nmapping.SHORT = 0x1402;\nmapping.UNSIGNED_SHORT = 0x1403;\nmapping.INT = 0x1404;\nmapping.UNSIGNED_INT = 0x1405;\nmapping.FLOAT = 0x1406;\n\n/* PixelFormat */\nmapping.DEPTH_COMPONENT = 0x1902;\nmapping.ALPHA = 0x1906;\nmapping.RGB = 0x1907;\nmapping.RGBA = 0x1908;\nmapping.LUMINANCE = 0x1909;\nmapping.LUMINANCE_ALPHA = 0x190A;\n\n/* PixelType */\n/*      UNSIGNED_BYTE */\nmapping.UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nmapping.UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nmapping.UNSIGNED_SHORT_5_6_5 = 0x8363;\n\n/* Shaders */\nmapping.FRAGMENT_SHADER = 0x8B30;\nmapping.VERTEX_SHADER = 0x8B31;\nmapping.MAX_VERTEX_ATTRIBS = 0x8869;\nmapping.MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;\nmapping.MAX_VARYING_VECTORS = 0x8DFC;\nmapping.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\nmapping.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;\nmapping.MAX_TEXTURE_IMAGE_UNITS = 0x8872;\nmapping.MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;\nmapping.SHADER_TYPE = 0x8B4F;\nmapping.DELETE_STATUS = 0x8B80;\nmapping.LINK_STATUS = 0x8B82;\nmapping.VALIDATE_STATUS = 0x8B83;\nmapping.ATTACHED_SHADERS = 0x8B85;\nmapping.ACTIVE_UNIFORMS = 0x8B86;\nmapping.ACTIVE_ATTRIBUTES = 0x8B89;\nmapping.SHADING_LANGUAGE_VERSION = 0x8B8C;\nmapping.CURRENT_PROGRAM = 0x8B8D;\n\n/* StencilFunction */\nmapping.NEVER = 0x0200;\nmapping.LESS = 0x0201;\nmapping.EQUAL = 0x0202;\nmapping.LEQUAL = 0x0203;\nmapping.GREATER = 0x0204;\nmapping.NOTEQUAL = 0x0205;\nmapping.GEQUAL = 0x0206;\nmapping.ALWAYS = 0x0207;\n\n/* StencilOp */\n/*      ZERO */\nmapping.KEEP = 0x1E00;\nmapping.REPLACE = 0x1E01;\nmapping.INCR = 0x1E02;\nmapping.DECR = 0x1E03;\nmapping.INVERT = 0x150A;\nmapping.INCR_WRAP = 0x8507;\nmapping.DECR_WRAP = 0x8508;\n\n/* StringName */\nmapping.VENDOR = 0x1F00;\nmapping.RENDERER = 0x1F01;\nmapping.VERSION = 0x1F02;\n\n/* TextureMagFilter */\nmapping.NEAREST = 0x2600;\nmapping.LINEAR = 0x2601;\n\n/* TextureMinFilter */\n/*      NEAREST */\n/*      LINEAR */\nmapping.NEAREST_MIPMAP_NEAREST = 0x2700;\nmapping.LINEAR_MIPMAP_NEAREST = 0x2701;\nmapping.NEAREST_MIPMAP_LINEAR = 0x2702;\nmapping.LINEAR_MIPMAP_LINEAR = 0x2703;\n\n/* TextureParameterName */\nmapping.TEXTURE_MAG_FILTER = 0x2800;\nmapping.TEXTURE_MIN_FILTER = 0x2801;\nmapping.TEXTURE_WRAP_S = 0x2802;\nmapping.TEXTURE_WRAP_T = 0x2803;\n\n/* TextureTarget */\nmapping.TEXTURE_2D = 0x0DE1;\nmapping.TEXTURE = 0x1702;\nmapping.TEXTURE_CUBE_MAP = 0x8513;\nmapping.TEXTURE_BINDING_CUBE_MAP = 0x8514;\nmapping.TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;\nmapping.TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;\nmapping.TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;\nmapping.TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;\nmapping.TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;\nmapping.TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;\nmapping.MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;\n\n/* TextureUnit */\nmapping.TEXTURE0 = 0x84C0;\nmapping.TEXTURE1 = 0x84C1;\nmapping.TEXTURE2 = 0x84C2;\nmapping.TEXTURE3 = 0x84C3;\nmapping.TEXTURE4 = 0x84C4;\nmapping.TEXTURE5 = 0x84C5;\nmapping.TEXTURE6 = 0x84C6;\nmapping.TEXTURE7 = 0x84C7;\nmapping.TEXTURE8 = 0x84C8;\nmapping.TEXTURE9 = 0x84C9;\nmapping.TEXTURE10 = 0x84CA;\nmapping.TEXTURE11 = 0x84CB;\nmapping.TEXTURE12 = 0x84CC;\nmapping.TEXTURE13 = 0x84CD;\nmapping.TEXTURE14 = 0x84CE;\nmapping.TEXTURE15 = 0x84CF;\nmapping.TEXTURE16 = 0x84D0;\nmapping.TEXTURE17 = 0x84D1;\nmapping.TEXTURE18 = 0x84D2;\nmapping.TEXTURE19 = 0x84D3;\nmapping.TEXTURE20 = 0x84D4;\nmapping.TEXTURE21 = 0x84D5;\nmapping.TEXTURE22 = 0x84D6;\nmapping.TEXTURE23 = 0x84D7;\nmapping.TEXTURE24 = 0x84D8;\nmapping.TEXTURE25 = 0x84D9;\nmapping.TEXTURE26 = 0x84DA;\nmapping.TEXTURE27 = 0x84DB;\nmapping.TEXTURE28 = 0x84DC;\nmapping.TEXTURE29 = 0x84DD;\nmapping.TEXTURE30 = 0x84DE;\nmapping.TEXTURE31 = 0x84DF;\nmapping.ACTIVE_TEXTURE = 0x84E0;\n\n/* TextureWrapMode */\nmapping.REPEAT = 0x2901;\nmapping.CLAMP_TO_EDGE = 0x812F;\nmapping.MIRRORED_REPEAT = 0x8370;\n\n/* Uniform Types */\nmapping.FLOAT_VEC2 = 0x8B50;\nmapping.FLOAT_VEC3 = 0x8B51;\nmapping.FLOAT_VEC4 = 0x8B52;\nmapping.INT_VEC2 = 0x8B53;\nmapping.INT_VEC3 = 0x8B54;\nmapping.INT_VEC4 = 0x8B55;\nmapping.BOOL = 0x8B56;\nmapping.BOOL_VEC2 = 0x8B57;\nmapping.BOOL_VEC3 = 0x8B58;\nmapping.BOOL_VEC4 = 0x8B59;\nmapping.FLOAT_MAT2 = 0x8B5A;\nmapping.FLOAT_MAT3 = 0x8B5B;\nmapping.FLOAT_MAT4 = 0x8B5C;\nmapping.SAMPLER_2D = 0x8B5E;\nmapping.SAMPLER_CUBE = 0x8B60;\n\n/* Vertex Arrays */\nmapping.VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;\nmapping.VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;\nmapping.VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;\nmapping.VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;\nmapping.VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;\nmapping.VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;\nmapping.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\n\n/* Read Format */\nmapping.IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;\nmapping.IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;\n\n/* Shader Source */\nmapping.COMPILE_STATUS = 0x8B81;\n\n/* Shader Precision-Specified Types */\nmapping.LOW_FLOAT = 0x8DF0;\nmapping.MEDIUM_FLOAT = 0x8DF1;\nmapping.HIGH_FLOAT = 0x8DF2;\nmapping.LOW_INT = 0x8DF3;\nmapping.MEDIUM_INT = 0x8DF4;\nmapping.HIGH_INT = 0x8DF5;\n\n/* Framebuffer Object. */\nmapping.FRAMEBUFFER = 0x8D40;\nmapping.RENDERBUFFER = 0x8D41;\n\nmapping.RGBA4 = 0x8056;\nmapping.RGB5_A1 = 0x8057;\nmapping.RGB565 = 0x8D62;\nmapping.DEPTH_COMPONENT16 = 0x81A5;\nmapping.STENCIL_INDEX = 0x1901;\nmapping.STENCIL_INDEX8 = 0x8D48;\nmapping.DEPTH_STENCIL = 0x84F9;\n\nmapping.RENDERBUFFER_WIDTH = 0x8D42;\nmapping.RENDERBUFFER_HEIGHT = 0x8D43;\nmapping.RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\nmapping.RENDERBUFFER_RED_SIZE = 0x8D50;\nmapping.RENDERBUFFER_GREEN_SIZE = 0x8D51;\nmapping.RENDERBUFFER_BLUE_SIZE = 0x8D52;\nmapping.RENDERBUFFER_ALPHA_SIZE = 0x8D53;\nmapping.RENDERBUFFER_DEPTH_SIZE = 0x8D54;\nmapping.RENDERBUFFER_STENCIL_SIZE = 0x8D55;\n\nmapping.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;\nmapping.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;\nmapping.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;\nmapping.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\n\nmapping.COLOR_ATTACHMENT0 = 0x8CE0;\nmapping.DEPTH_ATTACHMENT = 0x8D00;\nmapping.STENCIL_ATTACHMENT = 0x8D20;\nmapping.DEPTH_STENCIL_ATTACHMENT = 0x821A;\n\nmapping.NONE = 0;\n\nmapping.FRAMEBUFFER_COMPLETE = 0x8CD5;\nmapping.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;\nmapping.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\nmapping.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;\nmapping.FRAMEBUFFER_UNSUPPORTED = 0x8CDD;\nmapping.FRAMEBUFFER_BINDING = 0x8CA6;\nmapping.RENDERBUFFER_BINDING = 0x8CA7;\nmapping.MAX_RENDERBUFFER_SIZE = 0x84E8;\n\nmapping.INVALID_FRAMEBUFFER_OPERATION = 0x0506;\n\n/* WebGL-specific enums */\nmapping.UNPACK_FLIP_Y_WEBGL = 0x9240;\nmapping.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\nmapping.CONTEXT_LOST_WEBGL = 0x9242;\nmapping.UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nmapping.BROWSER_DEFAULT_WEBGL = 0x9244;\n\n/* webgl2 add */\nmapping.READ_BUFFER = 0x0C02;\nmapping.UNPACK_ROW_LENGTH = 0x0CF2;\nmapping.UNPACK_SKIP_ROWS = 0x0CF3;\nmapping.UNPACK_SKIP_PIXELS = 0x0CF4;\nmapping.PACK_ROW_LENGTH = 0x0D02;\nmapping.PACK_SKIP_ROWS = 0x0D03;\nmapping.PACK_SKIP_PIXELS = 0x0D04;\nmapping.COLOR = 0x1800;\nmapping.DEPTH = 0x1801;\nmapping.STENCIL = 0x1802;\nmapping.RED = 0x1903;\nmapping.RGB8 = 0x8051;\nmapping.RGBA8 = 0x8058;\nmapping.RGB10_A2 = 0x8059;\nmapping.TEXTURE_BINDING_3D = 0x806A;\nmapping.UNPACK_SKIP_IMAGES = 0x806D;\nmapping.UNPACK_IMAGE_HEIGHT = 0x806E;\nmapping.TEXTURE_3D = 0x806F;\nmapping.TEXTURE_WRAP_R = 0x8072;\nmapping.MAX_3D_TEXTURE_SIZE = 0x8073;\nmapping.UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nmapping.MAX_ELEMENTS_VERTICES = 0x80E8;\nmapping.MAX_ELEMENTS_INDICES = 0x80E9;\nmapping.TEXTURE_MIN_LOD = 0x813A;\nmapping.TEXTURE_MAX_LOD = 0x813B;\nmapping.TEXTURE_BASE_LEVEL = 0x813C;\nmapping.TEXTURE_MAX_LEVEL = 0x813D;\nmapping.MIN = 0x8007;\nmapping.MAX = 0x8008;\nmapping.DEPTH_COMPONENT24 = 0x81A6;\nmapping.MAX_TEXTURE_LOD_BIAS = 0x84FD;\nmapping.TEXTURE_COMPARE_MODE = 0x884C;\nmapping.TEXTURE_COMPARE_FUNC = 0x884D;\nmapping.CURRENT_QUERY = 0x8865;\nmapping.QUERY_RESULT = 0x8866;\nmapping.QUERY_RESULT_AVAILABLE = 0x8867;\nmapping.STREAM_READ = 0x88E1;\nmapping.STREAM_COPY = 0x88E2;\nmapping.STATIC_READ = 0x88E5;\nmapping.STATIC_COPY = 0x88E6;\nmapping.DYNAMIC_READ = 0x88E9;\nmapping.DYNAMIC_COPY = 0x88EA;\nmapping.MAX_DRAW_BUFFERS = 0x8824;\nmapping.DRAW_BUFFER0 = 0x8825;\nmapping.DRAW_BUFFER1 = 0x8826;\nmapping.DRAW_BUFFER2 = 0x8827;\nmapping.DRAW_BUFFER3 = 0x8828;\nmapping.DRAW_BUFFER4 = 0x8829;\nmapping.DRAW_BUFFER5 = 0x882A;\nmapping.DRAW_BUFFER6 = 0x882B;\nmapping.DRAW_BUFFER7 = 0x882C;\nmapping.DRAW_BUFFER8 = 0x882D;\nmapping.DRAW_BUFFER9 = 0x882E;\nmapping.DRAW_BUFFER10 = 0x882F;\nmapping.DRAW_BUFFER11 = 0x8830;\nmapping.DRAW_BUFFER12 = 0x8831;\nmapping.DRAW_BUFFER13 = 0x8832;\nmapping.DRAW_BUFFER14 = 0x8833;\nmapping.DRAW_BUFFER15 = 0x8834;\nmapping.MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;\nmapping.MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;\nmapping.SAMPLER_3D = 0x8B5F;\nmapping.SAMPLER_2D_SHADOW = 0x8B62;\nmapping.FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\nmapping.PIXEL_PACK_BUFFER = 0x88EB;\nmapping.PIXEL_UNPACK_BUFFER = 0x88EC;\nmapping.PIXEL_PACK_BUFFER_BINDING = 0x88ED;\nmapping.PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;\nmapping.FLOAT_MAT2x3 = 0x8B65;\nmapping.FLOAT_MAT2x4 = 0x8B66;\nmapping.FLOAT_MAT3x2 = 0x8B67;\nmapping.FLOAT_MAT3x4 = 0x8B68;\nmapping.FLOAT_MAT4x2 = 0x8B69;\nmapping.FLOAT_MAT4x3 = 0x8B6A;\nmapping.SRGB = 0x8C40;\nmapping.SRGB8 = 0x8C41;\nmapping.SRGB8_ALPHA8 = 0x8C43;\nmapping.COMPARE_REF_TO_TEXTURE = 0x884E;\nmapping.RGBA32F = 0x8814;\nmapping.RGB32F = 0x8815;\nmapping.RGBA16F = 0x881A;\nmapping.RGB16F = 0x881B;\nmapping.VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;\nmapping.MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;\nmapping.MIN_PROGRAM_TEXEL_OFFSET = 0x8904;\nmapping.MAX_PROGRAM_TEXEL_OFFSET = 0x8905;\nmapping.MAX_VARYING_COMPONENTS = 0x8B4B;\nmapping.TEXTURE_2D_ARRAY = 0x8C1A;\nmapping.TEXTURE_BINDING_2D_ARRAY = 0x8C1D;\nmapping.R11F_G11F_B10F = 0x8C3A;\nmapping.UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nmapping.RGB9_E5 = 0x8C3D;\nmapping.UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nmapping.TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;\nmapping.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;\nmapping.TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;\nmapping.TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;\nmapping.TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;\nmapping.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;\nmapping.RASTERIZER_DISCARD = 0x8C89;\nmapping.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;\nmapping.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;\nmapping.INTERLEAVED_ATTRIBS = 0x8C8C;\nmapping.SEPARATE_ATTRIBS = 0x8C8D;\nmapping.TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;\nmapping.TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;\nmapping.RGBA32UI = 0x8D70;\nmapping.RGB32UI = 0x8D71;\nmapping.RGBA16UI = 0x8D76;\nmapping.RGB16UI = 0x8D77;\nmapping.RGBA8UI = 0x8D7C;\nmapping.RGB8UI = 0x8D7D;\nmapping.RGBA32I = 0x8D82;\nmapping.RGB32I = 0x8D83;\nmapping.RGBA16I = 0x8D88;\nmapping.RGB16I = 0x8D89;\nmapping.RGBA8I = 0x8D8E;\nmapping.RGB8I = 0x8D8F;\nmapping.RED_INTEGER = 0x8D94;\nmapping.RGB_INTEGER = 0x8D98;\nmapping.RGBA_INTEGER = 0x8D99;\nmapping.SAMPLER_2D_ARRAY = 0x8DC1;\nmapping.SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nmapping.SAMPLER_CUBE_SHADOW = 0x8DC5;\nmapping.UNSIGNED_INT_VEC2 = 0x8DC6;\nmapping.UNSIGNED_INT_VEC3 = 0x8DC7;\nmapping.UNSIGNED_INT_VEC4 = 0x8DC8;\nmapping.INT_SAMPLER_2D = 0x8DCA;\nmapping.INT_SAMPLER_3D = 0x8DCB;\nmapping.INT_SAMPLER_CUBE = 0x8DCC;\nmapping.INT_SAMPLER_2D_ARRAY = 0x8DCF;\nmapping.UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nmapping.UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nmapping.UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nmapping.UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nmapping.DEPTH_COMPONENT32F = 0x8CAC;\nmapping.DEPTH32F_STENCIL8 = 0x8CAD;\nmapping.FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nmapping.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;\nmapping.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;\nmapping.FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;\nmapping.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;\nmapping.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;\nmapping.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;\nmapping.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;\nmapping.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;\nmapping.FRAMEBUFFER_DEFAULT = 0x8218;\nmapping.DEPTH_STENCIL_ATTACHMENT = 0x821A;\nmapping.DEPTH_STENCIL = 0x84F9;\nmapping.UNSIGNED_INT_24_8 = 0x84FA;\nmapping.DEPTH24_STENCIL8 = 0x88F0;\n\nmapping.UNSIGNED_NORMALIZED = 0x8C17;\nmapping.DRAW_FRAMEBUFFER_BINDING = 0x8CA6; /* Same as FRAMEBUFFER_BINDING */\nmapping.READ_FRAMEBUFFER = 0x8CA8;\nmapping.DRAW_FRAMEBUFFER = 0x8CA9;\nmapping.READ_FRAMEBUFFER_BINDING = 0x8CAA;\nmapping.RENDERBUFFER_SAMPLES = 0x8CAB;\nmapping.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;\nmapping.MAX_COLOR_ATTACHMENTS = 0x8CDF;\nmapping.COLOR_ATTACHMENT1 = 0x8CE1;\nmapping.COLOR_ATTACHMENT2 = 0x8CE2;\nmapping.COLOR_ATTACHMENT3 = 0x8CE3;\nmapping.COLOR_ATTACHMENT4 = 0x8CE4;\nmapping.COLOR_ATTACHMENT5 = 0x8CE5;\nmapping.COLOR_ATTACHMENT6 = 0x8CE6;\nmapping.COLOR_ATTACHMENT7 = 0x8CE7;\nmapping.COLOR_ATTACHMENT8 = 0x8CE8;\nmapping.COLOR_ATTACHMENT9 = 0x8CE9;\nmapping.COLOR_ATTACHMENT10 = 0x8CEA;\nmapping.COLOR_ATTACHMENT11 = 0x8CEB;\nmapping.COLOR_ATTACHMENT12 = 0x8CEC;\nmapping.COLOR_ATTACHMENT13 = 0x8CED;\nmapping.COLOR_ATTACHMENT14 = 0x8CEE;\nmapping.COLOR_ATTACHMENT15 = 0x8CEF;\nmapping.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;\nmapping.MAX_SAMPLES = 0x8D57;\nmapping.HALF_FLOAT = 0x140B;\nmapping.RG = 0x8227;\nmapping.RG_INTEGER = 0x8228;\nmapping.R8 = 0x8229;\nmapping.RG8 = 0x822B;\nmapping.R16F = 0x822D;\nmapping.R32F = 0x822E;\nmapping.RG16F = 0x822F;\nmapping.RG32F = 0x8230;\nmapping.R8I = 0x8231;\nmapping.R8UI = 0x8232;\nmapping.R16I = 0x8233;\nmapping.R16UI = 0x8234;\nmapping.R32I = 0x8235;\nmapping.R32UI = 0x8236;\nmapping.RG8I = 0x8237;\nmapping.RG8UI = 0x8238;\nmapping.RG16I = 0x8239;\nmapping.RG16UI = 0x823A;\nmapping.RG32I = 0x823B;\nmapping.RG32UI = 0x823C;\nmapping.VERTEX_ARRAY_BINDING = 0x85B5;\nmapping.R8_SNORM = 0x8F94;\nmapping.RG8_SNORM = 0x8F95;\nmapping.RGB8_SNORM = 0x8F96;\nmapping.RGBA8_SNORM = 0x8F97;\nmapping.SIGNED_NORMALIZED = 0x8F9C;\nmapping.COPY_READ_BUFFER = 0x8F36;\nmapping.COPY_WRITE_BUFFER = 0x8F37;\nmapping.COPY_READ_BUFFER_BINDING = 0x8F36; /* Same as COPY_READ_BUFFER */\nmapping.COPY_WRITE_BUFFER_BINDING = 0x8F37; /* Same as COPY_WRITE_BUFFER */\nmapping.UNIFORM_BUFFER = 0x8A11;\nmapping.UNIFORM_BUFFER_BINDING = 0x8A28;\nmapping.UNIFORM_BUFFER_START = 0x8A29;\nmapping.UNIFORM_BUFFER_SIZE = 0x8A2A;\nmapping.MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;\nmapping.MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;\nmapping.MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;\nmapping.MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;\nmapping.MAX_UNIFORM_BLOCK_SIZE = 0x8A30;\nmapping.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;\nmapping.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;\nmapping.UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;\nmapping.ACTIVE_UNIFORM_BLOCKS = 0x8A36;\nmapping.UNIFORM_TYPE = 0x8A37;\nmapping.UNIFORM_SIZE = 0x8A38;\nmapping.UNIFORM_BLOCK_INDEX = 0x8A3A;\nmapping.UNIFORM_OFFSET = 0x8A3B;\nmapping.UNIFORM_ARRAY_STRIDE = 0x8A3C;\nmapping.UNIFORM_MATRIX_STRIDE = 0x8A3D;\nmapping.UNIFORM_IS_ROW_MAJOR = 0x8A3E;\nmapping.UNIFORM_BLOCK_BINDING = 0x8A3F;\nmapping.UNIFORM_BLOCK_DATA_SIZE = 0x8A40;\nmapping.UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;\nmapping.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;\nmapping.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;\nmapping.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;\nmapping.INVALID_INDEX = 0xFFFFFFFF;\nmapping.MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;\nmapping.MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;\nmapping.MAX_SERVER_WAIT_TIMEOUT = 0x9111;\nmapping.OBJECT_TYPE = 0x9112;\nmapping.SYNC_CONDITION = 0x9113;\nmapping.SYNC_STATUS = 0x9114;\nmapping.SYNC_FLAGS = 0x9115;\nmapping.SYNC_FENCE = 0x9116;\nmapping.SYNC_GPU_COMMANDS_COMPLETE = 0x9117;\nmapping.UNSIGNALED = 0x9118;\nmapping.SIGNALED = 0x9119;\nmapping.ALREADY_SIGNALED = 0x911A;\nmapping.TIMEOUT_EXPIRED = 0x911B;\nmapping.CONDITION_SATISFIED = 0x911C;\nmapping.WAIT_FAILED = 0x911D;\nmapping.SYNC_FLUSH_COMMANDS_BIT = 0x00000001;\nmapping.VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;\nmapping.ANY_SAMPLES_PASSED = 0x8C2F;\nmapping.ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;\nmapping.SAMPLER_BINDING = 0x8919;\nmapping.RGB10_A2UI = 0x906F;\nmapping.INT_2_10_10_10_REV = 0x8D9F;\nmapping.TRANSFORM_FEEDBACK = 0x8E22;\nmapping.TRANSFORM_FEEDBACK_PAUSED = 0x8E23;\nmapping.TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;\nmapping.TRANSFORM_FEEDBACK_BINDING = 0x8E25;\nmapping.TEXTURE_IMMUTABLE_FORMAT = 0x912F;\nmapping.MAX_ELEMENT_INDEX = 0x8D6B;\nmapping.TEXTURE_IMMUTABLE_LEVELS = 0x82DF;\nmapping.TIMEOUT_IGNORED = -1;\nmapping.MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247;\n\n// ext ENUM for WEBGL_compressed_texture_s3tc\nmapping.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nmapping.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nmapping.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nmapping.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n// ext ENUM for WEBGL_compressed_texture_s3tc_srgb\nmapping.COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C;\nmapping.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D;\nmapping.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E;\nmapping.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F;\n\n// ext ENUM for EXT_texture_filter_anisotropic\nmapping.TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;\nmapping.MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\n\nlet NS = mapping;\n\n// 属性数据类型\nmapping.AttributeType = [\n    0,                          // AT_NONE (unsupported)\n    NS.FLOAT,                   // AT_FLOAT1\n    NS.FLOAT,                   // AT_FLOAT2\n    NS.FLOAT,                   // AT_FLOAT3\n    NS.FLOAT,                   // AT_FLOAT4\n    NS.UNSIGNED_BYTE,           // AT_UBYTE4\n    NS.SHORT,                   // AT_SHORT1\n    NS.SHORT,                   // AT_SHORT2\n    NS.SHORT                    // AT_SHORT4\n];\n\n// 属性尺寸\nmapping.AttributeChannels = [\n    0,  // AT_NONE (unsupported)\n    1,  // AT_FLOAT1\n    2,  // AT_FLOAT2\n    3,  // AT_FLOAT3\n    4,  // AT_FLOAT4\n    4,  // AT_UBYTE4\n    1,  // AT_SHORT1\n    2,  // AT_SHORT2\n    4   // AT_SHORT4\n];\n\n// 缓冲使用方式\nmapping.BufferUsage = [\n    NS.STATIC_DRAW,     // BU_STATIC\n    NS.DYNAMIC_DRAW,    // BU_DYNAMIC\n    NS.DYNAMIC_DRAW,    // BU_RENDERTARGET\n    NS.DYNAMIC_DRAW,    // BU_DEPTHSTENCIL\n    NS.DYNAMIC_DRAW     // BU_TEXTURE\n];\n\n// 纹理目标\nmapping.TextureTarget = [\n    0,                   // ST_NONE\n    NS.TEXTURE_2D,       // ST_2D\n    NS.TEXTURE_3D,       // ST_3D\n    NS.TEXTURE_CUBE_MAP, // ST_CUBE\n    NS.TEXTURE_2D_ARRAY  // ST_2D_ARRAY\n];\n\n// 纹理包装方式\nmapping.SamplerWrapMode = [\n    NS.REPEAT,          // SamplerState.REPEAT\n    NS.MIRRORED_REPEAT, // SamplerState.MIRRORED_REPEAT\n    NS.CLAMP_TO_EDGE    // SamplerState.CLAMP_EDGE\n];\n\nmapping.DepthCompare = [\n    NS.NEVER,       // CM_NEVER\n    NS.LESS,        // CM_LESS\n    NS.EQUAL,       // CM_EQUAL\n    NS.LEQUAL,      // CM_LEQUAL\n    NS.GREATER,     // CM_GREATER\n    NS.NOTEQUAL,    // CM_NOTEQUAL\n    NS.GEQUAL,      // CM_GEQUAL\n    NS.ALWAYS       // CM_ALWAYS\n];\n\nmapping.StencilCompare = [\n    NS.NEVER,       // CM_NEVER\n    NS.LESS,        // CM_LESS\n    NS.EQUAL,       // CM_EQUAL\n    NS.LEQUAL,      // CM_LEQUAL\n    NS.GREATER,     // CM_GREATER\n    NS.NOTEQUAL,    // CM_NOTEQUAL\n    NS.GEQUAL,      // CM_GEQUAL\n    NS.ALWAYS       // CM_ALWAYS\n];\n\nmapping.StencilOperation = [\n    NS.KEEP,    // OT_KEEP\n    NS.ZERO,    // OT_ZERO\n    NS.REPLACE, // OT_REPLACE\n    NS.INCR,    // OT_INCREMENT\n    NS.DECR,    // OT_DECREMENT\n    NS.INVERT   // OT_INVERT\n];\n\n// 透明通道混合\nmapping.AlphaBlend = [\n    NS.ZERO,\n    NS.ONE,\n    NS.SRC_COLOR,\n    NS.ONE_MINUS_SRC_COLOR,\n    NS.DST_COLOR,\n    NS.ONE_MINUS_DST_COLOR,\n    NS.SRC_ALPHA,\n    NS.ONE_MINUS_SRC_ALPHA,\n    NS.DST_ALPHA,\n    NS.ONE_MINUS_DST_ALPHA,\n    NS.SRC_ALPHA_SATURATE,\n    NS.CONSTANT_COLOR,\n    NS.ONE_MINUS_CONSTANT_COLOR,\n    NS.CONSTANT_ALPHA,\n    NS.ONE_MINUS_CONSTANT_ALPHA\n];\n\nmapping.SamplerFilter = [\n    NS.NEAREST,                 // SamplerState.NEAREST\n    NS.LINEAR,                  // SamplerState.LINEAR\n    NS.NEAREST_MIPMAP_NEAREST,  // SamplerState.NEAREST_MIPMAP_NEAREST\n    NS.NEAREST_MIPMAP_LINEAR,   // SamplerState.NEAREST_MIPMAP_LINEAR\n    NS.LINEAR_MIPMAP_NEAREST,   // SamplerState.LINEAR_MIPMAP_NEAREST\n    NS.LINEAR_MIPMAP_LINEAR     // SamplerState.LINEAR_MIPMAP_LINEAR\n];\n\nmapping.TextureInternalFormat = [\n    0,                                  // TF_NONE\n    NS.RGB,                             // TF_R5G6B5\n    NS.RGB5_A1,                         // TF_A1R5G5B5\n    NS.RGBA4,                           // TF_A4R4G4B4\n    NS.ALPHA,                           // TF_A8\n    NS.LUMINANCE,                      // TF_L8\n    NS.LUMINANCE_ALPHA,                 // TF_A8L8\n    NS.RGB8,                            // TF_R8G8B8\n    NS.RGBA,                            // TF_A8R8G8B8\n    NS.RGBA,                            // TF_A8B8G8R8\n    NS.LUMINANCE,                       // TF_L16\n    NS.RG16I,                           // TF_G16R16\n    NS.RGBA,                            // TF_A16B16G16R16\n    NS.R16F,                            // TF_R16F\n    NS.RG16F,                           // TF_G16R16F\n    NS.RGBA16F_ARB,                     // TF_A16B16G16R16F\n    NS.R32F,                            // TF_R32F\n    NS.RG32F,                           // TF_G32R32F\n    NS.RGBA32F_ARB,                     // TF_A32B32G32R32F\n    NS.COMPRESSED_RGBA_S3TC_DXT1_EXT,   // TF_DXT1\n    NS.COMPRESSED_RGBA_S3TC_DXT3_EXT,   // TF_DXT3\n    NS.COMPRESSED_RGBA_S3TC_DXT5_EXT,   // TF_DXT5\n    NS.DEPTH24_STENCIL8                 // TF_D24S8\n];\n\nmapping.TextureFormat = [\n    0,                                  // TF_NONE\n    NS.RGB,                             // TF_R5G6B5\n    NS.RGBA,                            // TF_A1R5G5B5\n    NS.RGBA,                            // TF_A4R4G4B4\n    NS.ALPHA,                           // TF_A8\n    NS.LUMINANCE,                       // TF_L8\n    NS.LUMINANCE_ALPHA,                 // TF_A8L8\n    NS.RGB,                             // TF_R8G8B8\n    NS.RGBA,                            // TF_A8R8G8B8\n    NS.RGBA,                            // TF_A8B8G8R8\n    NS.LUMINANCE,                       // TF_L16\n    NS.RG,                              // TF_G16R16\n    NS.RGBA,                            // TF_A16B16G16R16\n    NS.RED,                             // TF_R16F\n    NS.RG,                              // TF_G16R16F\n    NS.RGBA,                            // TF_A16B16G16R16F\n    NS.RED,                             // TF_R32F\n    NS.RG,                              // TF_G32R32F\n    NS.RGBA,                            // TF_A32B32G32R32F\n    NS.COMPRESSED_RGBA_S3TC_DXT1_EXT,   // TF_DXT1\n    NS.COMPRESSED_RGBA_S3TC_DXT3_EXT,   // TF_DXT3\n    NS.COMPRESSED_RGBA_S3TC_DXT5_EXT,   // TF_DXT5\n    NS.UNSIGNED_INT_24_8_WEBGL          // TF_D24S8\n];\n\nmapping.TextureType = [\n    0,                              // TF_NONE\n    NS.UNSIGNED_SHORT_5_6_5,        // TF_R5G6B5\n    NS.UNSIGNED_SHORT_1_5_5_5,      // TF_A1R5G5B5\n    NS.UNSIGNED_SHORT_4_4_4_4,      // TF_A4R4G4B4\n    NS.UNSIGNED_BYTE,               // TF_A8\n    NS.UNSIGNED_BYTE,               // TF_L8\n    NS.UNSIGNED_BYTE,               // TF_A8L8\n    NS.UNSIGNED_BYTE,               // TF_R8G8B8\n    NS.UNSIGNED_BYTE,               // TF_A8R8G8B8\n    NS.UNSIGNED_BYTE,               // TF_A8B8G8R8\n    NS.UNSIGNED_SHORT,              // TF_L16\n    NS.UNSIGNED_SHORT,              // TF_G16R16\n    NS.UNSIGNED_SHORT,              // TF_A16B16G16R16\n    NS.HALF_FLOAT_OES,              // TF_R16F\n    NS.HALF_FLOAT_OES,              // TF_G16R16F\n    NS.HALF_FLOAT_OES,              // TF_A16B16G16R16F\n    NS.FLOAT,                       // TF_R32F\n    NS.FLOAT,                       // TF_G32R32F\n    NS.FLOAT,                       // TF_A32B32G32R32F\n    NS.NONE,                        // TF_DXT1 (not needed)\n    NS.NONE,                        // TF_DXT3 (not needed)\n    NS.NONE,                        // TF_DXT5 (not needed)\n    NS.UNSIGNED_INT_24_8_WEBGL      // TF_D24S8\n];\n\nmapping.PrimitiveType = [\n    0,                  // PT_NONE (not used)\n    NS.POINTS,          // PT_POLYPOINT\n    NS.LINES,           // PT_POLYSEGMENTS_DISJOINT\n    NS.LINE_STRIP,      // PT_POLYSEGMENTS_CONTIGUOUS\n    0,                  // PT_TRIANGLES (not used)\n    NS.TRIANGLES,       // PT_TRIMESH\n    NS.TRIANGLE_STRIP,  // PT_TRISTRIP\n    NS.TRIANGLE_FAN     // PT_TRIFAN\n];\n\nexport default mapping;\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass SamplerState extends D3Object {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.minFilter = SamplerState.LINEAR_MIPMAP_LINEAR;\n\t\tthis.magFilter = SamplerState.LINEAR;\n\n\t\tthis.maxAnisotropy = 1;\n\n\t\tthis.wrapS = SamplerState.CLAMP_TO_EDGE;\n\t\tthis.wrapT = SamplerState.CLAMP_TO_EDGE;\n\t\tthis.wrapR = SamplerState.CLAMP_TO_EDGE;\n\n\t\tthis.minLod = 0;\n\t\tthis.maxLod = 0;\n\n\t\tthis.compare = SamplerState.LEQUAL;\n\t\tthis.mode = SamplerState.NONE;\n\t}\n}\n\n\n\n// filter (value from gl context)\nSamplerState.NEAREST = 0x2600;\nSamplerState.LINEAR = 0x2601;\nSamplerState.NEAREST_MIPMAP_NEAREST = 0x2700;\nSamplerState.LINEAR_MIPMAP_NEAREST = 0x2701;\nSamplerState.NEAREST_MIPMAP_LINEAR = 0x2702;\nSamplerState.LINEAR_MIPMAP_LINEAR = 0x2703;\n\n// compare function (value from gl context)\nSamplerState.NEVER = 0x0200;\nSamplerState.LESS = 0x0201;\nSamplerState.EQUAL = 0x0202;\nSamplerState.LEQUAL = 0x0203;\nSamplerState.GREATER = 0x0204;\nSamplerState.NOTEQUAL = 0x0205;\nSamplerState.GEQUAL = 0x0206;\nSamplerState.ALWAYS = 0x0207;\n\n// compare mode (value from gl context)\nSamplerState.NONE = 0;\nSamplerState.COMPARE_REF_TO_TEXTURE = 0x884E;\n\n// wrap mode (value from gl context)\nSamplerState.REPEAT = 0x2901;\nSamplerState.CLAMP_TO_EDGE = 0x812F;\nSamplerState.MIRRORED_REPEAT = 0x8370;\n\n// default sampler\nSamplerState.defaultSampler = new SamplerState;\n\nexport { SamplerState };","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport { SamplerState } from './SamplerState';\n\n/**\n * Abstract base class. The class is the base for VertexShader and FragShader.\n * The class data defines the shader but does not contain instances of shader \n * constants and shader textures.  Each instance of Shader may therefore be a \n * singleton, identified by 'shaderName'.  The drawing of geometry involves a \n * Shader (the abstraction) and a ShaderParameters (the instance of constants \n * and textures).\n * \n * The constructor arrays must be dynamically allocated.  Shader assumes\n * responsibility for deleting them.  The construction of a Shader is not\n * complete until all programs (for the letious profiles) are provided\n * via the setProgram function.\n */\nclass Shader extends D3Object {\n\n    /**\n     * @param {string} name - The name of Shader for identified\n     * @param {number} numInputs - number of input attributers\n     * @param {number} numConstants - number of input uniforms\n     * @param {number} numSamplers - number of input samplers\n     */\n    constructor(name, numInputs = 0, numConstants = 0, numSamplers = 0) {\n        super(name);\n\n        if (numInputs > 0) {\n            this.inputName = new Array(numInputs);\n            this.inputType = new Array(numInputs);\n            this.inputSemantic = new Array(numInputs);\n        } else {\n            this.inputName = null;\n            this.inputType = null;\n            this.inputSemantic = null;\n        }\n\n        this.numInputs = numInputs;\n        let i, dim;\n        this.numConstants = numConstants;\n        if (numConstants > 0) {\n            this.constantName = new Array(numConstants);\n            this.constantType = new Array(numConstants);\n            this.constantFuncName = new Array(numConstants);\n            this.constantSize = new Array(numConstants);\n        } else {\n            this.constantName = null;\n            this.constantType = null;\n            this.constantFuncName = null;\n            this.constantSize = null;\n        }\n\n        this.numSamplers = numSamplers;\n        this.textureUnit = [];\n        if (numSamplers > 0) {\n            this.samplerName = new Array(numSamplers);\n            this.samplerType = new Array(numSamplers);\n            this.samplers = new Array(numSamplers);\n            for (i = 0; i < numSamplers; ++i) {\n                this.samplers[i] = null;\n            }\n            this.textureUnit = new Array(numSamplers);\n        } else {\n            this.samplerName = null;\n            this.samplerType = null;\n            this.samplers = null;\n            this.textureUnit = null;\n        }\n\n        this.program = '';\n    }\n\n    /**\n     * Declear a attribute at position i\n     * @param {number} i index\n     * @param {string} name\n     * @param {number} type - Shader.VT_XXX\n     * @param {number} semantic - Shader.VS_XXX\n     */\n    setInput(index, name, type, semantic) {\n        if (0 <= index && index < this.numInputs) {\n            this.inputName[index] = name;\n            this.inputType[index] = type;\n            this.inputSemantic[index] = semantic;\n            return;\n        }\n        console.assert(false, 'Invalid index.');\n    }\n\n    /**\n     * @param {number} i\n     * @param {string} name\n     * @param {number} type - Shader.VT_XXX(uniform)\n     */\n    setConstant(i, name, type) {\n        if (0 <= i && i < this.numConstants) {\n            this.constantName[i] = name;\n            this.constantType[i] = type;\n            let f = '', s = 0;\n            switch (type) {\n                case Shader.VT_MAT4:\n                    f = 'uniformMatrix4fv';\n                    s = 16;\n                    break;\n                case Shader.VT_BOOL:\n                case Shader.VT_INT:\n                    f = 'uniform1i';\n                    s = 1;\n                    break;\n                case Shader.VT_BVEC2:\n                case Shader.VT_IVEC2:\n                    f = 'uniform2iv';\n                    s = 2;\n                    break;\n                case Shader.VT_BVEC3:\n                case Shader.VT_IVEC3:\n                    f = 'uniform3iv';\n                    s = 3;\n                    break;\n                case Shader.VT_BVEC4:\n                case Shader.VT_IVEC4:\n                    f = 'uniform4iv';\n                    s = 4;\n                    break;\n                case Shader.VT_FLOAT:\n                    f = 'uniform1f';\n                    s = 1;\n                    break;\n                case Shader.VT_VEC2:\n                    f = 'uniform2fv';\n                    s = 2;\n                    break;\n                case Shader.VT_VEC3:\n                    f = 'uniform3fv';\n                    s = 3;\n                    break;\n                case Shader.VT_VEC4:\n                    f = 'uniform4fv';\n                    s = 4;\n                    break;\n                case Shader.VT_MAT2:\n                    f = 'uniformMatrix2fv';\n                    s = 4;\n                    break;\n                case Shader.VT_MAT3:\n                    f = 'uniformMatrix3fv';\n                    s = 9;\n                    break;\n            }\n            this.constantSize[i] = s;\n            this.constantFuncName[i] = f;\n            return;\n        }\n        console.assert(false, 'Invalid index.');\n    }\n\n    /**\n     * @param {number} i\n     * @param {string} name\n     * @param {number} type - Shader.ST_XXX(sampler)\n     */\n    setSampler(i, name, type) {\n        if (0 <= i && i < this.numSamplers) {\n            this.samplerName[i] = name;\n            this.samplerType[i] = type;\n            return;\n        }\n        console.assert(false, 'Invalid index.');\n    }\n\n    /**\n     * @param {number} i \n     * @param {SamplerState} sampler \n     */\n    setSamplerState(i, sampler) {\n        if (0 <= i && i < this.numSamplers) {\n            this.samplers[i] = sampler;\n            return;\n        }\n        console.assert(false, 'Invalid index.');\n    }\n\n    setTextureUnit(i, textureUnit) {\n        if (0 <= i && i < this.numSamplers) {\n            this.textureUnit[i] = textureUnit;\n            return;\n        }\n        console.assert(false, 'Invalid index.');\n    }\n\n    setProgram(program) {\n        this.program = program;\n    }\n\n    setTextureUnits(textureUnits) {\n        this.textureUnit = textureUnits.slice();\n    }\n\n    getInputName(i) {\n        if (0 <= i && i < this.numInputs) {\n            return this.inputName[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return '';\n    }\n\n    getInputType(i) {\n        if (0 <= i && i < this.numInputs) {\n            return this.inputType[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return Shader.VT_NONE;\n    }\n\n    getInputSemantic(i) {\n        if (0 <= i && i < this.numInputs) {\n            return this.inputSemantic[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return Shader.VS_NONE;\n    }\n\n    getConstantFuncName(i) {\n        if (0 <= i && i < this.numConstants) {\n            return this.constantFuncName[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return '';\n    }\n\n    getConstantName(i) {\n        if (0 <= i && i < this.numConstants) {\n            return this.constantName[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return '';\n    }\n\n    getConstantType(i) {\n        if (0 <= i && i < this.numConstants) {\n            return this.constantType[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return 0;\n    }\n\n    getConstantSize(i) {\n        if (0 <= i && i < this.numConstants) {\n            return this.constantSize[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return 0;\n    }\n\n    getSamplerName(i) {\n        if (0 <= i && i < this.numSamplers) {\n            return this.samplerName[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return '';\n    }\n\n    getSamplerType(i) {\n        if (0 <= i && i < this.numSamplers) {\n            return this.samplerType[i];\n        }\n\n        console.assert(false, 'Invalid index.');\n        return Shader.ST_NONE;\n    }\n\n    getSamplerState(i) {\n        if (0 <= i && i < this.numSamplers) {\n            return this.samplers[i];\n        }\n        console.assert(false, 'Invalid index.');\n        return 0;\n    }\n\n    getTextureUnit(i) {\n        if (0 <= i && i < this.numSamplers) {\n            return this.textureUnit[i];\n        }\n        console.assert(false, 'Invalid index.');\n        return 0;\n    }\n\n    getProgram() {\n        return this.program;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n\n        this.inputName = inStream.readStringArray();\n        this.numInputs = this.inputName.length;\n        this.inputType = inStream.readSizedEnumArray(this.numInputs);\n        this.inputSemantic = inStream.readSizedEnumArray(this.numInputs);\n        this.constantName = inStream.readStringArray();\n        this.numConstants = this.constantName.length;\n        this.numRegistersUsed = inStream.readSizedInt32Array(this.numConstants);\n\n        this.samplerName = inStream.readStringArray();\n        this.numSamplers = this.samplerName.length;\n        this.samplerType = inStream.readSizedEnumArray(this.numSamplers);\n        let maxProfiles = inStream.readUint32();\n\n        this.profileOwner = inStream.readBool();\n    }\n\n    static factory(inStream) {\n        let obj = new this();\n        obj.load(inStream);\n        return obj;\n    }\n}\n\n// Maximum value for anisotropic filtering.\nDECLARE_ENUM(Shader, { MAX_ANISOTROPY: 16 }, false);\n\n// Types for the input and output variables of the shader program.\nDECLARE_ENUM(Shader, {\n    VT_NONE: 0,\n    VT_BOOL: 1,\n    VT_BVEC2: 2,\n    VT_BVEC3: 3,\n    VT_BVEC4: 4,\n    VT_FLOAT: 5,\n    VT_VEC2: 6,\n    VT_VEC3: 7,\n    VT_VEC4: 8,\n    VT_MAT2: 9,\n    VT_MAT3: 10,\n    VT_MAT4: 11,\n    VT_INT: 12,\n    VT_IVEC2: 13,\n    VT_IVEC3: 14,\n    VT_IVEC4: 15\n}, false);\n\n// Semantics for the input letiables of the shader program.\nDECLARE_ENUM(Shader, {\n    VS_NONE: 0,\n    VS_POSITION: 1,       // ATTR0\n    VS_BLENDWEIGHT: 2,    // ATTR1\n    VS_NORMAL: 3,         // ATTR2\n    VS_COLOR0: 4,         // ATTR3 (and for render targets)\n    VS_COLOR1: 5,         // ATTR4 (and for render targets)\n    VS_FOGCOORD: 6,       // ATTR5\n    VS_PSIZE: 7,          // ATTR6\n    VS_BLENDINDICES: 8,   // ATTR7\n    VS_TEXCOORD0: 9,      // ATTR8\n    VS_TEXCOORD1: 10,     // ATTR9\n    VS_TEXCOORD2: 11,     // ATTR10\n    VS_TEXCOORD3: 12,     // ATTR11\n    VS_TEXCOORD4: 13,     // ATTR12\n    VS_TEXCOORD5: 14,     // ATTR13\n    VS_TEXCOORD6: 15,     // ATTR14\n    VS_TEXCOORD7: 16,     // ATTR15\n    VS_FOG: 17,           // same as L5.Shader.VS_FOGCOORD (ATTR5)\n    VS_TANGENT: 18,       // same as L5.Shader.VS_TEXCOORD6 (ATTR14)\n    VS_BINORMAL: 19,      // same as L5.Shader.VS_TEXCOORD7 (ATTR15)\n    VS_COLOR2: 20,        // support for multiple render targets\n    VS_COLOR3: 21,        // support for multiple render targets\n    VS_DEPTH0: 22        // support for multiple render targets\n}, false);\n\n// The sampler type for interpreting the texture assigned to the sampler.\nDECLARE_ENUM(Shader, {\n    ST_NONE: 0,\n    ST_2D: 1,\n    ST_3D: 2,\n    ST_CUBE: 3,\n    ST_2D_ARRAY: 4\n}, false);\n\nexport { Shader };\n","import { default as webgl } from './GLMapping';\nimport { Shader } from '../../shaders/Shader';\n\nclass GLShader {\n    /**\n     * @param {Renderer} renderer\n     * @param {Shader} shader\n     * @param {ShaderParameters} parameters\n     * @param {number} maxSamplers\n     */\n    setSamplerState(renderer, shader, parameters, maxSamplers) {\n        let gl = renderer.gl;\n\n        let numSamplers = shader.numSamplers;\n        if (numSamplers > maxSamplers) {\n            numSamplers = maxSamplers;\n        }\n\n        for (let i = 0; i < numSamplers; ++i) {\n            let type = shader.getSamplerType(i);\n            let target = webgl.TextureTarget[type];\n            let textureUnit = shader.getTextureUnit(i);\n            const texture = parameters.getTexture(i);\n            let wrap0, wrap1;\n\n            let samplerState = shader.getSamplerState(i);\n\n            switch (type) {\n                case Shader.ST_2D:\n                    {\n                        renderer._enableTexture2D(texture, textureUnit);\n                        renderer._enableSamplerState(samplerState, textureUnit);\n                        if (samplerState.maxAnisotropy !== gl.getTexParameter(gl.TEXTURE_2D, webgl.TEXTURE_MAX_ANISOTROPY_EXT)) {\n                            gl.texParameterf(gl.TEXTURE_2D, webgl.TEXTURE_MAX_ANISOTROPY_EXT, samplerState.maxAnisotropy);\n                        }\n                        break;\n                    }\n                case Shader.ST_CUBE:\n                    {\n                        renderer._enableTextureCube(texture, textureUnit);\n                        renderer._enableSamplerState(samplerState, textureUnit);\n                        if (samplerState.maxAnisotropy !== gl.getTexParameter(gl.TEXTURE_CUBE_MAP, webgl.TEXTURE_MAX_ANISOTROPY_EXT)) {\n                            gl.texParameterf(gl.TEXTURE_CUBE_MAP, webgl.TEXTURE_MAX_ANISOTROPY_EXT, samplerState.maxAnisotropy);\n                        }\n                        break;\n                    }\n                case Shader.ST_3D:\n                    break;\n                case Shader.ST_2D_ARRAY:\n                    break;\n                default:\n                    console.assert(false, 'Invalid sampler type');\n                    break;\n            }\n        }\n    }\n\n    /**\n     * @param {Shader} shader\n     * @param {ShaderParameters} parameters\n     * @param {Renderer} renderer\n     * @param {number} maxSamplers\n     */\n    disableTexture(renderer, shader, parameters, maxSamplers) {\n        let numSamplers = shader.numSamplers;\n        if (numSamplers > maxSamplers) {\n            numSamplers = maxSamplers;\n        }\n\n        let type, textureUnit, texture;\n\n        for (let i = 0; i < numSamplers; ++i) {\n            type = shader.getSamplerType(i);\n            textureUnit = shader.getTextureUnit(i);\n            texture = parameters.getTexture(i);\n\n            switch (type) {\n                case Shader.ST_2D:\n                    {\n                        renderer._disableTexture2D(texture, textureUnit);\n                        break;\n                    }\n                case Shader.ST_CUBE:\n                    {\n                        renderer._disableTextureCube(texture, textureUnit);\n                        break;\n                    }\n                case Shader.ST_3D:\n                    break;\n                case Shader.ST_2D_ARRAY:\n                    break;\n                default:\n                    console.assert(false, 'Invalid sampler type');\n                    break;\n            }\n        }\n    }\n}\n\nexport { GLShader };","import { GLShader } from './GLShader';\n\nclass GLVertexShader extends GLShader {\n\n    /**\n     * @param {Renderer} renderer \n     * @param {Shader} shader \n     */\n    constructor(renderer, shader) {\n        super();\n        let gl = renderer.gl;\n        this.shader = gl.createShader(gl.VERTEX_SHADER);\n\n        let programText = shader.getProgram();\n\n        gl.shaderSource(this.shader, programText);\n        gl.compileShader(this.shader);\n\n        console.assert(\n            gl.getShaderParameter(this.shader, gl.COMPILE_STATUS),\n            gl.getShaderInfoLog(this.shader)\n        );\n    }\n    /**\n     * @param {Renderer} renderer\n     * @param {Map} mapping\n     * @param {VertexShader} shader\n     * @param {ShaderParameters} parameters\n     */\n    enable(renderer, mapping, shader, parameters) {\n        let gl = renderer.gl;\n\n        // 更新uniform 变量\n\n        // step1. 遍历顶点着色器常量\n        let numConstants = shader.numConstants;\n        for (let i = 0; i < numConstants; ++i) {\n            let locating = mapping.get(shader.getConstantName(i));\n            let funcName = shader.getConstantFuncName(i);\n            let size = shader.getConstantSize(i);\n            let data = parameters.getConstant(i).data;\n            if (size > 4) {\n                gl[funcName](locating, false, data);\n            } else {\n                gl[funcName](locating, data.subarray(0, size));\n            }\n        }\n\n        this.setSamplerState(renderer, shader, parameters, renderer.data.maxVShaderImages);\n    }\n    /**\n     * @param {VertexShader} shader\n     * @param {ShaderParameters} parameters\n     * @param {Renderer} renderer\n     */\n    disable(renderer, shader, parameters) {\n        this.disableTexture(renderer, shader, parameters, renderer.data.maxVShaderImages);\n    }\n}\n\nexport { GLVertexShader };\n","import { GLShader } from './GLShader';\n\nclass GLFragShader extends GLShader {\n\n    /**\n     * @param {Renderer} renderer \n     * @param {VertexShader} shader \n     */\n    constructor(renderer, shader) {\n        super();\n        let gl = renderer.gl;\n        this.shader = gl.createShader(gl.FRAGMENT_SHADER);\n\n        let programText = shader.getProgram();\n\n        gl.shaderSource(this.shader, programText);\n        gl.compileShader(this.shader);\n\n        console.assert(\n            gl.getShaderParameter(this.shader, gl.COMPILE_STATUS),\n            gl.getShaderInfoLog(this.shader)\n        );\n    }\n\n    /**\n     * 释放持有的GL资源\n     * @param {WebGL2RenderingContext} gl\n     */\n    free(gl) {\n        gl.deleteShader(this.shader);\n        delete this.shader;\n    }\n\n    /**\n     * @param {Renderer} renderer\n     * @param {Map} mapping\n     * @param {FragShader} shader\n     * @param {ShaderParameters} parameters\n     */\n    enable(renderer, mapping, shader, parameters) {\n        let gl = renderer.gl;\n        // step1. 遍历顶点着色器常量\n        let numConstants = shader.numConstants;\n        for (let i = 0; i < numConstants; ++i) {\n            let locating = mapping.get(shader.getConstantName(i));\n            let funcName = shader.getConstantFuncName(i);\n            let size = shader.getConstantSize(i);\n            let data = parameters.getConstant(i).data;\n            if (size > 4) {\n                gl[funcName](locating, false, data);\n            } else {\n                gl[funcName](locating, data.subarray(0, size));\n            }\n        }\n\n        this.setSamplerState(renderer, shader, parameters, renderer.data.maxFShaderImages);\n    }\n\n    /**\n     * @param {Renderer} renderer\n     * @param {FragShader} shader\n     * @param {ShaderParameters} parameters\n     */\n    disable(renderer, shader, parameters) {\n        let gl = renderer.gl;\n        this.disableTexture(renderer, shader, parameters, renderer.data.maxFShaderImages);\n    }\n}\n\nexport { GLFragShader };","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass VertexFormat extends D3Object {\n\n    /**\n     * @param {number} numAttributes\n     */\n    constructor(numAttributes) {\n        console.assert(numAttributes >= 0, 'Number of attributes must be positive');\n        super();\n\n        const MAX_ATTRIBUTES = VertexFormat.MAX_ATTRIBUTES;\n\n        this.numAttributes = numAttributes;\n        this.stride = 0;\n\n        this.elements = new Array(MAX_ATTRIBUTES);\n        for (let i = 0; i < MAX_ATTRIBUTES; ++i) {\n            this.elements[i] = new VertexFormat.Element(0, 0, VertexFormat.AT_NONE, VertexFormat.AU_NONE, 0);\n        }\n    }\n\n\n    /**\n     * 创建顶点格式快捷函数\n     * @param {number} numAttributes - 顶点元素数量\n     * @param {Array} args\n     *\n     * @returns {VertexFormat}\n     */\n    static create(numAttributes, ...args/*, usage1, type1, usageIndex1, usage2,...*/) {\n        let vf = new VertexFormat(numAttributes);\n\n        let offset = 0;\n        let start = 0;\n        const TYPE_SIZE = VertexFormat.TYPE_SIZE;\n\n        for (let i = 0; i < numAttributes; ++i, start += 3) {\n            let usage = args[start];\n            let type = args[start + 1];\n            let usageIndex = args[start + 2];\n            vf.setAttribute(i, 0, offset, type, usage, usageIndex);\n\n            offset += TYPE_SIZE[type];\n        }\n        vf.setStride(offset);\n\n        return vf;\n    }\n\n    /**\n     * 设置指定位置顶点元素\n     * @param {number} attribute\n     * @param {number} streamIndex\n     * @param {number} offset\n     * @param {number} type - AttributeType\n     * @param {number} usage - AttributeUsage\n     * @param {number} usageIndex\n     */\n    setAttribute(attribute, streamIndex, offset, type, usage, usageIndex) {\n        console.assert(0 <= attribute && attribute < this.numAttributes, 'Invalid index in SetAttribute');\n\n        let element = this.elements[attribute];\n        element.streamIndex = streamIndex;\n        element.offset = offset;\n        element.type = type;\n        element.usage = usage;\n        element.usageIndex = usageIndex;\n    }\n\n    /**\n     * 获取指定位置顶点元素\n     * @param {number} attribute - 顶点元素索引\n     * @returns {VertexFormat.Element}\n     */\n    getAttribute(attribute) {\n        console.assert(0 <= attribute && attribute < this.numAttributes, 'Invalid index in GetAttribute');\n        return this.elements[attribute].clone();\n    }\n\n    /**\n     * 获取指定位置顶点元素\n     * @param {number} stride\n     */\n    setStride(stride) {\n        console.assert(0 < stride, 'Stride must be positive');\n        this.stride = stride;\n    }\n\n    /**\n     * 根据用途获取顶点元素位置\n     * @param {number} usage - 用途，参考VertexFormat.AU_XXX\n     * @param {number} usageIndex\n     * @returns {number}\n     */\n    getIndex(usage, usageIndex = 0) {\n        usageIndex = usageIndex || 0;\n\n        for (let i = 0; i < this.numAttributes; ++i) {\n            if (this.elements[i].usage === usage &&\n                this.elements[i].usageIndex === usageIndex\n            ) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * @param {number} attribute\n     * @returns {number}\n     */\n    getStreamIndex(attribute) {\n        if (0 <= attribute && attribute < this.numAttributes) {\n            return this.elements[attribute].streamIndex;\n        }\n        console.assert(false, 'Invalid index in getStreamIndex');\n        return 0;\n    }\n\n    /**\n     * 获取顶点元素偏移\n     * @param {number} attribute - 用途，参考VertexFormat.AU_XXX\n     * @returns {number}\n     */\n    getOffset(attribute) {\n        if (0 <= attribute && attribute < this.numAttributes) {\n            return this.elements[attribute].offset;\n        }\n        console.assert(false, 'Invalid index in getOffset');\n        return 0;\n    }\n\n    /**\n     * 获取顶点元素数据类型\n     * @param {number} attribute 顶点索引\n     * @returns {number} VertexFormat.AT_XXX\n     */\n    getAttributeType(attribute) {\n        if (0 <= attribute && attribute < this.numAttributes) {\n            return this.elements[attribute].type;\n        }\n        console.assert(false, 'Invalid index in GetAttributeType');\n        return VertexFormat.AT_NONE;\n    }\n\n    /**\n     * 填充VBA 属性\n     * @param {number} usage - 用途, 参考 VertexFormat.AU_XXX\n     * @param {VBAAttr} attr\n     * @param {number} usageIndex\n     */\n    fillVBAttr(usage, attr, usageIndex = 0) {\n        let index = this.getIndex(usage);\n        if (index >= 0) {\n            let type = this.getAttributeType(index, usageIndex);\n            attr.offset = this.getOffset(index);\n            attr.eType = VertexFormat.TYPE_CST[type];\n            attr.eNum = VertexFormat.NUM_COMPONENTS[type];\n            attr.cSize = VertexFormat.TYPE_SIZE[type];\n            attr.wFn = 'set' + attr.eType.name.replace('Array', '');\n            attr.rFn = 'get' + attr.eType.name.replace('Array', '');\n        }\n    }\n\n    getAttributeUsage(attribute) {\n        if (0 <= attribute && attribute < this.numAttributes) {\n            return this.elements[attribute].usage;\n        }\n        console.assert(false, 'Invalid index in GetAttributeUsage');\n        return VertexFormat.AU_NONE;\n    }\n\n    getUsageIndex(attribute) {\n        if (0 <= attribute && attribute < this.numAttributes) {\n            return this.elements[attribute].usageIndex;\n        }\n        console.assert(false, 'Invalid index in getUsageIndex');\n        return 0;\n    }\n\n    /**\n     * 获取顶点元素类型单位字节\n     * @param {number} type - 参考AT_XXX\n     * @returns {number}\n     */\n    static getComponentSize(type) {\n        return VertexFormat.COMPONENTS_SIZE[type];\n    }\n\n    /**\n     * 获取顶点元素类型单位个数\n     * @param {number} type - 参考AT_XXX\n     * @returns {number}\n     */\n    static getNumComponents(type) {\n        return VertexFormat.NUM_COMPONENTS[type];\n    }\n\n    /**\n     * 获取顶点元素类型所占字节\n     * @param {number} type - 参考AT_XXX\n     * @returns {number}\n     */\n    static getTypeSize(type) {\n        return VertexFormat.TYPE_SIZE[type];\n    }\n\n    static getUsageString(u) {\n        return ['未使用', '顶点坐标', '法线', '切线', '双切线', '纹理坐标', '颜色', '混合索引', '混合权重', '雾坐标', '点尺寸'][(u >= 0 && u <= 10) ? u : 0];\n    }\n\n    static getTypeString(t) {\n        return ['NONE', 'FLOAT1', 'FLOAT2', 'FLOAT3', 'FLOAT4', 'UBYTE4', 'SHORT1', 'SHORT2', 'SHORT4'][(t >= 0 && t <= 8) ? t : 0];\n    }\n\n    debug() {\n        console.log('================ VertexFormat 类型 ===============');\n        console.log('  属性个数:', this.numAttributes, '步幅:', this.stride, '字节');\n        for (let i = 0, l = this.numAttributes; i < l; ++i) {\n            this.elements[i].debug();\n        }\n        console.log('================ VertexFormat 类型 ===============');\n    }\n\n    /**\n     * @param {InStream} inStream\n     */\n    load(inStream) {\n        super.load(inStream);\n\n        this.numAttributes = inStream.readUint32();\n        const MAX_ATTRIBUTES = VertexFormat.MAX_ATTRIBUTES;\n\n        for (let i = 0; i < MAX_ATTRIBUTES; ++i) {\n            this.elements[i].streamIndex = inStream.readUint32();\n            this.elements[i].offset = inStream.readUint32();\n            this.elements[i].type = inStream.readEnum();\n            this.elements[i].usage = inStream.readEnum();\n            this.elements[i].usageIndex = inStream.readUint32();\n        }\n\n        this.stride = inStream.readUint32();\n    }\n\n    /**\n     * 文件解析工厂方法\n     * @param {InStream} inStream\n     * @returns {VertexFormat}\n     */\n    static factory(inStream) {\n        let obj = new VertexFormat(0);\n        obj.load(inStream);\n        return obj;\n    }\n}\n\n\nD3Object.Register('VertexFormat', VertexFormat.factory);\n\n/**\n * 顶点元素构造\n */\nclass Element {\n    constructor(streamIndex, offset, type, usage, usageIndex) {\n        this.streamIndex = streamIndex || 0;\n        this.offset = offset || 0;\n        this.type = type || VertexFormat.AT_NONE;\n        this.usage = usage || VertexFormat.AU_NONE;\n        this.usageIndex = usageIndex || 0;\n    }\n\n    clone() {\n        return new Element\n            (\n            this.streamIndex,\n            this.offset,\n            this.type,\n            this.usage,\n            this.usageIndex\n            );\n    }\n\n    debug() {\n        console.log('------------ VertexFormat.Element 偏移:', this.offset, '字节 ---------------');\n        console.log('  用途:', VertexFormat.getUsageString(this.usage));\n        console.log('  类型:', VertexFormat.getTypeString(this.type));\n    }\n}\nVertexFormat.Element = Element;\n\n// 顶点属性最大个数\nDECLARE_ENUM(VertexFormat, {\n    MAX_ATTRIBUTES: 16,\n    MAX_TCOORD_UNITS: 8,\n    MAX_COLOR_UNITS: 2\n}, false);\n\n// 顶点属性数据类型\nDECLARE_ENUM(VertexFormat, {\n    AT_NONE: 0x00,\n    AT_FLOAT1: 0x01,\n    AT_FLOAT2: 0x02,\n    AT_FLOAT3: 0x03,\n    AT_FLOAT4: 0x04,\n    AT_HALF1: 0x05,\n    AT_HALF2: 0x06,\n    AT_HALF3: 0x07,\n    AT_HALF4: 0x08,\n    AT_UBYTE4: 0x09,\n    AT_SHORT1: 0x0a,\n    AT_SHORT2: 0x0b,\n    AT_SHORT4: 0x0c\n}, false);\n\n// 属性用途\nDECLARE_ENUM(VertexFormat, {\n    AU_NONE: 0,\n    AU_POSITION: 1,   // 顶点     -> shader location 0\n    AU_NORMAL: 2,   // 法线     -> shader location 2\n    AU_TANGENT: 3,   // 切线     -> shader location 14\n    AU_BINORMAL: 4,   // 双切线   -> shader location 15\n    AU_TEXCOORD: 5,   // 纹理坐标  -> shader location 8-15\n    AU_COLOR: 6,   // 颜色     -> shader location 3-4\n    AU_BLENDINDICES: 7,   // 混合索引  -> shader location 7\n    AU_BLENDWEIGHT: 8,   // 混合权重  -> shader location 1\n    AU_FOGCOORD: 9,   // 雾坐标    -> shader location 5\n    AU_PSIZE: 10   // 点大小    -> shader location 6\n}, false);\n\n// 属性类型的 构造, 尺寸 字节\nDECLARE_ENUM(VertexFormat, {\n    TYPE_CST: [\n        null,          // AT_NONE\n        Float32Array,  // AT_FLOAT1\n        Float32Array,  // AT_FLOAT2\n        Float32Array,  // AT_FLOAT3\n        Float32Array,  // AT_FLOAT4\n        Uint8Array,    // AT_UBYTE4\n        Uint16Array,   // AT_SHORT1\n        Uint16Array,   // AT_SHORT2\n        Uint16Array    // AT_SHORT4\n    ],\n    TYPE_SIZE: [\n        0,  // AT_NONE\n        4,  // AT_FLOAT1\n        8,  // AT_FLOAT2\n        12, // AT_FLOAT3\n        16, // AT_FLOAT4\n        4,  // AT_UBYTE4\n        2,  // AT_SHORT1\n        4,  // AT_SHORT2\n        8   // AT_SHORT4\n    ],\n    NUM_COMPONENTS: [\n        0,  // AT_NONE\n        1,  // AT_FLOAT1\n        2,  // AT_FLOAT2\n        3,  // AT_FLOAT3\n        4,  // AT_FLOAT4\n        4,  // AT_UBYTE4\n        1,  // AT_SHORT1\n        2,  // AT_SHORT2\n        4   // AT_SHORT4\n    ]\n});\n\nexport { VertexFormat };\n","import { default as webgl } from './GLMapping';\nimport { VertexFormat } from '../../resources/VertexFormat';\n\nclass GLVertexFormat {\n    /**\n     * @param {WebGL2RenderingContext} gl\n     * @param {VertexFormat} format\n     */\n    constructor(gl, format) {\n        this.stride = format.stride;\n\n        let type;\n\n        let i = format.getIndex(VertexFormat.AU_POSITION);\n        if (i >= 0) {\n            this.hasPosition = 1;\n            type = format.getAttributeType(i);\n            this.positionType = webgl.AttributeType[type]; // 属性元素类型\n            this.positionChannels = webgl.AttributeChannels[type]; // 属性元素数量\n            this.positionOffset = format.getOffset(i);\n        } else {\n            this.hasPosition = 0;\n            this.positionChannels = 0;  // 属性元素数量\n            this.positionType = 0;  // 属性类型\n            this.positionOffset = 0;  // 属性偏移量\n        }\n\n        i = format.getIndex(VertexFormat.AU_NORMAL);\n        if (i >= 0) {\n            this.hasNormal = 1;\n            type = format.getAttributeType(i);\n            this.normalType = webgl.AttributeType[type];\n            this.normalChannels = webgl.AttributeChannels[type];\n            this.normalOffset = format.getOffset(i);\n        } else {\n            this.hasNormal = 0;\n            this.normalChannels = 0;\n            this.normalType = 0;\n            this.normalOffset = 0;\n        }\n\n        i = format.getIndex(VertexFormat.AU_TANGENT);\n        if (i >= 0) {\n            this.hasTangent = 1;\n            type = format.getAttributeType(i);\n            this.tangentType = webgl.AttributeType[type];\n            this.tangentChannels = webgl.AttributeChannels[type];\n            this.tangentOffset = format.getOffset(i);\n        } else {\n            this.hasTangent = 0;\n            this.tangentChannels = 0;\n            this.tangentType = 0;\n            this.tangentOffset = 0;\n        }\n\n        i = format.getIndex(VertexFormat.AU_BINORMAL);\n        if (i >= 0) {\n            this.hasBinormal = 1;\n            type = format.getAttributeType(i);\n            this.binormalType = webgl.AttributeType[type];\n            this.binormalChannels = webgl.AttributeChannels[type];\n            this.binormalOffset = format.getOffset(i);\n        }\n        else {\n            this.hasBinormal = 0;\n            this.binormalType = 0;\n            this.binormalChannels = 0;\n            this.binormalOffset = 0;\n        }\n\n        let unit;\n        const AM_MAX_TCOORD_UNITS = VertexFormat.MAX_TCOORD_UNITS;\n\n        this.hasTCoord = new Array(AM_MAX_TCOORD_UNITS);\n        this.tCoordChannels = new Array(AM_MAX_TCOORD_UNITS);\n        this.tCoordType = new Array(AM_MAX_TCOORD_UNITS);\n        this.tCoordOffset = new Array(AM_MAX_TCOORD_UNITS);\n\n        for (unit = 0; unit < AM_MAX_TCOORD_UNITS; ++unit) {\n            i = format.getIndex(VertexFormat.AU_TEXCOORD, unit);\n            if (i >= 0) {\n                this.hasTCoord[unit] = 1;\n                type = format.getAttributeType(i);\n                this.tCoordType[unit] = webgl.AttributeType[type];\n                this.tCoordChannels[unit] = webgl.AttributeChannels[type];\n                this.tCoordOffset[unit] = format.getOffset(i);\n            } else {\n                this.hasTCoord[unit] = 0;\n                this.tCoordType[unit] = 0;\n                this.tCoordChannels[unit] = 0;\n                this.tCoordOffset[unit] = 0;\n            }\n        }\n\n        const AM_MAX_COLOR_UNITS = VertexFormat.MAX_COLOR_UNITS;\n        this.hasColor = new Array(AM_MAX_COLOR_UNITS);\n        this.colorChannels = new Array(AM_MAX_COLOR_UNITS);\n        this.colorType = new Array(AM_MAX_COLOR_UNITS);\n        this.colorOffset = new Array(AM_MAX_COLOR_UNITS);\n        for (unit = 0; unit < AM_MAX_COLOR_UNITS; ++unit) {\n            i = format.getIndex(VertexFormat.AU_COLOR, unit);\n            if (i >= 0) {\n                this.hasColor[unit] = 1;\n                type = format.getAttributeType(i);\n                this.colorType[unit] = webgl.AttributeType[type];\n                this.colorChannels[unit] = webgl.AttributeChannels[type];\n                this.colorOffset[unit] = format.getOffset(i);\n            } else {\n                this.hasColor[unit] = 0;\n                this.colorType[unit] = 0;\n                this.colorChannels[unit] = 0;\n                this.colorOffset[unit] = 0;\n            }\n        }\n\n        i = format.getIndex(VertexFormat.AU_BLENDINDICES);\n        if (i >= 0) {\n            this.hasBlendIndices = 1;\n            type = format.getAttributeType(i);\n            this.blendIndicesChannels = webgl.AttributeChannels[type];\n            this.blendIndicesType = webgl.AttributeType[type];\n            this.blendIndicesOffset = format.getOffset(i);\n        }\n        else {\n            this.hasBlendIndices = 0;\n            this.blendIndicesType = 0;\n            this.blendIndicesChannels = 0;\n            this.blendIndicesOffset = 0;\n        }\n\n        i = format.getIndex(VertexFormat.AU_BLENDWEIGHT);\n        if (i >= 0) {\n            this.hasBlendWeight = 1;\n            type = format.getAttributeType(i);\n            this.blendWeightType = webgl.AttributeType[type];\n            this.blendWeightChannels = webgl.AttributeChannels[type];\n            this.blendWeightOffset = format.getOffset(i);\n        }\n        else {\n            this.hasBlendWeight = 0;\n            this.blendWeightType = 0;\n            this.blendWeightChannels = 0;\n            this.blendWeightOffset = 0;\n        }\n\n        i = format.getIndex(VertexFormat.AU_FOGCOORD);\n        if (i >= 0) {\n            this.hasFogCoord = 1;\n            type = format.getAttributeType(i);\n            this.fogCoordType = webgl.AttributeType[type];\n            this.fogCoordChannels = webgl.AttributeChannels[type];\n            this.fogCoordOffset = format.getOffset(i);\n        } else {\n            this.hasFogCoord = 0;\n            this.fogCoordChannels = 0;\n            this.fogCoordType = 0;\n            this.fogCoordOffset = 0;\n        }\n\n        i = format.getIndex(VertexFormat.AU_PSIZE);\n        if (i >= 0) {\n            this.hasPSize = 1;\n            type = format.getAttributeType(i);\n            this.pSizeType = webgl.AttributeType[type];\n            this.pSizeChannels = webgl.AttributeChannels[type];\n            this.pSizeOffset = format.getOffset(i);\n        } else {\n            this.hasPSize = 0;\n            this.pSizeType = 0;\n            this.pSizeChannels = 0;\n            this.pSizeOffset = 0;\n        }\n    }\n\n    /**\n     * @param {WebGL2RenderingContext} gl\n     */\n    enable(gl) {\n        // Use the enabled vertex buffer for data pointers.\n\n        const stride = this.stride;\n        if (this.hasPosition) {\n            gl.enableVertexAttribArray(0);\n            gl.vertexAttribPointer(0, this.positionChannels, this.positionType, false, stride, this.positionOffset);\n        }\n\n        if (this.hasNormal) {\n            gl.enableVertexAttribArray(2);\n            gl.vertexAttribPointer(2, this.normalChannels, this.normalType, false, stride, this.normalOffset);\n        }\n\n        if (this.hasTangent) {\n            gl.enableVertexAttribArray(14);\n            gl.vertexAttribPointer(14, this.tangentChannels, this.tangentType, false, stride, this.tangentOffset);\n        }\n\n        if (this.hasBinormal) {\n            gl.enableVertexAttribArray(15);\n            gl.vertexAttribPointer(15, this.binormalChannels, this.binormalType, false, stride, this.normalOffset);\n        }\n\n        let unit;\n        for (unit = 0; unit < VertexFormat.MAX_TCOORD_UNITS; ++unit) {\n            if (this.hasTCoord[unit]) {\n                gl.activeTexture(gl.TEXTURE0 + unit);\n                gl.enableVertexAttribArray(8 + unit);\n                gl.vertexAttribPointer(8 + unit, this.tCoordChannels[unit], this.tCoordType[unit], false, stride, this.tCoordOffset[unit]);\n            }\n        }\n\n        if (this.hasColor[0]) {\n            gl.enableVertexAttribArray(3);\n            gl.vertexAttribPointer(3, this.colorChannels[0], this.colorType[0], false, stride, this.colorOffset[0]);\n        }\n\n        if (this.hasColor[1]) {\n            gl.enableVertexAttribArray(4);\n            gl.vertexAttribPointer(4, this.colorChannels[1], this.colorType[1], false, stride, this.colorOffset[1]);\n        }\n\n        if (this.hasBlendIndices) {\n            gl.enableVertexAttribArray(7);\n            gl.vertexAttribPointer(7, this.blendIndicesChannels, this.blendIndicesType, false, stride, this.blendIndicesOffset);\n        }\n\n        if (this.hasBlendWeight) {\n            gl.enableVertexAttribArray(1);\n            gl.vertexAttribPointer(1, this.blendWeightChannels, this.blendWeightType, false, stride, this.blendWeightOffset);\n        }\n\n        if (this.hasFogCoord) {\n            gl.enableVertexAttribArray(5);\n            gl.vertexAttribPointer(5, this.fogCoordChannels, this.fogCoordType, false, stride, this.fogCoordOffset);\n        }\n\n        if (this.hasPSize) {\n            gl.enableVertexAttribArray(6);\n            gl.vertexAttribPointer(6, this.pSizeChannels, this.pSizeType, false, stride, this.pSizeOffset);\n        }\n    }\n}\n\nexport { GLVertexFormat };\n","import { default as webgl } from './GLMapping';\n\nclass GLVertexArray {\n\n    /**\n     * @param {WebGL2RenderingContext} gl \n     * @param {VertexBuffer} buffer\n     * @param {GLVertexFormat} format\n     */\n    constructor(gl, buffer, format) {\n        this.vao = gl.createVertexArray();\n        this.buffer = gl.createBuffer();\n\n        gl.bindVertexArray(this.vao);\n        this._upload(gl, buffer, format);\n        /*gl.bindVertexArray(null);*/\n    }\n\n    _upload(gl, buffer, format) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, buffer.getData(), webgl.BufferUsage[buffer.usage]);\n        format.enable(gl);\n    }\n\n    enable(gl) { gl.bindVertexArray(this.vao); }\n\n    disable(gl) { /*gl.bindVertexArray(null);*/ }\n\n    /**\n     * @param {WebGL2RenderingContext} gl\n     * @param {VertexBuffer} buffer\n     * @param {GLVertexFormat} format\n     */\n    update(gl, buffer, format) {\n        gl.bindVertexArray(this.vao);\n        this._upload(gl, buffer, format);\n        gl.bindVertexArray(0);\n    }\n\n    destructor() {\n        gl.deleteVertexArray(this.vao);\n    }\n}\n\nexport { GLVertexArray };","import { default as webgl } from './GLMapping';\n\nclass GLIndexBuffer {\n\n    /**\n     * @param {WebGL2RenderingContext} gl \n     * @param {Buffer} buffer \n     */\n    constructor(gl, buffer) {\n        this.buffer = gl.createBuffer();\n        let dataType = buffer.elementSize == 2 ? Uint16Array : Uint32Array;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new dataType(buffer.getData().buffer), webgl.BufferUsage[buffer.usage]);\n    }\n\n    /**\n     * @param {WebGL2RenderingContext} gl\n     */\n    enable(gl) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\n    }\n\n    update(gl, buffer) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\n        let dataType = buffer.elementSize == 2 ? Uint16Array : Uint32Array;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new dataType(buffer.getData().buffer), webgl.BufferUsage[buffer.usage]);\n    }\n    /**\n     * @param {WebGL2RenderingContext} gl\n     */\n    disable(renderer) {\n        /*gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);*/\n    }\n}\n\nexport { GLIndexBuffer };","import { default as webgl } from './GLMapping';\n\nclass GLTexture2D {\n\n    /**\n     * @param {WebGL2RenderingContext} gl \n     * @param {Texture2D} texture\n     */\n    constructor(gl, texture) {\n        const _format = texture.format;\n\n        this.internalFormat = webgl.TextureInternalFormat[_format];\n        this.format = webgl.TextureFormat[_format];\n        this.type = webgl.TextureType[_format];\n\n        this.hasMipMap = texture.hasMipmaps;\n\n        this.width = texture.width;\n        this.height = texture.height;\n        this.isCompressed = texture.isCompressed();\n\n        this.static = texture.static;\n\n        // Create a texture structure.\n        this.texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n\n        // upload pixel with pbo\n        let pbo = gl.createBuffer();\n        gl.bindBuffer(gl.PIXEL_UNPACK_BUFFER, pbo);\n        gl.bufferData(gl.PIXEL_UNPACK_BUFFER, texture.getData(), gl.STATIC_DRAW, 0);\n        if (this.isCompressed) {\n            gl.compressedTexImage2D(gl.TEXTURE_2D, 0, this.internalFormat, this.width, this.height, 0, 0);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, /*level*/0, this.internalFormat, this.width, this.height, 0, this.format, this.type, 0);\n        }\n        gl.bindBuffer(gl.PIXEL_UNPACK_BUFFER, null);\n        gl.deleteBuffer(pbo);\n        this.hasMipMap && gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    update(gl, textureUnit, data) {\n        if (this.static) {\n            return;\n        }\n        gl.activeTexture(gl.TEXTURE0 + textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n\n        let pbo = gl.createBuffer();\n        gl.bindBuffer(gl.PIXEL_UNPACK_BUFFER, pbo);\n        gl.bufferData(gl.PIXEL_UNPACK_BUFFER, data, gl.STATIC_DRAW, 0);\n        if (this.isCompressed) {\n            gl.compressedTexImage2D(gl.TEXTURE_2D, 0, this.internalFormat, this.width, this.height, 0, 0);\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, /*level*/0, this.internalFormat, this.width, this.height, 0, this.format, this.type, 0);\n        }\n        gl.bindBuffer(gl.PIXEL_UNPACK_BUFFER, null);\n        gl.deleteBuffer(pbo);\n        this.hasMipMap && gl.generateMipmap(gl.TEXTURE_2D);\n    }\n\n    enable(gl, textureUnit) {\n        gl.activeTexture(gl.TEXTURE0 + textureUnit);\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    }\n\n    disable(gl, textureUnit) {\n        // gl.activeTexture(gl.TEXTURE0 + textureUnit);\n        // gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n}\n\nexport { GLTexture2D };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass AlphaState extends D3Object {\n\n    constructor() {\n        super();\n        this.blendEnabled = false;\n        this.srcBlend = AlphaState.BM_SRC_ALPHA;\n        this.dstBlend = AlphaState.BM_ONE_MINUS_SRC_ALPHA;\n        this.constantColor = new Float32Array([0, 0, 0, 0]);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.blendEnabled = inStream.readBool();\n        this.srcBlend = inStream.readEnum();\n        // todo: remove unused code.\n        if (this.srcBlend > 1) {\n            this.srcBlend += 2;\n        }\n\n        this.dstBlend = inStream.readEnum();\n        // todo: remove unused code.\n        if (this.dstBlend >= 8) {\n            this.dstBlend += 3;\n        }\n        else if (this.dstBlend >= 4) {\n            this.dstBlend += 2;\n        }\n        this.constantColor = new Float32Array(inStream.readFloat32Range(4));\n    }\n\n    static factory(inStream) {\n        let obj = new AlphaState();\n        obj.load(inStream);\n        return obj;\n    }\n\n}\n\n/* blend mode */\nDECLARE_ENUM(AlphaState, {\n    BM_ZERO: 0,\n    BM_ONE: 1,\n    BM_SRC_COLOR: 2, // can be assign to AlphaState.dstBlend only\n    BM_ONE_MINUS_SRC_COLOR: 3, // can be assign to AlphaState.dstBlend only\n    BM_DST_COLOR: 4, // can be assign to AlphaState.srcBlend only\n    BM_ONE_MINUS_DST_COLOR: 5, // can be assign to AlphaState.srcBlend only\n    BM_SRC_ALPHA: 6,\n    BM_ONE_MINUS_SRC_ALPHA: 7,\n    BM_DST_ALPHA: 8,\n    BM_ONE_MINUS_DST_ALPHA: 9,\n    BM_SRC_ALPHA_SATURATE: 10, // can be assign to AlphaState.srcBlend only\n    BM_CONSTANT_COLOR: 11,\n    BM_ONE_MINUS_CONSTANT_COLOR: 12,\n    BM_CONSTANT_ALPHA: 13,\n    BM_ONE_MINUS_CONSTANT_ALPHA: 14\n});\n\nD3Object.Register('AlphaState', AlphaState.factory);\n\nexport { AlphaState };\n\n","import { D3Object } from '../../core/D3Object';\n\nclass CullState extends D3Object {\n\n    constructor() {\n        super();\n        this.enabled = true;\n        this.CCWOrder = true;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.enabled = inStream.readBool();\n        this.CCWOrder = inStream.readBool();\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writeBool(this.enabled);\n        outStream.writeBool(this.CCWOrder);\n    }\n\n    static factory(inStream) {\n        let obj = new CullState();\n        obj.enabled = false;\n        obj.CCWOrder = false;\n        obj.load(inStream);\n        return obj;\n    }\n}\n\nD3Object.Register('CullState', CullState.factory);\n\nexport { CullState };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass DepthState extends D3Object {\n    constructor() {\n        super();\n        this.enabled = true;\n        this.writable = true;\n        this.compare = DepthState.COMPARE_MODE_LESS;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.enabled = inStream.readBool();\n        this.writable = inStream.readBool();\n        this.compare = inStream.readEnum();\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writeBool(this.enabled);\n        outStream.writeBool(this.writable);\n        outStream.writeEnum(this.compare);\n    }\n\n    static factory(inStream) {\n        var obj = new DepthState();\n        obj.enabled = false;\n        obj.writable = false;\n        obj.compare = DepthState.COMPARE_MODE_NEVER;\n        obj.load(inStream);\n        return obj;\n    }\n}\n\n// 比较模式\nDECLARE_ENUM(DepthState, {\n    COMPARE_MODE_NEVER: 0,\n    COMPARE_MODE_LESS: 1,\n    COMPARE_MODE_EQUAL: 2,\n    COMPARE_MODE_LEQUAL: 3,\n    COMPARE_MODE_GREATER: 4,\n    COMPARE_MODE_NOTEQUAL: 5,\n    COMPARE_MODE_GEQUAL: 6,\n    COMPARE_MODE_ALWAYS: 7\n});\n\nD3Object.Register('CullState', DepthState.factory);\n\nexport { DepthState };","import { D3Object } from '../../core/D3Object';\n\nclass OffsetState extends D3Object {\n\n    constructor() {\n        super();\n        this.fillEnabled = false;\n        // The offset is Scale*dZ + Bias*r where dZ is the change in depth\n        // relative to the screen space area of the poly, and r is the smallest\n        // resolvable depth difference.  Negative values move polygons closer to\n        // the eye.\n        this.scale = 0;\n        this.bias = 0;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n\n        this.fillEnabled = inStream.readBool();\n        this.scale = inStream.readFloat32();\n        this.bias = inStream.readFloat32();\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writeBool(this.fillEnabled);\n        outStream.writeFloat32(this.scale);\n        outStream.writeFloat32(this.bias);\n    }\n\n    static factory(inStream) {\n        let obj = new OffsetState();\n        obj.load(inStream);\n        return obj;\n    }\n\n}\n\nD3Object.Register('OffsetState', OffsetState.factory);\n\nexport { OffsetState };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass StencilState extends D3Object {\n\n    constructor() {\n        super();\n        this.mask = 0xffffffff;       // default: unsigned int max\n        this.writeMask = 0xffffffff;  // default: unsigned int max\n        this.onFail = StencilState.OP_KEEP;\n        this.onZFail = StencilState.OP_KEEP;\n        this.onZPass = StencilState.OP_KEEP;\n\n        this.enabled = false;\n        this.compare = StencilState.NEVER;\n        this.reference = 0;     // [0,1]\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.enabled = inStream.readBool();\n        this.compare = inStream.readEnum();\n        this.reference = inStream.readUint32();\n        this.mask = inStream.readUint32();\n        this.writeMask = inStream.readUint32();\n        this.onFail = inStream.readEnum();\n        this.onZFail = inStream.readEnum();\n        this.onZPass = inStream.readEnum();\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writeBool(this.enabled);\n        outStream.writeEnum(this.compare);\n        outStream.writeUint32(this.reference);\n        outStream.writeUint32(this.mask);\n        outStream.writeUint32(this.writeMask);\n        outStream.writeEnum(this.onFail);\n        outStream.writeEnum(this.onZFail);\n        outStream.writeEnum(this.onZPass);\n    }\n\n    static factory(inStream) {\n        let obj = new StencilState();\n        obj.mask = 0;\n        obj.writeMask = 0;\n        obj.load(inStream);\n        return obj;\n    }\n};\n\n// 操作类型\nDECLARE_ENUM(StencilState, {\n    OP_KEEP: 0,\n    OP_ZERO: 1,\n    OP_REPLACE: 2,\n    OP_INCREMENT: 3,\n    OP_DECREMENT: 4,\n    OP_INVERT: 5\n}, false);\n\n// 比较模式\nDECLARE_ENUM(StencilState, {\n    NEVER: 0,\n    LESS: 1,\n    EQUAL: 2,\n    LEQUAL: 3,\n    GREATER: 4,\n    NOTEQUAL: 5,\n    GEQUAL: 6,\n    ALWAYS: 7\n});\n\nD3Object.Register('StencilState', StencilState.factory);\n\nexport { StencilState };","import { default as webgl } from './GLMapping';\nimport { AlphaState } from '../../shaders/AlphaState';\nimport { CullState } from '../../shaders/CullState';\nimport { DepthState } from '../../shaders/DepthState';\nimport { OffsetState } from '../../shaders/OffsetState';\nimport { StencilState } from '../../shaders/StencilState';\n\nclass GLRenderState {\n\tconstructor() {\n\t\t// AlphaState\n\t\tthis.alphaBlendEnabled = false;\n\t\tthis.alphaSrcBlend = 0;\n\t\tthis.alphaDstBlend = 0;\n\t\tthis.blendColor = new Float32Array([0, 0, 0, 0]);\n\n\t\t// CullState\n\t\tthis.cullEnabled = false;\n\t\tthis.CCWOrder = true;\n\n\t\t// DepthState\n\t\tthis.depthEnabled = true;\n\t\tthis.depthWriteEnabled = true;\n\t\tthis.depthCompareFunction = true;\n\n\t\t// OffsetState\n\t\tthis.fillEnabled = false;\n\t\tthis.offsetScale = 0;\n\t\tthis.offsetBias = 0;\n\n\t\t// StencilState\n\t\tthis.stencilEnabled = false;\n\t\tthis.stencilCompareFunction = false;\n\t\tthis.stencilReference = false;\n\t\tthis.stencilMask = false;\n\t\tthis.stencilWriteMask = false;\n\t\tthis.stencilOnFail = false;\n\t\tthis.stencilOnZFail = false;\n\t\tthis.stencilOnZPass = false;\n\t}\n\n    /**\n\t * @param {WebGLRenderingContext} gl\n\t * @param {AlphaState} alphaState\n\t * @param {CullState} cullState\n\t * @param {DepthState} depthState\n\t * @param {OffsetState} offsetState\n\t * @param {StencilState} stencilState\n \t*/\n\tinitialize(gl, alphaState, cullState, depthState, offsetState, stencilState) {\n\t\tlet op = ['disable', 'enable'];\n\n\t\t// AlphaState\n\t\tthis.alphaBlendEnabled = alphaState.blendEnabled;\n\t\tthis.alphaSrcBlend = webgl.AlphaBlend[alphaState.srcBlend];\n\t\tthis.alphaDstBlend = webgl.AlphaBlend[alphaState.dstBlend];\n\t\tthis.blendColor = alphaState.constantColor;\n\t\tgl[op[this.alphaBlendEnabled | 0]](gl.BLEND);\n\t\tgl.blendFunc(this.alphaSrcBlend, this.alphaDstBlend);\n\t\tgl.blendColor(this.blendColor[0], this.blendColor[1], this.blendColor[2], this.blendColor[3]);\n\n\t\t// CullState\n\t\tthis.cullEnabled = cullState.enabled;\n\t\tthis.CCWOrder = cullState.CCWOrder;\n\n\t\tgl[op[this.cullEnabled | 0]](gl.CULL_FACE);\n\t\tgl.frontFace(gl.CCW);\n\t\tgl.cullFace(this.CCWOrder ? gl.BACK : gl.FRONT);\n\n\t\t// DepthState\n\t\tthis.depthEnabled = depthState.enabled;\n\t\tthis.depthWriteEnabled = depthState.writable;\n\t\tthis.depthCompareFunction = webgl.DepthCompare[depthState.compare];\n\n\t\tgl[op[this.depthEnabled | 0]](gl.DEPTH_TEST);\n\t\tgl.depthMask(this.depthWriteEnabled);\n\t\tgl.depthFunc(this.depthCompareFunction);\n\n\t\t// OffsetState\n\t\tthis.fillEnabled = offsetState.fillEnabled;\n\t\tthis.offsetScale = offsetState.scale;\n\t\tthis.offsetBias = offsetState.bias;\n\n\t\tgl[op[this.fillEnabled | 0]](gl.POLYGON_OFFSET_FILL);\n\t\tgl.polygonOffset(this.offsetScale, this.offsetBias);\n\n\t\t// StencilState\n\t\tthis.stencilEnabled = stencilState.enabled;\n\t\tthis.stencilCompareFunction = webgl.StencilCompare[stencilState.compare];\n\t\tthis.stencilReference = stencilState.reference;\n\t\tthis.stencilMask = stencilState.mask;\n\t\tthis.stencilWriteMask = stencilState.writeMask;\n\t\tthis.stencilOnFail = webgl.StencilOperation[stencilState.onFail];\n\t\tthis.stencilOnZFail = webgl.StencilOperation[stencilState.onZFail];\n\t\tthis.stencilOnZPass = webgl.StencilOperation[stencilState.onZPass];\n\n\t\tgl[op[this.stencilEnabled | 0]](gl.STENCIL_TEST);\n\t\tgl.stencilFunc(this.stencilCompareFunction, this.stencilReference, this.stencilMask);\n\t\tgl.stencilMask(this.stencilWriteMask);\n\t\tgl.stencilOp(this.stencilOnFail, this.stencilOnZFail, this.stencilOnZPass);\n\t}\n}\n\nexport { GLRenderState };","import { GLRenderState } from './GLRenderState';\n// import { GLSamplerState } from './GLSamplerState';\n\n/**\n * Display list base indices for fonts/characters.\n */\n// class DisplayListInfo {\n//     constructor() {\n//         this.quantity = 1;  // number of display lists, input to glGenLists\n//         this.start = 0;     // start index, output from glGenLists\n//         this.base = 0;      // base index for glListBase\n//     }\n// }\n\nclass GLRenderData {\n    constructor() {\n        /**\n         * @type {GLRenderState}\n         */\n        this.currentRS = new GLRenderState();\n\n        const m = GLRenderData.MAX_NUM_PSAMPLERS;\n        // /**\n        //  * @type {Array<GLSamplerState>}\n        //  */\n        // this.currentSS = new Array(m);\n        // for (let i = 0; i < m; ++i) {\n        //     this.currentSS[i] = new GLSamplerState();\n        // }\n\n        // Capabilities (queried at run time).\n        this.maxVShaderImages = 0;\n        this.maxFShaderImages = 0;\n        this.maxCombinedImages = 0;\n\n        /**\n         * @type {DisplayListInfo}\n         */\n        // this.font = new DisplayListInfo();\n    }\n\n    drawCharacter(font, c) {\n    }\n}\n\nGLRenderData.MAX_NUM_VSAMPLERS = 4;  // VSModel 3 has 4, VSModel 2 has 0.\nGLRenderData.MAX_NUM_PSAMPLERS = 16;  // PSModel 2 and PSModel 3 have 16.\n\nexport { GLRenderData };","import { default as webgl } from './GLMapping';\n\nclass GLSampler {\n    /**\n     * \n     * @param {WebGL2RenderingContext} gl \n     * @param {SamplerState} sampler\n     */\n    constructor(gl, sampler) {\n        this.minFilter = sampler.minFilter;\n\t\tthis.magFilter = sampler.magFilter;\n\n\t\tthis.wrapS = sampler.wrapS;\n\t\tthis.wrapT = sampler.wrapT;\n\t\tthis.wrapR = sampler.wrapR;\n\t\t\n        this.compare = sampler.compare;\n\t\tthis.mode = sampler.mode;\n\n\t\tthis.maxAnisotropy = sampler.maxAnisotropy;\n\t\tthis.minLod = sampler.minLod;\n\t\tthis.maxLod = sampler.maxLod;\n\n        this.sampler = gl.createSampler();\n        if (this.minFilter !== gl.NEAREST_MIPMAP_LINEAR) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_MIN_FILTER, this.minFilter);\n        }\n        if (this.magFilter !== gl.LINEAR) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_MAG_FILTER, this.magFilter);\n        }\n\n        if (this.wrapS !== gl.REPEAT) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_WRAP_S, this.wrapS);\n        }\n        if (this.wrapT !== gl.REPEAT) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_WRAP_T, this.wrapT);\n        }\n        if (this.wrapR !== gl.REPEAT) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_WRAP_R, this.wrapR);\n        }\n\n        if (this.compare !== gl.LEQUAL) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_COMPARE_FUNC, this.compare);\n        }\n        if (this.mode !== gl.NONE) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_COMPARE_MODE, this.mode);\n        }\n        \n        if (this.minLod !== gl.getSamplerParameter(this.sampler, gl.TEXTURE_MIN_LOD)) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_MIN_LOD, this.minLod);\n        }\n        if (this.maxLod !== gl.getSamplerParameter(this.sampler, gl.TEXTURE_MAX_LOD)) {\n            gl.samplerParameteri(this.sampler, gl.TEXTURE_MAX_LOD, this.maxLod);\n        }\n    }\n\n    enable(gl, textureUnit) {\n        gl.bindSampler(textureUnit, this.sampler);\n    }\n    \n    /**\n     * Get the state of the currently enabled texture.  This state appears\n     * to be associated with the OpenGL texture object.  How does this\n     * relate to the sampler state?  In my opinion, OpenGL needs to have\n     * the sampler state separate from the texture object state.\n     *\n     * @param {Renderer} renderer\n     * @param target\n     */\n    getCurrent(renderer, target) {\n        let gl = renderer.gl;\n\n        // EXT_Texture_Filter_Anisotropic\n        this.anisotropy = gl.getTexParameter(target, webgl.TEXTURE_MAX_ANISOTROPY_EXT);\n\n        this.magFilter = gl.getTexParameter(target, gl.TEXTURE_MAG_FILTER);\n        this.minFilter = gl.getTexParameter(target, gl.TEXTURE_MIN_FILTER);\n        this.wrap[0] = gl.getTexParameter(target, gl.TEXTURE_WRAP_S);\n        this.wrap[1] = gl.getTexParameter(target, gl.TEXTURE_WRAP_T);\n        this.wrap[2] = gl.getTexParameter(target, gl.TEXTURE_WRAP_R);\n    }\n}\n\nexport { GLSampler };\n","class GLProgram {\n\n    /**\n     * @param {Renderer} renderer\n     * @param {Program} program \n     * @param {GLVertexShader} vs \n     * @param {GLFragShader} fs \n     */\n    constructor(renderer, program, vs, fs) {\n        let gl = renderer.gl;\n        let p = gl.createProgram();\n        gl.attachShader(p, vs.shader);\n        gl.attachShader(p, fs.shader);\n        gl.linkProgram(p);\n        console.assert(\n            gl.getProgramParameter(p, gl.LINK_STATUS),\n            gl.getProgramInfoLog(p)\n        );\n        gl.deleteShader(vs.shader);\n        gl.deleteShader(fs.shader);\n\n        this.program = p;\n        gl.useProgram(p);\n        let uniformsLength = gl.getProgramParameter(p, gl.ACTIVE_UNIFORMS),\n            item, name, i;\n\n        for (i = 0; i < uniformsLength; ++i) {\n            item = gl.getActiveUniform(p, i);\n            name = item.name;\n            program.inputMap.set(name, gl.getUniformLocation(p, name));\n        }\n    }\n    /**\n     * @param {Renderer} renderer\n     */\n    free(renderer) {\n        renderer.gl.deleteProgram(this.program);\n    }\n    /**\n     * @param {Renderer} renderer\n     */\n    enable(renderer) {\n        renderer.gl.useProgram(this.program);\n    }\n    /**\n     * @param {Renderer} renderer\n     */\n    disable(renderer) {\n        //renderer.gl.useProgram(null);\n    }\n}\n\nexport { GLProgram };","import { default as webgl } from './GLMapping';\n\nclass GLExtensions {\n    static init(gl) {\n        gl.getSupportedExtensions().forEach(function (name) {\n            if (name.match(/^(?:WEBKIT_)|(?:MOZ_)/)) {\n                return;\n            }\n            gl.getExtension(name);\n        });\n    }\n}\n\nexport { GLExtensions };","import { D3Object } from '../../core/D3Object';\n\nclass Program extends D3Object {\n\n    /**\n     * @param {string} name\n     * @param {VertexShader} vs\n     * @param {FragShader} fs\n     */\n    constructor(name, vs, fs) {\n        super(name);\n        this.vertexShader = vs;\n        this.fragShader = fs;\n        this.inputMap = new Map();\n    }\n}\n\nexport { Program };\n","import { Shader } from './Shader';\nimport { D3Object } from '../../core/D3Object';\n\nclass FragShader extends Shader { }\nD3Object.Register('FragShader', FragShader.factory.bind(FragShader));\n\nexport { FragShader };\n","import { Shader } from './Shader';\nimport { D3Object } from '../../core/D3Object';\n\nclass VertexShader extends Shader { }\nD3Object.Register('VertexShader', VertexShader.factory.bind(VertexShader));\n\nexport { VertexShader };","import { D3Object } from '../../core/D3Object';\n\nclass ShaderParameters extends D3Object {\n\n    /**\n     * @param {Shader} shader\n     * @param {boolean} [__privateCreate] \n     */\n    constructor(shader, __privateCreate = false) {\n        super();\n        if (!__privateCreate) {\n            console.assert(shader !== null, 'Shader must be specified.');\n\n            /**\n             * @type {L5.Shader}\n             */\n            this.shader = shader;\n\n            let nc = shader.numConstants;\n            this.numConstants = nc;\n\n            if (nc > 0) {\n                /**\n                 * @type {Array<ShaderFloat>}\n                 */\n                this.constants = new Array(nc);\n            } else {\n                this.constants = null;\n            }\n\n            let ns = shader.numSamplers;\n            this.numTextures = ns;\n            if (ns > 0) {\n                this.textures = new Array(ns);\n            } else {\n                this.textures = null;\n            }\n        }\n        else {\n            this.shader = null;\n            this.numConstants = 0;\n            this.constants = null;\n            this.numTextures = 0;\n            this.textures = null;\n        }\n    }\n\n\n\n    // These functions set the constants/textures.  If successful, the return\n    // value is nonnegative and is the index into the appropriate array.  This\n    // index may passed to the Set* functions that have the paremeter\n    // 'handle'.  The mechanism allows you to set directly by index and avoid\n    // the name comparisons that occur with the Set* functions that have the\n    // parameter 'const std::string& name'.\n    /**\n     * @param {string} name\n     * @param {Array} sfloat\n     * @return {number}\n     */\n    setConstantByName(name, sfloat) {\n        let i, m = this.numConstants, shader = this.shader;\n\n        for (i = 0; i < m; ++i) {\n            if (shader.getConstantName(i) === name) {\n                this.constants[i] = sfloat;\n                return i;\n            }\n        }\n\n        console.assert(false, 'Cannot find constant.');\n        return -1;\n    }\n\n    /**\n     * @param {number} handle\n     * @param {Array} sfloat\n     * @return {number}\n     */\n    setConstant(handle, sfloat) {\n        if (0 <= handle && handle < this.numConstants) {\n            this.constants[handle] = sfloat;\n            return handle;\n        }\n        console.assert(false, 'Invalid constant handle.');\n        return -1;\n    }\n\n    /**\n     * @param {string} name\n     * @param {Texture} texture\n     * @returns {number}\n     */\n    setTextureByName(name, texture) {\n        let i, m = this.numTextures, shader = this.shader;\n\n        for (i = 0; i < m; ++i) {\n            if (shader.getSamplerName(i) === name) {\n                this.textures[i] = texture;\n                return i;\n            }\n        }\n\n        console.assert(false, 'Cannot find texture.');\n        return -1;\n    }\n\n    /**\n     * @param {number} handle\n     * @param {Texture} texture\n     * @returns {number}\n     */\n    setTexture(handle, texture) {\n        if (0 <= handle && handle < this.numTextures) {\n            this.textures[handle] = texture;\n            return handle;\n        }\n        console.assert(false, 'Invalid texture handle.');\n        return -1;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {ArrayBuffer}\n     */\n    getConstantByName(name) {\n        let i, m = this.numConstants, shader = this.shader;\n        for (i = 0; i < m; ++i) {\n            if (shader.getConstantName(i) === name) {\n                return this.constants[i];\n            }\n        }\n\n        console.assert(false, 'Cannot find constant.');\n        return null;\n    }\n\n    /**\n     * @param {string} name\n     * @returns {Texture}\n     */\n    getTextureByName(name) {\n        let i, m = this.numTextures, shader = this.shader;\n        for (i = 0; i < m; ++i) {\n            if (shader.getSamplerName(i) === name) {\n                return this.textures[i];\n            }\n        }\n\n        console.assert(false, 'Cannot find texture.');\n        return null;\n    }\n\n    /**\n     * @param {number} index\n     * @returns {ArrayBuffer}\n     */\n    getConstant(index) {\n        if (0 <= index && index < this.numConstants) {\n            return this.constants[index];\n        }\n\n        console.assert(false, 'Invalid constant handle.');\n        return null;\n    }\n\n    /**\n     * @param {number} index\n     * @returns {Texture}\n     */\n    getTexture(index) {\n        if (0 <= index && index < this.numTextures) {\n            return this.textures[index];\n        }\n\n        console.assert(false, 'Invalid texture handle.');\n        return null;\n    }\n\n    /**\n     * @param {Visual} visual\n     * @param {Camera} camera\n     */\n    updateConstants(visual, camera) {\n        let constants = this.constants,\n            i, m = this.numConstants;\n        for (i = 0; i < m; ++i) {\n            let constant = constants[i];\n            if (constant.allowUpdater) {\n                constant.update(visual, camera);\n            }\n        }\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.shader = inStream.readPointer();\n        this.constants = inStream.readPointerArray();\n        this.numConstants = this.constants.length;\n        this.textures = inStream.readPointerArray();\n        this.numTextures = this.textures.length;\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.shader = inStream.resolveLink(this.shader);\n        this.constants = inStream.resolveArrayLink(this.numConstants, this.constants);\n        this.textures = inStream.resolveArrayLink(this.numTextures, this.textures);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.shader);\n        outStream.writePointerArray(this.numConstants, this.constants);\n        outStream.writePointerArray(this.numTextures, this.textures);\n    }\n\n    static factory(inStream) {\n        let obj = new ShaderParameters(null, true);\n        obj.load(inStream);\n        return obj;\n    }\n}\n\nD3Object.Register('ShaderParameters', ShaderParameters.factory.bind(ShaderParameters));\n\nexport { ShaderParameters };","import { D3Object } from '../../core/D3Object';\n\nclass VisualEffect extends D3Object {\n\n    constructor() {\n        super('VisualEffect');\n        this.techniques = [];\n    }\n\n    /**\n     * @param {VisualTechnique} technique\n     */\n    insertTechnique(technique) {\n        if (technique) {\n            this.techniques.push(technique);\n        }\n        else {\n            console.warn('Input to insertTechnique must be nonnull.');\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getNumTechniques() {\n        return this.techniques.length;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @returns {number}\n     */\n    getNumPasses(techniqueIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getNumPass();\n        }\n        console.warn('Invalid index in getNumPasses.');\n        return 0;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @returns {VisualTechnique}\n     */\n    getTechnique(techniqueIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex];\n        }\n        console.warn('Invalid index in getTechnique.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {VisualPass}\n     */\n    getPass(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getPass(passIndex);\n        }\n        console.warn('Invalid index in GetPass.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {VertexShader}\n     */\n    getVertexShader(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getVertexShader(passIndex);\n        }\n\n        console.warn('Invalid index in getVertexShader.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {FragShader}\n     */\n    getFragShader(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getFragShader(passIndex);\n        }\n\n        console.warn('Invalid index in getFragShader.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {AlphaState}\n     */\n    getAlphaState(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getAlphaState(passIndex);\n        }\n\n        console.warn('Invalid index in getAlphaState.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {CullState}\n     */\n    getCullState(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getCullState(passIndex);\n        }\n\n        console.warn('Invalid index in getCullState.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {DepthState}\n     */\n    getDepthState(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getDepthState(passIndex);\n        }\n\n        console.warn('Invalid index in getDepthState.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {OffsetState}\n     */\n    getOffsetState(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getOffsetState(passIndex);\n        }\n\n        console.warn('Invalid index in getOffsetState.');\n        return null;\n    }\n\n    /**\n     * @param {number} techniqueIndex\n     * @param {number} passIndex\n     * @returns {StencilState}\n     */\n    getStencilState(techniqueIndex, passIndex) {\n        if (0 <= techniqueIndex && techniqueIndex < this.techniques.length) {\n            return this.techniques[techniqueIndex].getStencilState(passIndex);\n        }\n\n        console.warn('Invalid index in getStencilState.');\n        return null;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n\n        var numTechniques = inStream.readUint32();\n        this.techniques.length = numTechniques;\n        this.techniques = inStream.readSizedPointerArray(numTechniques);\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.techniques.forEach(function (t, i) {\n            this.techniques[i] = inStream.resolveLink(t);\n        }, this);\n    }\n}\n\nexport { VisualEffect };\n","import { D3Object } from '../../core/D3Object';\nimport { ShaderParameters } from './ShaderParameters';\n\nclass VisualEffectInstance extends D3Object {\n    /**\n     * @param {VisualEffect} effect\n     * @param {number} techniqueIndex\n     * @param {boolean} _privateCreate\n     */\n    constructor(effect, techniqueIndex, _privateCreate = false) {\n        super();\n        if (!_privateCreate) {\n            console.assert(effect !== null, 'effect must be specified.');\n            console.assert(0 <= techniqueIndex && techniqueIndex < effect.getNumTechniques(),\n                'Invalid technique index.');\n\n            /**\n             * @type {VisualEffect}\n             */\n            this.effect = effect;\n            this.techniqueIndex = techniqueIndex;\n\n            let technique = effect.getTechnique(techniqueIndex);\n            let numPasses = technique.getNumPasses();\n\n            this.numPasses = numPasses;\n            this.vertexParameters = new Array(numPasses);\n            this.fragParameters = new Array(numPasses);\n\n            for (let p = 0; p < numPasses; ++p) {\n                let pass = technique.getPass(p);\n                this.vertexParameters[p] = new ShaderParameters(pass.getVertexShader());\n                this.fragParameters[p] = new ShaderParameters(pass.getFragShader());\n            }\n        }\n        else {\n            this.effect = null;\n            this.techniqueIndex = 0;\n            this.numPasses = 0;\n            this.vertexParameters = null;\n            this.fragParameters = null;\n        }\n    }\n\n    getNumPasses() {\n        return this.effect.getTechnique(this.techniqueIndex).getNumPasses();\n    }\n\n    /**\n     * @param {number} pass\n     * @returns {VisualPass}\n     */\n    getPass(pass) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.effect.getTechnique(this.techniqueIndex).getPass(pass);\n        }\n\n        console.assert(false, 'Invalid pass index.');\n        return null;\n    }\n\n    /**\n     * @param {number} pass\n     * @returns {ShaderParameters}\n     */\n    getVertexParameters(pass) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass];\n        }\n        console.assert(false, 'Invalid pass index.');\n        return null;\n    }\n\n    /**\n     * @param {number} pass\n     * @returns {ShaderParameters}\n     */\n    getFragParameters(pass) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass];\n        }\n        console.assert(false, 'Invalid pass index.');\n        return null;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @param {ShaderFloat} sfloat\n     * @returns {number}\n     */\n    setVertexConstantByName(pass, name, sfloat) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].setConstantByName(name, sfloat);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return -1;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @param {ShaderFloat} sfloat\n     * @returns {number}\n     */\n    setFragConstantByName(pass, name, sfloat) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].setConstantByName(name, sfloat);\n        }\n\n        console.assert(false, 'Invalid pass index.');\n        return -1;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @param {Texture} texture\n     * @returns {number}\n     */\n    setVertexTextureByName(pass, name, texture) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].setTextureByName(name, texture);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return -1;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @param {Texture} texture\n     * @returns {number}\n     */\n    setFragTextureByName(pass, name, texture) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].setTextureByName(name, texture);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return -1;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @param {ShaderFloat} sfloat\n     */\n    setVertexConstant(pass, handle, sfloat) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].setConstant(handle, sfloat);\n        }\n        console.assert(false, 'Invalid pass index.');\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @param {ShaderFloat} sfloat\n     */\n    setFragConstant(pass, handle, sfloat) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].setConstant(handle, sfloat);\n        }\n        console.assert(false, 'Invalid pass index.');\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @param {Texture} texture\n     */\n    setVertexTexture(pass, handle, texture) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].setTexture(handle, texture);\n        }\n        console.assert(false, 'Invalid pass index.');\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @param {Texture} texture\n     */\n    setFragTexture(pass, handle, texture) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].setTexture(handle, texture);\n        }\n        console.assert(false, 'Invalid pass index.');\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @returns {ShaderFloat}\n     */\n    getVertexConstantByName(pass, name) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].getConstantByName(name);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return null;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @returns {ShaderFloat}\n     */\n    getFragConstantByName(pass, name) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].getConstantByName(name);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @returns {Texture}\n     */\n    getVertexTextureByName(pass, name) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].getTextureByName(name);\n        }\n\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {string} name\n     * @returns {Texture}\n     */\n    getFragTextureByName(pass, name) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].getTextureByName(name);\n        }\n\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @returns {ShaderFloat}\n     */\n    getVertexConstant(pass, handle) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].getConstant(handle);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @returns {ShaderFloat}\n     */\n    getFragConstant(pass, handle) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].getConstant(handle);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @returns {Texture}\n     */\n    getVertexTexture(pass, handle) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.vertexParameters[pass].getTexture(handle);\n        }\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    /**\n     * @param {number} pass\n     * @param {number} handle\n     * @returns {Texture}\n     */\n    getFragTexture(pass, handle) {\n        if (0 <= pass && pass < this.numPasses) {\n            return this.fragParameters[pass].getTexture(handle);\n        }\n\n        console.assert(false, 'Invalid pass index.');\n        return 0;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.techniqueIndex = inStream.readUint32();\n        this.effect = inStream.readPointer();\n        this.vertexParameters = inStream.readPointerArray();\n        this.numPasses = this.vertexParameters.length;\n        this.fragParameters = inStream.readSizedPointerArray(this.numPasses);\n    }\n    link(inStream) {\n        super.link(inStream);\n        this.effect = inStream.resolveLink(this.effect);\n        this.vertexParameters = inStream.resolveArrayLink(this.numPasses, this.vertexParameters);\n        this.fragParameters = inStream.resolveArrayLink(this.numPasses, this.fragParameters);\n    }\n\n    save(inStream) {\n        super.save(inStream);\n        // todo: implement\n    }\n\n    static factory(inStream) {\n        let obj = new VisualEffectInstance(0, 0, true);\n        obj.load(inStream);\n        return obj;\n    }\n};\n\nD3Object.Register('VisualEffectInstance', VisualEffectInstance.factory);\n\nexport { VisualEffectInstance };","import { D3Object } from '../../core/D3Object';\nimport { Program } from './Program';\n\nclass VisualPass extends D3Object {\n    constructor() {\n        super('VisualPass');\n        /**\n         * @type {Program}\n         */\n        this.program = null;\n        /**\n         * @type {AlphaState}\n         */\n        this.alphaState = null;\n        /**\n         * @type {CullState}\n         */\n        this.cullState = null;\n        /**\n         * @type {DepthState}\n         */\n        this.depthState = null;\n        /**\n         * @type {OffsetState}\n         */\n        this.offsetState = null;\n        /**\n         * @type {StencilState}\n         */\n        this.stencilState = null;\n    }\n\n    /**\n     * @returns {FragShader}\n     */\n    getFragShader() {\n        return this.program.fragShader;\n    }\n\n    /**\n     * @returns {VertexShader}\n     */\n    getVertexShader() {\n        return this.program.vertexShader;\n    }\n\n\n    load(inStream) {\n        super.load(inStream);\n        let vertexShader = inStream.readPointer();\n        let fragShader = inStream.readPointer();\n        this.program = new Program('Program', vertexShader, fragShader);\n        this.alphaState = inStream.readPointer();\n        this.cullState = inStream.readPointer();\n        this.depthState = inStream.readPointer();\n        this.offsetState = inStream.readPointer();\n        this.stencilState = inStream.readPointer();\n        this.wireState = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n\n        this.program.vertexShader = inStream.resolveLink(this.program.vertexShader);\n        this.program.fragShader = inStream.resolveLink(this.program.fragShader);\n\n        this.alphaState = inStream.resolveLink(this.alphaState);\n        this.cullState = inStream.resolveLink(this.cullState);\n        this.depthState = inStream.resolveLink(this.depthState);\n        this.offsetState = inStream.resolveLink(this.offsetState);\n        this.stencilState = inStream.resolveLink(this.stencilState);\n        this.wireState = inStream.resolveLink(this.wireState);\n    }\n\n    save(inStream) {\n        super.save(inStream);\n        // todo: implement\n    }\n\n    static factory(inStream) {\n        let obj = new VisualPass();\n        obj.load(inStream);\n        return obj;\n    }\n};\n\nD3Object.Register('VisualPass', VisualPass.factory);\n\nexport { VisualPass };\n","import { D3Object } from '../../core/D3Object';\n\nclass VisualTechnique extends D3Object {\n\n    constructor() {\n        super();\n\n        /**\n         * @type {Array<VisualPass>}\n         */\n        this.passes = [];\n    }\n\n    /**\n     * @param {VisualPass} pass\n     */\n    insertPass(pass) {\n        if (pass) {\n            this.passes.push(pass);\n        } else {\n            console.assert(false, 'Input to insertPass must be nonnull.');\n        }\n    }\n\n    /**\n     * @returns {number}\n     */\n    getNumPasses() {\n        return this.passes.length;\n    }\n\n    /**\n     * @returns {number|null}\n     */\n    getPass(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex];\n        }\n        console.warn(\"Invalid index in GetPass.\");\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {VertexShader}\n     */\n    getVertexShader(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].getVertexShader();\n        }\n        console.warn('Invalid index in getVertexShader.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {FragShader}\n     */\n    getFragShader(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].getFragShader();\n        }\n        console.warn('Invalid index in getFragShader.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {AlphaState}\n     */\n    getAlphaState(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].alphaState;\n        }\n        console.warn('Invalid index in getAlphaState.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {CullState}\n     */\n    getCullState(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].cullState;\n        }\n        console.warn('Invalid index in getCullState.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {DepthState}\n     */\n    getDepthState(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].depthState;\n        }\n        console.warn('Invalid index in getDepthState.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {OffsetState}\n     */\n    getOffsetState(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].offsetState;\n        }\n        console.warn('Invalid index in getOffsetState.');\n        return null;\n    }\n\n    /**\n     * @param {number} passIndex\n     * @returns {StencilState}\n     */\n    getStencilState(passIndex) {\n        if (0 <= passIndex && passIndex < this.passes.length) {\n            return this.passes[passIndex].stencilState;\n        }\n        console.warn('Invalid index in getStencilState.');\n        return null;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        var numPasses = inStream.readUint32();\n        this.passes.length = numPasses;\n        this.passes = inStream.readSizedPointerArray(numPasses);\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.passes.forEach(function (p, i) {\n            this.passes[i] = inStream.resolveLink(p);\n        }, this);\n    }\n\n    save(inStream) {\n        super.save(inStream);\n        // todo: implement\n    }\n}\n\nD3Object.Register('VisualTechnique', VisualTechnique.factory.bind(VisualTechnique));\n\nexport { VisualTechnique };","import { Point, _Math } from '../../math/index';\n\nclass Bound {\n    constructor() {\n        this.center = Point.ORIGIN;\n        this.radius = 0;\n    }\n    /**\n     * 复制\n     * @param {Bound} bound\n     * @returns {Bound}\n     */\n    copy(bound) {\n        this.center.copy(bound.center);\n        this.radius = bound.radius;\n        return this;\n    }\n    /**\n     * @param {Plane} plane\n     */\n    whichSide(plane) {\n        let signedDistance = plane.distanceTo(this.center);\n        if (signedDistance <= -this.radius) return -1;\n        if (signedDistance >= this.radius) return +1;\n        return 0;\n    }\n    /**\n     * @param {Bound} bound\n     */\n    growToContain(bound) {\n        if (bound.radius === 0) {\n            // The incoming bound is invalid and cannot affect growth.\n            return;\n        }\n\n        if (this.radius === 0) {\n            // The current bound is invalid, so just assign the incoming bound.\n            this.copy(bound);\n            return;\n        }\n\n        let centerDiff = bound.center.subAsVector(this.center);\n        let lengthSqr = centerDiff.squaredLength();\n        let radiusDiff = bound.radius - this.radius;\n        let radiusDiffSqr = radiusDiff * radiusDiff;\n\n        if (radiusDiffSqr >= lengthSqr) {\n            if (radiusDiff >= 0) {\n                this.center = bound.center;\n                this.radius = bound.radius;\n            }\n            return;\n        }\n\n        let length = _Math.sqrt(lengthSqr);\n        if (length > _Math.ZERO_TOLERANCE) {\n            let coeff = (length + radiusDiff) / (2 * length);\n            this.center = this.center.add(centerDiff.scalar(coeff));\n        }\n        this.radius = 0.5 * (length + this.radius + bound.radius);\n    }\n\n    /**\n     * @param {Transform} transform\n     * @param {Bound} bound\n     */\n    transformBy(transform, bound) {\n        bound.center = transform.mulPoint(this.center);\n        bound.radius = transform.getNorm() * this.radius;\n    }\n\n    /**\n     * 计算物体的球形包围盒\n     *\n     * @param {number} numElements 顶点数量\n     * @param {number} stride 坐标偏移\n     * @param {ArrayBuffer} data 顶点数据\n     */\n    computeFromData(numElements, stride, data) {\n\n        let pos = new Float32Array(3);\n        let t = 0, cx, cy, cz;\n        let i, radiusSqr, dv = new DataView(data);\n\n        // 包围盒的中心是所有坐标的平均值\n        for (i = 0; i < numElements; ++i) {\n            t = i * stride;\n            pos[0] += dv.getFloat32(t, true);\n            pos[1] += dv.getFloat32(t + 4, true);\n            pos[2] += dv.getFloat32(t + 8, true);\n        }\n        t = 1 / numElements;\n        cx = pos[0] * t;\n        cy = pos[1] * t;\n        cz = pos[2] * t;\n        this.center.assign(cx, cy, cz);\n\n        // 半径是到中心点距离最大的物体坐标\n        this.radius = 0;\n        for (i = 0; i < numElements; ++i) {\n            t = i * stride;\n            pos[0] = dv.getFloat32(t, true) - cx;\n            pos[1] = dv.getFloat32(t + 4, true) - cy;\n            pos[2] = dv.getFloat32(t + 8, true) - cz;\n\n            radiusSqr = pos[0] * pos[0] + pos[1] * pos[1] + pos[2] * pos[2];\n            if (radiusSqr > this.radius) {\n                this.radius = radiusSqr;\n            }\n        }\n\n        this.radius = Math.sqrt(this.radius);\n    }\n\n    /**\n     * Test for intersection of linear component and bound (points of\n     * intersection not computed).   \n     * > The linear component is parameterized by\n     *  `P + t*D`\n     * -  P is a point on the component (the origin)\n     * -  D is a unit-length direction vector\n     * \n     * > The interval `[tmin,tmax]` is\n     *   - line      tmin = -MAX_REAL, tmax = MAX_REAL\n     *   - ray:      tmin = 0.0, tmax = MAX_REAL\n     *   - segment:  tmin >= 0.0, tmax > tmin\n     *\n     * @param {Point} origin\n     * @param {Vector} direction\n     * @param {number} tmin\n     * @param {number} tmax\n     * @returns {boolean}\n     */\n    testIntersection(origin, direction, tmin, tmax) {\n        // 无效的包围盒, 不能计算相交\n        if (this.radius === 0) {\n            return false;\n        }\n\n        let diff;\n        let a0, a1, discr;\n\n        if (tmin === -_Math.MAX_REAL) {\n            console.assert(tmax === _Math.MAX_REAL, 'tmax must be infinity for a line.');\n\n            // Test for sphere-line intersection.\n            diff = origin.sub(this.center);\n            a0 = diff.dot(diff) - this.radius * this.radius;\n            a1 = direction.dot(diff);\n            discr = a1 * a1 - a0;\n            return discr >= 0;\n        }\n\n        if (tmax === _Math.MAX_REAL) {\n            console.assert(tmin === 0, 'tmin must be zero for a ray.');\n\n            // Test for sphere-ray intersection.\n            diff = origin.sub(this.center);\n            a0 = diff.dot(diff) - this.radius * this.radius;\n            if (a0 <= 0) {\n                // The ray origin is inside the sphere.\n                return true;\n            }\n            // else: The ray origin is outside the sphere.\n\n            a1 = direction.dot(diff);\n            if (a1 >= 0) {\n                // The ray forms an acute angle with diff, and so the ray is\n                // directed from the sphere.  Thus, the ray origin is outside\n                // the sphere, and points P+t*D for t >= 0 are even farther\n                // away from the sphere.\n                return false;\n            }\n\n            discr = a1 * a1 - a0;\n            return discr >= 0;\n        }\n\n        console.assert(tmax > tmin, 'tmin < tmax is required for a segment.');\n\n        // Test for sphere-segment intersection.\n        let segExtent = 0.5 * (tmin + tmax);\n        let segOrigin = origin.add(segExtent * direction);\n\n        diff = segOrigin.sub(this.center);\n        a0 = diff.dot(diff) - this.radius * this.radius;\n        a1 = direction.dot(diff);\n        discr = a1 * a1 - a0;\n        if (discr < 0) {\n            return false;\n        }\n\n        let tmp0 = segExtent * segExtent + a0;\n        let tmp1 = 2 * a1 * segExtent;\n        let qm = tmp0 - tmp1;\n        let qp = tmp0 + tmp1;\n        if (qm * qp <= 0) {\n            return true;\n        }\n        return qm > 0 && _Math.abs(a1) < segExtent;\n    }\n    /**\n     * Test for intersection of the two stationary bounds.\n     * @param {Bound} bound\n     * @returns {boolean}\n     */\n    testIntersection1(bound) {\n        // 无效的包围盒, 不能计算相交\n        if (bound.radius === 0 || this.radius === 0) {\n            return false;\n        }\n\n        // Test for staticSphere-staticSphere intersection.\n        let diff = this.center.subAsVector(bound.center);\n        let rSum = this.radius + bound.radius;\n        return diff.squaredLength() <= rSum * rSum;\n    }\n\n    /**\n     * Test for intersection of the two moving bounds.\n     * - Velocity0 is that of the calling Bound\n     * - velocity1 is that of the input bound.\n     *\n     * @param {Bound} bound\n     * @param {number} tmax\n     * @param {Vector} velocity0\n     * @param {Vector} velocity1\n     * @returns {boolean}\n     */\n    testIntersection2(bound, tmax, velocity0, velocity1) {\n        // 无效的包围盒, 不能计算相交\n        if (bound.radius === 0 || this.radius === 0) {\n            return false;\n        }\n\n        // Test for movingSphere-movingSphere intersection.\n        let relVelocity = velocity1.sub(velocity0);\n        let cenDiff = bound.center.subAsVector(this.center);\n        let a = relVelocity.squaredLength();\n        let c = cenDiff.squaredLength();\n        let rSum = bound.radius + this.radius;\n        let rSumSqr = rSum * rSum;\n\n        if (a > 0) {\n            let b = cenDiff.dot(relVelocity);\n            if (b <= 0) {\n                if (-tmax * a <= b) {\n                    return a * c - b * b <= a * rSumSqr;\n                }\n                else {\n                    return tmax * (tmax * a + 2 * b) + c <= rSumSqr;\n                }\n            }\n        }\n\n        return c <= rSumSqr;\n    }\n}\n\nexport { Bound };\n","import { ControlledObject } from '../controllers/ControlledObject';\nimport { DECLARE_ENUM } from '../../util/util';\nimport { _Math } from '../../math/index';\nimport { Transform } from '../dataTypes/Transform';\nimport { Bound } from '../dataTypes/Bound';\n\nclass Spatial extends ControlledObject {\n    constructor() {\n        super();\n\n        this.localTransform = Transform.IDENTITY;\n        this.worldTransform = Transform.IDENTITY;\n\n        // 在一些情况下直接更新worldTransform而跳过Spatial.update()\n        // 在这种情况下必须将this.worldTransformIsCurrent设置为true\n        this.worldTransformIsCurrent = false;\n\n        this.worldBound = new Bound();\n\n        // 在一些情况下直接更新worldBound而跳过Spatial.update()\n        // 在这种情况下必须将this.worldBoundIsCurrent设置为true\n        this.worldBoundIsCurrent = false;\n\n        this.culling = Spatial.CULLING_DYNAMIC;\n\n        /** @type {Spatial} */\n        this.parent = null;\n    }\n\n    /**\n     * update of geometric state and controllers.  The function computes world\n     * transformations on the downward pass of the scene tree traversal and\n     * world bounding volumes on the upward pass of the traversal.\n     * \n     * @param {number} applicationTime\n     * @param {boolean} initiator\n     */\n    update(applicationTime = -_Math.MAX_REAL, initiator = true) {\n        this.updateWorldData(applicationTime);\n        this.updateWorldBound();\n        if (initiator) {\n            this.propagateBoundToRoot();\n        }\n    }\n\n    /**\n     * @param {number} applicationTime\n     */\n    updateWorldData(applicationTime) {\n        // update any controllers associated with this object.\n        this.updateControllers(applicationTime);\n\n        if (this.worldTransformIsCurrent) {\n            return;\n        }\n\n        if (this.parent) {\n            this.worldTransform.copy(this.parent.worldTransform.mul(this.localTransform));\n        }\n        else {\n            this.worldTransform.copy(this.localTransform);\n        }\n    }\n\n    propagateBoundToRoot() {\n        if (this.parent) {\n            this.parent.updateWorldBound();\n            this.parent.propagateBoundToRoot();\n        }\n    }\n\n    /**\n     * culling support\n     * @param {Culler} culler\n     * @param {boolean} noCull\n     */\n    onGetVisibleSet(culler, noCull) {\n        if (this.culling === Spatial.CULLING_ALWAYS) {\n            return;\n        }\n\n        if (this.culling == Spatial.CULLING_NEVER) {\n            noCull = true;\n        }\n\n        let savePlaneState = culler.planeState;\n        if (noCull || culler.isVisible(this.worldBound)) {\n            this.getVisibleSet(culler, noCull);\n        }\n        culler.planeState = savePlaneState;\n    }\n\n    // abstract, update world Bound\n    updateWorldBound() {\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.localTransform = inStream.readTransform();\n        this.worldTransform = inStream.readTransform();\n        this.worldTransformIsCurrent = inStream.readBool();\n        this.worldBound = inStream.readBound();\n        this.worldBoundIsCurrent = inStream.readBool();\n        this.culling = inStream.readEnum();\n    }\n}\n\nDECLARE_ENUM(Spatial, {\n    CULLING_DYNAMIC: 0, // 通过比较世界包围盒裁剪平面确定可见状态\n    CULLING_ALWAYS: 1, // 强制裁剪对象, 如果节点被裁剪，那么它的整个子树也被裁剪\n    CULLING_NEVER: 2  // 不裁剪对象， 如果一个节点是不裁剪对象，那么它的整个子树也不被裁剪。\n});\n\nexport { Spatial };","import { Spatial } from './Spatial';\nimport { Bound } from '../dataTypes/Bound';\nimport { DECLARE_ENUM } from '../../util/util';\nimport {\n    VertexFormat,\n    VertexBufferAccessor,\n    VertexBuffer\n} from '../resources/namespace';\n\nclass Visual extends Spatial {\n\n    /**\n     * @param {number} type - primitiveType\n     * @param {VertexFormat} format\n     * @param {VertexBuffer} vertexBuffer\n     * @param {IndexBuffer} indexBuffer\n     */\n    constructor(type, format, vertexBuffer, indexBuffer) {\n        super();\n        this.primitiveType = type || Visual.PT_NONE;\n\n        /**\n         * @type {VertexFormat}\n         */\n        this.format = format;\n\n        /**\n         * @type {VertexBuffer}\n         */\n        this.vertexBuffer = vertexBuffer;\n\n        /**\n         * @type {IndexBuffer}\n         */\n        this.indexBuffer = indexBuffer;\n        this.modelBound = new Bound();\n\n        /**\n         * Shader effect used to draw the Visual.\n         * @type {VisualEffectInstance}\n         * @private\n         */\n        this.effect = null;\n\n        // true则以线框模式渲染\n        this.wire = false;\n\n        if (format && vertexBuffer && indexBuffer) {\n            this.updateModelSpace(Spatial.GU_MODEL_BOUND_ONLY);\n        }\n    }\n\n    updateModelSpace(type) {\n        this.updateModelBound();\n    }\n\n    updateWorldBound() {\n        this.modelBound.transformBy(this.worldTransform, this.worldBound);\n    }\n\n    updateModelBound() {\n        const numVertices = this.vertexBuffer.numElements;\n        const format = this.format;\n        const stride = format.stride;\n\n        let posIndex = format.getIndex(VertexFormat.AU_POSITION);\n        if (posIndex === -1) {\n            console.assert(false, 'update requires vertex positions');\n            return;\n        }\n\n        let posType = format.getAttributeType(posIndex);\n        if (posType !== VertexFormat.AT_FLOAT3 && posType !== VertexFormat.AT_FLOAT4) {\n            console.assert(false, 'Positions must be 3-tuples or 4-tuples');\n            return;\n        }\n\n        let data = this.vertexBuffer.getData();\n        let posOffset = format.getOffset(posIndex);\n        this.modelBound.computeFromData(numVertices, stride, data.slice(posOffset).buffer);\n    }\n\n    /**\n     * Support for hierarchical culling.\n     * @param {Culler} culler\n     * @param {boolean} noCull\n     */\n    getVisibleSet(culler, noCull) {\n        culler.insert(this);\n    }\n\n    /**\n     * @param {string} fileName - 文件名\n     */\n    static loadWMVF(fileName) {\n        return new Promise(function (resolve, reject) {\n            let load = new L5.XhrTask(fileName, 'arraybuffer');\n            load.then(function (data) {\n                let inFile = new DataView(data);\n                let ret = {};\n                inFile.offset = 0;\n                ret.primitiveType = inFile.getInt32(inFile.offset, true);\n                inFile.offset += 4;\n\n                ret.format = Visual.loadVertexFormat(inFile); // ok\n                ret.vertexBuffer = Visual.loadVertexBuffer(inFile, ret.format);\n                ret.indexBuffer = Visual.loadIndexBuffer(inFile);\n\n                console.log(data.byteLength);\n                console.log(inFile.offset);\n\n                resolve(ret);\n            }).catch(function (err) {\n                console.log(err);\n                reject(err);\n            });\n        }).catch(function (err) {\n            console.assert(false, \"Failed to open file :\" + fileName);\n        });\n    }\n\n    /**\n     * 解析顶点格式\n     * @param {BinDataView} inFile\n     * @returns {VertexFormat}\n     */\n    static loadVertexFormat(inFile) {\n        let numAttributes = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        let format = new VertexFormat(numAttributes);\n        let streamIndex, offset, usageIndex, type, usage;\n\n        for (let i = 0; i < numAttributes; ++i) {\n            streamIndex = inFile.getUint32(inFile.offset, true);\n            inFile.offset += 4;\n\n            offset = inFile.getUint32(inFile.offset, true);\n            inFile.offset += 4;\n\n            type = inFile.getInt32(inFile.offset, true);\n            inFile.offset += 4;\n\n            usage = inFile.getInt32(inFile.offset, true);\n            inFile.offset += 4;\n\n            usageIndex = inFile.getUint32(inFile.offset, true);\n            inFile.offset += 4;\n\n            format.setAttribute(i, streamIndex, offset, type, usage, usageIndex);\n        }\n\n        format.stride = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        return format;\n    }\n\n    /**\n     * 解析顶点缓冲对象\n     * @param {BinDataView} inFile\n     * @param {VertexFormat} format\n     * @returns {VertexBuffer}\n     */\n    static loadVertexBuffer(inFile, format) {\n        let numElements = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        let elementSize = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        let usage = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        let buffer = new VertexBuffer(numElements, elementSize, usage);\n        let vba = new VertexBufferAccessor(format, buffer);\n        // end ok\n\n        vba.read(inFile);\n\n        return buffer;\n    }\n\n    /**\n     * @param {BinDataView} inFile\n     * @returns {IndexBuffer}\n     */\n    static loadIndexBuffer(inFile) {\n        let numElements = inFile.getInt32(inFile.offset, true);\n        inFile.offset += 4;\n\n        if (numElements > 0) {\n            let elementSize = inFile.getInt32(inFile.offset, true);\n            inFile.offset += 4;\n            let usage = inFile.getInt32(inFile.offset, true);\n            inFile.offset += 4;\n            let offset = inFile.getInt32(inFile.offset, true);\n            inFile.offset += 4;\n\n            let buffer = new IndexBuffer(numElements, elementSize, usage);\n            buffer.offset = offset;\n            //let start = inFile.offset;\n            // let end = start + buffer.numBytes;\n            buffer.getData().set(new Uint8Array(inFile.buffer, inFile.offset, buffer.numBytes));\n\n            inFile.offset += buffer.numBytes;\n\n            return buffer;\n        }\n\n        return null;\n    }\n\n    /**\n     * @param {InStream} inStream\n     */\n    load(inStream) {\n        super.load(inStream);\n        this.type = inStream.readEnum();\n        this.modelBound = inStream.readBound();\n        this.format = inStream.readPointer();\n        this.vertexBuffer = inStream.readPointer();\n        this.indexBuffer = inStream.readPointer();\n        this.effect = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.format = inStream.resolveLink(this.format);\n        this.vertexBuffer = inStream.resolveLink(this.vertexBuffer);\n        this.indexBuffer = inStream.resolveLink(this.indexBuffer);\n        this.effect = inStream.resolveLink(this.effect);\n    }\n}\n\n/////////////////// 绘制类型 //////////////////////////////\nDECLARE_ENUM(Visual, {\n    PT_NONE: 0,  // 默认\n    PT_POLYPOINT: 1,   // 点\n    PT_POLYSEGMENTS_DISJOINT: 2,\n    PT_POLYSEGMENTS_CONTIGUOUS: 3,\n    PT_TRIANGLES: 4,  // abstract\n    PT_TRIMESH: 5,\n    PT_TRISTRIP: 6,\n    PT_TRIFAN: 7,\n    PT_MAX_QUANTITY: 8\n}, false);\n\n// Geometric updates.  If the positions in the vertex buffer have been\n// modified, you might want to update the surface frames (normals,\n// tangents, and bitangents) for indexed-triangle primitives.  It is\n// assumed that the positions have been updated and the vertex buffer is\n// unlocked.  The argument of UpdateModelSpace specifies the update\n// algorithm:\n//\n//   GU_MODEL_BOUND_ONLY:\n//      Update only the model-space bound of the new positions.\n//\n// For the other options, the model-space bound is always recomputed,\n// regardless of type of primitive.  For the surface frames to be updated,\n// the Visual must represent an indexed-triangle primitive and must have\n// the relevant channels (normal, tangents, bitangents).  If the primitive\n// is not indexed triangles, the update call does nothing to the frames.\n// An update occurs only for those channels present in the vertex buffer.\n// For example, if the vertex buffer has no normals, GU_NORMALS will\n// have no effect on the vertex buffer.  As another example, if you\n// specify GU_USE_GEOMETRY and the vertex buffer has normals and tangents\n// but not bitangents, only normals and tangents are updated (i.e. the\n// vertex buffer is not regenerated to have bitangents).\n//\n//   GU_NORMALS:\n//      Update the normals.\n//\n//   GU_USE_GEOMETRY:\n//      Use the mesh topology to determine the surface frames.  The\n//      algorithm uses a least-squares method, which is expensive.\n//\n//   GU_USE_TCOORD_CHANNEL + nonnegative_integer:\n//      The standard way to generate surface frames is to use a texture\n//      coordinate unit from the vertex buffer.\n//\n// To reduce video memory usage by the vertex buffers, if your vertex\n// shaders use normals, tangents, and bitangents, consider passing in\n// normals and tangents, and then have the shader compute the bitangent as\n//    bitangent = Cross(normal, tangent)\nDECLARE_ENUM(Visual, {\n    GU_MODEL_BOUND_ONLY: -3,\n    GU_NORMALS: -2,\n    GU_USE_GEOMETRY: -1,\n    GU_USE_TCOORD_CHANNEL: 0\n});\n\nexport { Visual };","import {\n\twebgl,\n\tGLRenderData,\n\tGLExtensions,\n\tGLVertexShader,\n\tGLFragShader,\n\tGLProgram,\n\tGLIndexBuffer,\n\tGLVertexArray,\n\tGLVertexFormat,\n\tGLTexture2D,\n\tGLTexture2DArray,\n\tGLTexture3D,\n\tGLTextureCube,\n\tGLRenderTarget,\n\tGLSampler\n} from './webgl/namespace';\nimport { AlphaState, CullState, DepthState, OffsetState, StencilState } from '../shaders/namespace';\nimport { Visual } from '../sceneTree/Visual';\n\nclass Renderer {\n    /**\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} width\n     * @param {number} height\n     * @param {ArrayBuffer} clearColor\n     * @param {number} colorFormat\n     * @param {number} depthStencilFormat\n     * @param {number} numMultiSamples\n     */\n\tconstructor(canvas, width, height, clearColor, colorFormat, depthStencilFormat, numMultiSamples) {\n        /**\n         * @type {WebGLRenderingContext}\n         */\n\t\tlet gl = canvas.getContext('webgl2', {\n\t\t\talpha: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\tantialias: true\n\t\t});\n\t\tthis.gl = gl;\n\t\tthis.clearColor = new Float32Array([0, 0, 0, 1]);\n\t\tthis.clearColor.set(clearColor);\n\t\tthis.initialize(width, height, colorFormat, depthStencilFormat, numMultiSamples);\n\n\t\t// The platform-specific data.  It is in public scope to allow the\n\t\t// renderer resource classes to access it.\n\t\tlet data = new GLRenderData();\n\t\tthis.data = data;\n\n\t\tdata.maxVShaderImages = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tdata.maxFShaderImages = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tdata.maxCombinedImages = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\n\t\t// Set the default render states.\n\t\tdata.currentRS.initialize(gl,\n\t\t\tthis.defaultAlphaState,\n\t\t\tthis.defaultCullState,\n\t\t\tthis.defaultDepthState,\n\t\t\tthis.defaultOffsetState,\n\t\t\tthis.defaultStencilState\n\t\t);\n\t\tRenderer.renderers.add(this);\n\n\t\t// let c = document.createElement('canvas');\n\t\t// c.setAttribute('style', 'width:150px;height:75px');\n\t\t// this.textContext = c.getContext('2d');\n\t\t// document.body.appendChild(this.textContext.canvas);\n\t}\n\n    /**\n     * @returns {Set<Renderer>}\n     */\n\tstatic get renderers() {\n\t\treturn (Renderer._renderers || (Renderer._renderers = new Set()));\n\t}\n\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {number} colorFormat - TEXTURE_FORMAT_XXX\n     * @param {number} depthStencilFormat - TEXTURE_FORMAT_XXX\n     * @param {number} numMultiSamples\n     */\n\tinitialize(width, height, colorFormat, depthStencilFormat, numMultiSamples) {\n\n\t\tGLExtensions.init(this.gl);\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.colorFormat = colorFormat;\n\t\tthis.depthStencilFormat = depthStencilFormat;\n\t\tthis.numMultiSamples = numMultiSamples;\n\n\t\t// global render state\n\t\tthis.alphaState = new AlphaState();\n\t\tthis.cullState = new CullState();\n\t\tthis.depthState = new DepthState();\n\t\tthis.offsetState = new OffsetState();\n\t\tthis.stencilState = new StencilState();\n\n\t\tthis.defaultAlphaState = new AlphaState();\n\t\tthis.defaultCullState = new CullState();\n\t\tthis.defaultDepthState = new DepthState();\n\t\tthis.defaultOffsetState = new OffsetState();\n\t\tthis.defaultStencilState = new StencilState();\n\n\n\t\t// override global state\n\t\tthis.overrideAlphaState = null;\n\t\tthis.overrideCullState = null;\n\t\tthis.overrideDepthState = null;\n\t\tthis.overrideOffsetState = null;\n\t\tthis.overrideStencilState = null;\n\n\n\t\tthis.reverseCullOrder = false;\n\n\t\t// Geometric transformation pipeline.  The camera stores the view,\n\t\t// projection, and postprojection matrices.\n\t\tthis.camera = null;\n\n\n\t\t// Access to the current clearing parameters for the color, depth, and\n\t\t// stencil buffers.  The color buffer is the back buffer.\n\t\tthis.clearDepth = 1.0;\n\t\tthis.clearStencil = 0;\n\n\t\t// Channel masking for the back buffer., allow rgba,\n\t\tthis._colorMask = (0x1 | 0x2 | 0x4 | 0x8);\n\n\t\t// 框架结构对应到底层结构\n\t\tthis.vertexArrays = new Map(); // VAOs\n\n\t\tthis.vertexFormats = new Map();\n\t\tthis.vertexBuffers = new Map();\n\t\tthis.indexBuffers = new Map();\n\t\tthis.texture2Ds = new Map();\n\t\tthis.texture3Ds = new Map();\n\t\tthis.textureCubes = new Map();\n\t\tthis.renderTargets = new Map();\n\t\tthis.vertexShaders = new Map();\n\t\tthis.fragShaders = new Map();\n\t\tthis.samplerStates = new Map();\n\t\tthis.programs = new Map();\n\n\t\tlet gl = this.gl;\n\t\tlet cc = this.clearColor;\n\t\tgl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n\t\tgl.clearDepth(this.clearDepth);\n\t\tgl.clearStencil(this.clearStencil);\n\t}\n\n\tterminate() {\n\t}\n\n    /**\n     * Compute a picking ray from the specified left-handed screen\n     * coordinates (x,y) and using the current camera.  The output\n     * 'origin' is the camera position and the 'direction' is a\n     * unit-length vector.  Both are in world coordinates.\n     * The return value is 'true' iff (x,y) is in the current viewport.\n     *\n     * @param x {number} in\n     * @param y {number} in\n     * @param origin {Point} out\n     * @param direction {Vector} out\n     */\n\tgetPickRay(x, y, origin, direction) {\n\t}\n\n\t// === 资源管理\n\t// 资源对象是已定义的\n\t//    VertexFormat\n\t//    VertexBuffer\n\t//    IndexBuffer\n\t//    Texture(2d, cube, 3d, 2d array),\n\t//    RenderTarget\n\t//    VertexShader\n\t//    FragmentShader\n\t//\n\t// bind:  创建对象对应的资源\n\t//    渲染器维护对象和资源之间的映射，大多数情况下，显存中会分配一个资源对应对象在系统内存对应的副本\n\t//    如果在bind之前调用了 enable 或 lock, 渲染器会创建一个资源而不是抛出异常\n\t//\n\t// bindAll:  为所有的渲染器对象创建对应的资源\n\t//\n\t// unbind:  销毁对象对应的资源\n\t//    渲染器会移除对象-资源映射，和资源，但不会移除对象，所以对象可以重新绑定\n\t//\n\t// unbindAll:  销毁所有渲染器对象创建的资源和对象本身\n\t//\n\t// enable: 在drawPrimitive之前调用，激活资源，以便在本次渲染中使用\n\t//\n\t// disable: 在drawPrimitive之后调用, 取消激活资源，以便下次渲染中不使用\n\t//\n\t// lock:  获取一个显存资源位置\n\t//    使用这个方法更新显存, 如果要这么干，请注意更新失败的情况，因为内存和显存复制不同步;\n\t//    也可以锁定后只读，在这种情况下显存内容是保留的;\n\t//    尽可能让资源锁定状态保持最少的时间\n\t//\n\t// unlock:  释放一个显存资源位置\n\t//\n\t// update:  锁定资源占用的显存，并复制内存数据到显存。渲染器会自动调用\n\t//\n\t// updateAll:  和update类似，但它更新所有渲染器共享的资源\n\t//\n\t// readColor:  只能由RenderTarget调用, 在调用时, RenderTarget必须是未激活状态\n\t//    方法返回一个2D纹理对象，包含renderTarget在显存中的颜色值\n\t// === 资源管理\n\n    /**\n     * Access to the current color channel masks.\n     * allowRed : 0x1\n     * allowGreen: 0x2\n     * allowBlue: 0x4\n     * allowAlpha: 0x8\n     * return\n     */\n\tgetColorMask() {\n\t\treturn (0x1 | 0x2 | 0x4 | 0x8);\n\t}\n\n\t// Override the global state.  If overridden, this state is used instead\n\t// of the VisualPass state during a drawing call.  To undo the override,\n\t// pass a null pointer.\n\tget overrideAlphaState() {\n\t\treturn this._overrideAlphaState;\n\t}\n\n\tset overrideAlphaState(val) {\n\t\tthis._overrideAlphaState = val;\n\t}\n\n\tget overrideCullState() {\n\t\treturn this._overrideCullState;\n\t}\n\n\tset overrideCullState(val) {\n\t\tthis._overrideCullState = val;\n\t}\n\n\tget overrideDepthState() {\n\t\treturn this._overrideDepthState;\n\t}\n\n\tset overrideDepthState(val) {\n\t\tthis._overrideDepthState = val;\n\t}\n\n\tget overrideOffsetState() {\n\t\treturn this._overrideOffsetState;\n\t}\n\n\tset overrideOffsetState(val) {\n\t\tthis._overrideOffsetState = val;\n\t}\n\n\tget overrideStencilState() {\n\t\treturn this._overrideStencilState;\n\t}\n\n\tset overrideStencilState(val) {\n\t\tthis._overrideStencilState = val;\n\t}\n\n    /**\n     * The entry point to drawing the visible set of a scene tree.\n     * @param {VisibleSet} visibleSet\n     * @param {*} globalEffect\n     */\n\tdrawVisibleSet(visibleSet, globalEffect = null) {\n\t\tif (!globalEffect) {\n\t\t\tlet numVisible = visibleSet.getNumVisible();\n\t\t\tfor (let i = 0; i < numVisible; ++i) {\n\t\t\t\tlet visual = visibleSet.getVisible(i);\n\t\t\t\tthis.drawInstance(visual, visual.effect);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tglobalEffect.draw(this, visibleSet);\n\t\t}\n\t}\n\n    /**\n     * @param {Visual} visual\n     */\n\tdrawVisible(visual) {\n\t\tthis.drawInstance(visual, visual.effect);\n\t}\n\n\n    /**\n     * @param {Visual} visual\n     * @param {VisualEffectInstance} instance\n     */\n\tdrawInstance(visual, instance) {\n\t\tif (!visual) {\n\t\t\tconsole.assert(false, 'The visual object must exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!instance) {\n\t\t\tconsole.assert(false, 'The visual object must have an effect instance.');\n\t\t\treturn;\n\t\t}\n\n\t\tlet vformat = visual.format;\n\t\tlet vbuffer = visual.vertexBuffer;\n\t\tlet ibuffer = visual.indexBuffer;\n\n\t\tlet numPasses = instance.getNumPasses();\n\t\tfor (let i = 0; i < numPasses; ++i) {\n\t\t\tlet pass = instance.getPass(i);\n\t\t\tlet vparams = instance.getVertexParameters(i);\n\t\t\tlet fparams = instance.getFragParameters(i);\n\t\t\tlet program = pass.program;\n\n\t\t\t// Update any shader constants that lety during runtime.\n\t\t\tvparams.updateConstants(visual, this.camera);\n\t\t\tfparams.updateConstants(visual, this.camera);\n\n\t\t\t// Set visual state.\n\t\t\tthis.setAlphaState(pass.alphaState);\n\t\t\tthis.setCullState(pass.cullState);\n\t\t\tthis.setDepthState(pass.depthState);\n\t\t\tthis.setOffsetState(pass.offsetState);\n\t\t\tthis.setStencilState(pass.stencilState);\n\n\t\t\tthis._enableProgram(program, vparams, fparams);\n\t\t\tthis._enableVertexBuffer(vbuffer, vformat);\n\t\t\tif (ibuffer) {\n\t\t\t\tthis._enableIndexBuffer(ibuffer);\n\t\t\t}\n\n\t\t\t// Draw the primitive.\n\t\t\tthis.drawPrimitive(visual);\n\n\t\t\tthis._disableVertexBuffer(vbuffer);\n\t\t\tif (ibuffer) {\n\t\t\t\tthis._disableIndexBuffer(ibuffer);\n\t\t\t}\n\n\t\t\t// Disable the shaders.\n\t\t\tthis._disableProgram(program, vparams, fparams);\n\t\t}\n\t}\n\n    /**\n     * The entry point for drawing 3D objects, called by the single-object\n     * Draw function.\n     * @param {Visual} visual\n     */\n\t_drawPrimitive(visual) {\n\t}\n\n    /**\n     * 设置渲染视口\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n\tsetViewport(x, y, width, height) {\n\t\tthis.gl.viewport(x, y, width, height);\n\t}\n\n    /**\n     * 获取渲染视口参数\n     * @returns {Array<number>}\n     */\n\tgetViewport() {\n\t\tlet gl = this.gl;\n\t\treturn gl.getParameter(gl.VIEWPORT);\n\t}\n\n    /**\n     * 调整渲染视口大小\n     * @param width {number}\n     * @param height {number}\n     */\n\tresize(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tlet gl = this.gl;\n\t\tlet p = gl.getParameter(gl.VIEWPORT);\n\t\tgl.viewport(p[0], p[1], width, height);\n\t}\n\n    /**\n     * 设置深度测试范围\n     * @param min {number}\n     * @param max {number}\n     */\n\tsetDepthRange(min, max) {\n\t\tthis.gl.depthRange(min, max);\n\t}\n\n    /**\n     * 获取当前深度测试范围\n     * @returns {Array<number>}\n     */\n\tgetDepthRange() {\n\t\tlet gl = this.gl;\n\t\treturn gl.getParameter(gl.DEPTH_RANGE);\n\t}\n\n\t// Support for clearing the color, depth, and stencil buffers.\n\tclearColorBuffer(x = 0, y = 0, w = 0, h = 0) {\n\t}\n\n\tclearDepthBuffer(x = 0, y = 0, w = 0, h = 0) {\n\t}\n\n\tclearStencilBuffer(x = 0, y = 0, w = 0, h = 0) {\n\t}\n\n\tdisplayColorBuffer() {\n\t}\n\n\t// For render target access to allow creation of color/depth textures.\n\tinTexture2DMap(texture) {\n\t\treturn true;\n\t}\n\n\tinsertInTexture2DMap(texture, platformTexture) {\n\t}\n\n\n\tstatic updateAll(obj /*, params... */) {\n\t\tswitch (obj.constructor.name.split('$')[0]) {\n\t\t\tcase 'Texture2D':\n\t\t\t\tthis._updateAllTexture2D(obj, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'Texture3D':\n\t\t\t\tthis._updateAllTexture3D(obj, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'TextureCube':\n\t\t\t\tthis._updateAllTextureCube(obj, arguments[1], arguments[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'VertexBuffer':\n\t\t\t\tthis._updateAllVertexBuffer(obj, arguments[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'IndexBuffer':\n\t\t\t\tthis._updateAllIndexBuffer(obj);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.assert(false, `${obj.constructor.name} not support [updateAll] method.`);\n\t\t}\n\t}\n\t// ------------------- Sampler ------------------------------\n\t_bindAllSamplerState(sampler) {\n\t\tRenderer._renderers.forEach(r => r._bindSamplerState(sampler));\n\t}\n\t_bindSamplerState(sampler) {\n\t\tif (!this.samplerStates.has(sampler)) {\n\t\t\tthis.samplerStates.set(sampler, new GLSampler(this.gl, sampler));\n\t\t}\n\t}\n\t_enableSamplerState(sampler, textureUnit) {\n\t\tlet glSampler = this.samplerStates.get(sampler);\n\t\tif (!glSampler) {\n\t\t\tglSampler = new GLSampler(this.gl, sampler);\n\t\t\tthis.samplerStates.set(sampler, glSampler);\n\t\t}\n\t\tglSampler.enable(this.gl, textureUnit);\n\t}\n\n\t// ------------------- 着色器程序管理 ----------------------------------\n    /**\n     * @param program {Program}\n     * @private\n     */\n\t_bindProgram(program) {\n\t\tif (!this.programs.get(program)) {\n\t\t\tthis.programs.set(program, new GLProgram(this, program));\n\t\t}\n\t}\n\n    /**\n     * @param program {Program}\n     * @private\n     */\n\tstatic _bindAllProgram(program) {\n\t\tRenderer.renderers.forEach(function (r) {\n\t\t\tr._bindProgram(program);\n\t\t});\n\t}\n\n    /**\n     * @param {Program} program\n     * @private\n     */\n\t_unbindProgram(program) {\n\t\tlet glProgram = this.programs.get(program);\n\t\tif (glProgram) {\n\t\t\tglProgram.free(this.gl);\n\t\t\tthis.programs.delete(program);\n\t\t}\n\t}\n    /**\n     * @param program {Program}\n     * @private\n     */\n\tstatic _unbindAllProgram(program) {\n\t\tRenderer.renderers.forEach(function (r) {\n\t\t\tr._unbindProgram(program);\n\t\t});\n\t}\n\n    /**\n     * @param program {Program}\n     * @param vp {ShaderParameters}\n     * @param fp {ShaderParameters}\n     * @private\n     */\n\t_enableProgram(program, vp, fp) {\n\t\tlet glProgram = this.programs.get(program);\n\t\tif (!glProgram) {\n\t\t\tthis._bindVertexShader(program.vertexShader);\n\t\t\tthis._bindFragShader(program.fragShader);\n\n\t\t\tglProgram = new GLProgram(\n\t\t\t\tthis,\n\t\t\t\tprogram,\n\t\t\t\tthis.vertexShaders.get(program.vertexShader),\n\t\t\t\tthis.fragShaders.get(program.fragShader)\n\t\t\t);\n\t\t\tthis.programs.set(program, glProgram);\n\t\t}\n\t\tglProgram.enable(this);\n\n\t\t// Enable the shaders.\n\t\tthis._enableVertexShader(program.vertexShader, program.inputMap, vp);\n\t\tthis._enableFragShader(program.fragShader, program.inputMap, fp);\n\t}\n\n    /**\n     * @param program {Program}\n     * @param vp {ShaderParameters}\n     * @param fp {ShaderParameters}\n     * @private\n     */\n\t_disableProgram(program, vp, fp) {\n\n\t\tthis._disableVertexShader(program.vertexShader, vp);\n\t\tthis._disableFragShader(program.fragShader, fp);\n\t\tlet glProgram = this.programs.get(program);\n\t\tif (glProgram) {\n\t\t\tglProgram.disable(this);\n\t\t}\n\t}\n\n\t//----------------------- vertexBuffer ------------------------\n    /**\n     * @param {VertexBuffer} buffer\n     * @param {VertexFormat} format\n     * @private\n     */\n\t_enableVertexBuffer(buffer, format) {\n\t\tlet glVao = this.vertexArrays.get(buffer);\n\t\tif (!glVao) {\n\t\t\tglFormat = this.vertexFormats.get(format);\n\t\t\tif (!glFormat) {\n\t\t\t\tglFormat = new GLVertexFormat(this.gl, format);\n\t\t\t\tthis.vertexFormats.set(format, glFormat);\n\t\t\t}\n\t\t\tglVao = new GLVertexArray(this, buffer, glFormat);\n\t\t\tthis.vertexArrays.set(buffer, glVao);\n\t\t\treturn;\n\t\t}\n\n\t\tglVao.enable(this.gl);\n\t}\n\n    /**\n     * @param {VertexBuffer} buffer\n     * @private\n     */\n\t_disableVertexBuffer(buffer) {\n\t\tlet glVao = this.vertexArrays.get(buffer);\n\t\tif (glVao) {\n\t\t\tglVao.disable(this.gl);\n\t\t}\n\t}\n\n    /**\n     * @param {VertexBuffer} buffer\n\t * @param {VertexFormat} format\n     * @private\n     */\n\t_updateVertexBuffer(buffer, format) {\n\t\tlet glFormat = this.vertexFormats.get(format);\n\t\tif (!glFormat) {\n\t\t\tglFormat = new GLVertexFormat(this.gl, format);\n\t\t\tthis.vertexFormats.set(format, glFormat);\n\t\t}\n\n\t\tlet glVao = this.vertexArrays.get(buffer);\n\t\tif (!glVao) {\n\t\t\tglVao = new GLVertexArray(this.gl, buffer, glFormat);\n\t\t\tthis.vertexArrays.set(buffer, glVao);\n\t\t\treturn;\n\t\t}\n\n\t\tglVao.update(this.gl, buffer, glFormat);\n\t}\n\n    /**\n     * @param {VertexBuffer} buffer\n\t * @param {VertexFormat} format\n     * @private\n     */\n\tstatic _updateAllVertexBuffer(buffer, format) {\n\t\tRenderer.renderers.forEach(renderer => renderer._updateVertexBuffer(buffer, format));\n\t}\n\n\t//----------------------- indexBuffer ------------------------\n    /**\n     * @param {IndexBuffer} buffer\n     * @private\n     */\n\t_enableIndexBuffer(buffer) {\n\t\tlet glIBuffer = this.indexBuffers.get(buffer);\n\t\tif (!glIBuffer) {\n\t\t\tglIBuffer = new GLIndexBuffer(this.gl, buffer);\n\t\t\tthis.indexBuffers.set(buffer, glIBuffer);\n\t\t\treturn;\n\t\t}\n\t\tglIBuffer.enable(this.gl);\n\t}\n\n    /**\n     * @param {IndexBuffer} buffer\n     * @private\n     */\n\t_disableIndexBuffer(buffer) {\n\t\tlet glIBuffer = this.indexBuffers.get(buffer);\n\t\tif (glIBuffer) {\n\t\t\tglIBuffer.disable(this.gl);\n\t\t}\n\t}\n\n    /**\n     * @param {IndexBuffer} buffer\n     * @private\n     */\n\t_updateIndexBuffer(buffer) {\n\t\tlet glIBuffer = this.indexBuffers.get(buffer);\n\t\tif (!glIBuffer) {\n\t\t\tglIBuffer = new GLIndexBuffer(this.gl, buffer);\n\t\t\tthis.indexBuffers.set(buffer, glIBuffer);\n\t\t\treturn;\n\t\t}\n\t\tglIBuffer.update(this.gl, buffer);\n\t}\n\n    /**\n     * @param {IndexBuffer} buffer\n     * @private\n     */\n\tstatic _updateAllIndexBuffer(buffer) {\n\t\tRenderer.renderers.forEach(renderer => renderer._updateIndexBuffer(buffer));\n\t}\n\n\t//----------------------- fragShader ------------------------\n\n    /**\n     * @param {FragShader} shader\n     * @private\n     */\n\t_bindFragShader(shader) {\n\t\tif (!this.fragShaders.get(shader)) {\n\t\t\tlet numSamplers = shader.numSamplers;\n\t\t\tif (numSamplers > 0) {\n\t\t\t\tfor (let i = 0; i < numSamplers; ++i) {\n\t\t\t\t\tthis._bindSamplerState(shader.getSamplerState(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.fragShaders.set(shader, new GLFragShader(this, shader));\n\t\t}\n\t}\n\n    /**\n     * @param {FragShader} shader\n     * @private\n     */\n\tstatic _bindAllFragShader(shader) {\n\t\tRenderer.renderers.forEach(r => r._bindFragShader(shader));\n\t}\n\n    /**\n     * @param {FragShader} shader\n     * @private\n     */\n\t_unbindFragShader(shader) {\n\t\tlet glFShader = this.fragShaders.get(shader);\n\t\tif (glFShader) {\n\t\t\tglFShader.free(this.gl);\n\t\t\tthis.fragShaders.delete(shader);\n\t\t}\n\t}\n\n    /**\n     * @param {FragShader} shader\n     * @private\n     */\n\tstatic _unbindAllFragShader(shader) {\n\t\tRenderer.renderers.forEach(r => r._unbindFragShader(shader));\n\t}\n\n    /**\n     * @param {FragShader} shader\n     * @param {Map} mapping\n     * @param {ShaderParameters} parameters\n     * @private\n     */\n\t_enableFragShader(shader, mapping, parameters) {\n\t\tlet glFShader = this.fragShaders.get(shader);\n\t\tif (!glFShader) {\n\t\t\tglFShader = new GLFragShader(this, shader);\n\t\t\tthis.fragShaders.set(shader, glFShader);\n\t\t}\n\t\tglFShader.enable(this, mapping, shader, parameters);\n\t}\n\n    /**\n     * @param {FragShader} shader\n     * @param {ShaderParameters} parameters\n     * @private\n     */\n\t_disableFragShader(shader, parameters) {\n\t\tlet glFShader = this.fragShaders.get(shader);\n\t\tif (glFShader) {\n\t\t\tglFShader.disable(this, shader, parameters);\n\t\t}\n\t}\n\n\t//----------------------- vertexShader ------------------------\n    /**\n     * @param {VertexShader} shader\n     * @private\n     */\n\t_bindVertexShader(shader) {\n\t\tif (!this.vertexShaders.get(shader)) {\n\t\t\tlet numSamplers = shader.numSamplers;\n\t\t\tif (numSamplers > 0) {\n\t\t\t\tfor (let i = 0; i < numSamplers; ++i) {\n\t\t\t\t\tthis._bindSamplerState(shader.getSamplerState(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.vertexShaders.set(shader, new GLVertexShader(this, shader));\n\t\t}\n\t}\n\n    /**\n     * @param shader {VertexShader}\n     * @private\n     */\n\tstatic _bindAllVertexShader(shader) { }\n    /**\n     * @param shader {VertexShader}\n     * @private\n     */\n\t_unbindVertexShader(shader) { }\n\n    /**\n     * @param shader {VertexShader}\n     * @private\n     */\n\tstatic _unbindAllVertexShader(shader) { }\n\n    /**\n     * @param shader {VertexShader}\n     * @param mapping {Map}\n     * @param parameters {ShaderParameters}\n     * @private\n     */\n\t_enableVertexShader(shader, mapping, parameters) {\n\t\tlet glVShader = this.vertexShaders.get(shader);\n\t\tif (!glVShader) {\n\t\t\tglVShader = new GLVertexShader(this, shader);\n\t\t\tthis.vertexShaders.set(shader, glVShader);\n\t\t}\n\n\t\tglVShader.enable(this, mapping, shader, parameters);\n\t}\n\n    /**\n     * @param shader {VertexShader}\n     * @param parameters {ShaderParameters}\n     * @private\n     */\n\t_disableVertexShader(shader, parameters) {\n\t\tlet glVShader = this.vertexShaders.get(shader);\n\t\tif (glVShader) {\n\t\t\tglVShader.disable(this, shader, parameters);\n\t\t}\n\t}\n\n\t//----------------------- texture2d ------------------------\n    /**\n     * @param texture {Texture2D}\n     * @private\n     */\n\t_bindTexture2D(texture) { }\n\n    /**\n     * @param texture {Texture2D}\n     * @private\n     */\n\tstatic _bindAllTexture2D(texture) { }\n\n    /**\n     * @param texture {Texture2D}\n     * @private\n     */\n\t_unbindTexture2D(texture) { }\n\n    /**\n     * @param texture {Texture2D}\n     * @private\n     */\n\tstatic _unbindAllTexture2D(texture) { }\n\n    /**\n     * @param {Texture2D} texture\n     * @param {number} textureUnit\n     * @private\n     */\n\t_enableTexture2D(texture, textureUnit) {\n\t\tlet glTexture2D = this.texture2Ds.get(texture);\n\t\tif (!glTexture2D) {\n\t\t\tglTexture2D = new GLTexture2D(this.gl, texture);\n\t\t\tthis.texture2Ds.set(texture, glTexture2D);\n\t\t}\n\t\tglTexture2D.enable(this.gl, textureUnit);\n\t}\n\n    /**\n     * @param {Texture2D} texture\n     * @param {number} textureUnit\n     * @private\n     */\n\t_disableTexture2D(texture, textureUnit) {\n\t\tlet glTexture2D = this.texture2Ds.get(texture);\n\t\tif (glTexture2D) {\n\t\t\tglTexture2D.disable(this.gl, textureUnit);\n\t\t}\n\t}\n\n    /**\n     * @param {Texture2D} texture\n     * @param {number} level\n     * @private\n     */\n\t_updateTexture2D(texture, level = 0) {\n\t\tlet glTexture2D = this.texture2Ds.get(texture);\n\t\tif (!glTexture2D) {\n\t\t\tglTexture2D = new GLTexture2D(this.gl, texture);\n\t\t\tthis.texture2Ds.set(texture, glTexture2D);\n\t\t} else {\n\t\t\tglTexture2D.update(this.gl, level, texture.getData());\n\t\t}\n\t}\n\n    /**\n     * @param {Texture2D} texture\n     * @param {number} level\n     */\n\tstatic _updateAllTexture2D(texture, level) {\n\t\tRenderer.renderers.forEach(renderer => renderer._updateTexture2D(texture, level));\n\t}\n\n\t//----------------------- textureCube ------------------------\n    /**\n     * @param texture {TextureCube}\n     * @private\n     */\n\t_bindTextureCube(texture) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @private\n     */\n\tstatic _bindAllTextureCube(texture) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @private\n     */\n\t_unbindTextureCube(texture) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @private\n     */\n\tstatic _unbindAllTextureCube(texture) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @param textureUnit {number}\n     * @private\n     */\n\t_enableTextureCube(texture, textureUnit) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @param textureUnit {number}\n     * @private\n     */\n\t_disableTextureCube(texture, textureUnit) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @param face {number}\n     * @param level {number}\n     * @private\n     */\n\t_updateTextureCube(texture, face, level) { }\n\n    /**\n     * @param texture {TextureCube}\n     * @param face {number}\n     * @param level {number}\n     * @private\n     */\n\tstatic _updateAllTextureCube(texture, face, level) { }\n\n\t//----------------------- renderTarget ------------------------\n\n\t/**\n\t * @param {Visual} visual\n\t */\n\tdrawPrimitive(visual) {\n\t\tlet type = visual.primitiveType;\n\t\tlet vbuffer = visual.vertexBuffer;\n\t\tlet ibuffer = visual.indexBuffer;\n\t\tlet gl = this.gl;\n\t\tlet numPixelsDrawn;\n\t\tlet numSegments;\n\n\t\tswitch (type) {\n\t\t\tcase Visual.PT_TRIMESH:\n\t\t\tcase Visual.PT_TRISTRIP:\n\t\t\tcase Visual.PT_TRIFAN:\n\t\t\t\t{\n\t\t\t\t\tlet numVertices = vbuffer.numElements;\n\t\t\t\t\tlet numIndices = ibuffer.numElements;\n\t\t\t\t\tif (numVertices > 0 && numIndices > 0) {\n\t\t\t\t\t\tlet indexType = (ibuffer.elementSize == 2) ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n\t\t\t\t\t\tlet indexData = ibuffer.offset;\n\t\t\t\t\t\tif (visual.wire) {\n\t\t\t\t\t\t\tgl.drawElements(gl.LINE_STRIP, numIndices, indexType, indexData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.drawElements(webgl.PrimitiveType[type], numIndices, indexType, indexData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase Visual.PT_POLYSEGMENTS_CONTIGUOUS:\n\t\t\t\t{\n\t\t\t\t\tnumSegments = visual.getNumSegments();\n\t\t\t\t\tif (numSegments > 0) {\n\t\t\t\t\t\tgl.drawArrays(gl.LINE_STRIP, 0, numSegments + 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase Visual.PT_POLYSEGMENTS_DISJOINT:\n\t\t\t\t{\n\t\t\t\t\tnumSegments = visual.getNumSegments();\n\t\t\t\t\tif (numSegments > 0) {\n\t\t\t\t\t\tgl.drawArrays(gl.LINES, 0, 2 * numSegments);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase Visual.PT_POLYPOINT:\n\t\t\t\t{\n\t\t\t\t\tlet numPoints = visual.numPoints;\n\t\t\t\t\tif (numPoints > 0) {\n\t\t\t\t\t\tgl.drawArrays(gl.POINTS, 0, numPoints);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tconsole.assert(false, 'Invalid type', type);\n\t\t}\n\t}\n\n\t/**\n\t * draw text\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {string} color\n\t * @param {string} message\n\t */\n\tdrawText(x, y, color, message) {\n\t\t// let gl = this.gl;\n\t\t// let textContext = this.textContext;\n\t\t// const h = 14;\n\t\t// // let w = textContext.measureText(message);\n\t\t// textContext.clearRect(0, 0, textContext.canvas.width, textContext.canvas.height);\n\t\t// textContext.textBaseline = 'top';\n\t\t// textContext.font = 'lighter 28px Menlo';\n\t\t// textContext.fillStyle = color;\n\n\t\t// textContext.fillText(message, x, y);\n\t}\n\n\tpreDraw() { return true; }\n\tpostDraw() { this.gl.flush(); }\n\n\t/**\n\t * 混合状态设置\n\t * @param {AlphaState} alphaState \n\t */\n\tsetAlphaState(alphaState) {\n\t\tif (!this.overrideAlphaState) {\n\t\t\tthis.alphaState = alphaState;\n\t\t}\n\t\telse {\n\t\t\tthis.alphaState = this.overrideAlphaState;\n\t\t}\n\n\t\tlet gl = this.gl;\n\t\tlet as = this.alphaState;\n\t\tlet CRS = this.data.currentRS;\n\n\t\tif (as.blendEnabled) {\n\t\t\tif (!CRS.alphaBlendEnabled) {\n\t\t\t\tCRS.alphaBlendEnabled = true;\n\t\t\t\tgl.enable(gl.BLEND);\n\t\t\t}\n\t\t\tlet srcBlend = webgl.AlphaBlend[as.srcBlend];\n\t\t\tlet dstBlend = webgl.AlphaBlend[as.dstBlend];\n\t\t\tif (srcBlend != CRS.alphaSrcBlend || dstBlend != CRS.alphaDstBlend) {\n\t\t\t\tCRS.alphaSrcBlend = srcBlend;\n\t\t\t\tCRS.alphaDstBlend = dstBlend;\n\t\t\t\tgl.blendFunc(srcBlend, dstBlend);\n\t\t\t}\n\n\t\t\tif (as.constantColor !== CRS.blendColor) {\n\t\t\t\tCRS.blendColor = as.constantColor;\n\t\t\t\tgl.blendColor(CRS.blendColor[0], CRS.blendColor[1], CRS.blendColor[2], CRS.blendColor[3]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (CRS.alphaBlendEnabled) {\n\t\t\t\tCRS.alphaBlendEnabled = false;\n\t\t\t\tgl.disable(gl.BLEND);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 剔除状态\n\t * @param cullState {CullState}\n\t */\n\tsetCullState(cullState) {\n\t\tlet cs;\n\t\tlet gl = this.gl;\n\t\tif (!this.overrideCullState) {\n\t\t\tcs = cullState;\n\t\t}\n\t\telse {\n\t\t\tcs = this.overrideCullState;\n\t\t}\n\t\tthis.cullState = cs;\n\t\tlet CRS = this.data.currentRS;\n\n\t\tif (cs.enabled) {\n\t\t\tif (!CRS.cullEnabled) {\n\t\t\t\tCRS.cullEnabled = true;\n\t\t\t\tgl.enable(gl.CULL_FACE);\n\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t}\n\t\t\tlet order = cs.CCWOrder;\n\t\t\tif (this.reverseCullOrder) {\n\t\t\t\torder = !order;\n\t\t\t}\n\t\t\tif (order !== CRS.CCWOrder) {\n\t\t\t\tCRS.CCWOrder = order;\n\t\t\t\tgl.cullFace(CRS.CCWOrder ? gl.BACK : gl.FRONT);\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tif (CRS.cullEnabled) {\n\t\t\t\tCRS.cullEnabled = false;\n\t\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * 设置深度测试状态\n\t * @param {DepthState} depthState\n\t */\n\tsetDepthState(depthState) {\n\t\tlet ds = (!this.overrideDepthState) ? depthState : this.overrideDepthState;\n\t\tlet gl = this.gl;\n\n\t\tthis.depthState = ds;\n\t\tlet CRS = this.data.currentRS;\n\n\t\tif (ds.enabled) {\n\t\t\tif (!CRS.depthEnabled) {\n\t\t\t\tCRS.depthEnabled = true;\n\t\t\t\tgl.enable(gl.DEPTH_TEST);\n\t\t\t}\n\n\t\t\tlet compare = webgl.DepthCompare[ds.compare];\n\t\t\tif (compare != CRS.depthCompareFunction) {\n\t\t\t\tCRS.depthCompareFunction = compare;\n\t\t\t\tgl.depthFunc(compare);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (CRS.depthEnabled) {\n\t\t\t\tCRS.depthEnabled = false;\n\t\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\t}\n\t\t}\n\n\t\tif (ds.writable) {\n\t\t\tif (!CRS.depthWriteEnabled) {\n\t\t\t\tCRS.depthWriteEnabled = true;\n\t\t\t\tgl.depthMask(true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (CRS.depthWriteEnabled) {\n\t\t\t\tCRS.depthWriteEnabled = false;\n\t\t\t\tgl.depthMask(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {OffsetState} offsetState\n\t */\n\tsetOffsetState(offsetState) {\n\t\tlet os;\n\t\tlet gl = this.gl;\n\t\tlet CRS = this.data.currentRS;\n\t\tif (!this.overrideOffsetState) {\n\t\t\tos = offsetState;\n\t\t}\n\t\telse {\n\t\t\tos = this.overrideOffsetState;\n\t\t}\n\n\t\tif (os.fillEnabled) {\n\t\t\tif (!CRS.fillEnabled) {\n\t\t\t\tCRS.fillEnabled = true;\n\t\t\t\tgl.enable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (CRS.fillEnabled) {\n\t\t\t\tCRS.fillEnabled = false;\n\t\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tif (os.scale != CRS.offsetScale || os.bias != CRS.offsetBias) {\n\t\t\tCRS.offsetScale = os.scale;\n\t\t\tCRS.offsetBias = os.bias;\n\t\t\tgl.polygonOffset(os.scale, os.bias);\n\t\t}\n\t}\n\n\t/**\n\t * 设置模板测试状态\n\t * @param {StencilState} stencilState\n\t */\n\tsetStencilState(stencilState) {\n\t\tlet gl = this.gl;\n\t\tlet ss;\n\t\tif (!this.overrideStencilState) {\n\t\t\tss = stencilState;\n\t\t}\n\t\telse {\n\t\t\tss = this.overrideStencilState;\n\t\t}\n\t\tthis.stencilState = ss;\n\t\tlet CRS = this.data.currentRS;\n\t\tif (ss.enabled) {\n\t\t\tif (!CRS.stencilEnabled) {\n\t\t\t\tCRS.stencilEnabled = true;\n\t\t\t\tgl.enable(gl.STENCIL_TEST);\n\t\t\t}\n\n\t\t\tlet compare = webgl.StencilCompare[ss.compare];\n\t\t\tif (compare != CRS.stencilCompareFunction || ss.reference != CRS.stencilReference || ss.mask != CRS.stencilMask) {\n\t\t\t\tCRS.stencilCompareFunction = compare;\n\t\t\t\tCRS.stencilReference = ss.reference;\n\t\t\t\tCRS.stencilMask = ss.mask;\n\t\t\t\tgl.stencilFunc(compare, ss.reference, ss.mask);\n\t\t\t}\n\n\t\t\tif (ss.writeMask != CRS.stencilWriteMask) {\n\t\t\t\tCRS.stencilWriteMask = ss.writeMask;\n\t\t\t\tgl.stencilMask(ss.writeMask);\n\t\t\t}\n\n\t\t\tlet onFail = webgl.StencilOperation[ss.onFail];\n\t\t\tlet onZFail = webgl.StencilOperation[ss.onZFail];\n\t\t\tlet onZPass = webgl.StencilOperation[ss.onZPass];\n\n\t\t\tif (onFail != CRS.stencilOnFail || onZFail != CRS.stencilOnZFail || onZPass != CRS.stencilOnZPass) {\n\t\t\t\tCRS.stencilOnFail = onFail;\n\t\t\t\tCRS.stencilOnZFail = onZFail;\n\t\t\t\tCRS.stencilOnZPass = onZPass;\n\t\t\t\tgl.stencilOp(onFail, onZFail, onZPass);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (CRS.stencilEnabled) {\n\t\t\t\tCRS.stencilEnabled = false;\n\t\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewport(x, y, width, height) {\n\t\tthis.gl.viewport(x, y, width, height);\n\t}\n\tsetDepthRange(min, max) {\n\t\tthis.gl.depthRange(min, max);\n\t}\n\tresize(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tconst gl = this.gl;\n\t\tconst param = gl.getParameter(gl.VIEWPORT);\n\t\tgl.viewport(param[0], param[1], width, height);\n\t}\n\n\tclearColorBuffer() {\n\t\tlet c = this.clearColor;\n\t\tlet gl = this.gl;\n\t\tgl.clearColor(c[0], c[1], c[2], c[3]);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t}\n\tclearDepthBuffer() {\n\t\tconst gl = this.gl;\n\t\tgl.clearDepth(this.clearDepth);\n\t\tgl.clear(gl.DEPTH_BUFFER_BIT);\n\t}\n\tclearStencilBuffer() {\n\t\tlet gl = this.gl;\n\t\tgl.clearStencil(this.clearStencil);\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\n\t}\n\n\tclearColorBuffer(x, y, width, height) {\n\t\tconst gl = this.gl;\n\t\tconst cc = this.clearColor;\n\t\tgl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.scissor(x, y, width, height);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t}\n\t/**\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tclearDepthBuffer(x, y, width, height) {\n\t\tconst gl = this.gl;\n\t\tgl.clearDepth(this.clearDepth);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.scissor(x, y, width, height);\n\t\tgl.clear(gl.DEPTH_BUFFER_BIT);\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t}\n\t/**\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tclearStencilBuffer(x, y, width, height) {\n\t\tconst gl = this.gl;\n\t\tgl.clearStencil(this.clearStencil);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.scissor(x, y, width, height);\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT);\n\t\tgl.disable(gl.SCISSOR_TEST);\n\t}\n\t/**\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tclearBuffers(x, y, width, height) {\n\t\tlet gl = this.gl;\n\t\tif (x) {\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.scissor(x, y, width, height);\n\t\t}\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n\t\tif (x) {\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t}\n\t}\n\n\t/**\n\t * 设置颜色掩码\n\t * @param {boolean} allowRed\n\t * @param {boolean} allowGreen\n\t * @param {boolean} allowBlue\n\t * @param {boolean} allowAlpha\n\t */\n\tsetColorMask(allowRed = false, allowGreen = false, allowBlue = false, allowAlpha = false) {\n\t\tthis.allowRed = allowRed;\n\t\tthis.allowGreen = allowGreen;\n\t\tthis.allowBlue = allowBlue;\n\t\tthis.allowAlpha = allowAlpha;\n\t\tthis.gl.colorMask(allowRed, allowGreen, allowBlue, allowBlue);\n\t}\n}\n\nexport { Renderer };\n","import { Texture } from './Texture';\nimport { _Math } from '../../math/index';\nimport { Renderer } from '../renderer/Renderer';\n\nclass Texture2D extends Texture {\n    /**\n     * @param {number} format - 纹理格式， 参考Texture.TT_XXX\n     * @param {number} width\n     * @param {number} height\n     * @param {boolean} mipmaps - 是否生成mipmaps\n     */\n    constructor(format, width, height, mipmaps = false) {\n        console.assert(width >= 0, 'width must be positive');\n        console.assert(height >= 0, 'height must be positive');\n        let canMipMaps = false;\n        if (mipmaps) {\n            let w = _Math.log2OfPowerOfTwo(width);\n            let h = _Math.log2OfPowerOfTwo(height);\n            canMipMaps = (Math.pow(2, w) === width && Math.pow(2, h) === height);\n            console.assert(canMipMaps, 'width or height is not pow of 2, can\\'t generate Mipmaps');\n        }\n        super(format, Texture.TT_2D);\n        this.width = width;\n        this.height = height;\n        this.hasMipmaps = canMipMaps;\n        this._update();\n    }\n\n    set enableMipMaps(val) {\n        if (val) {\n            let w = _Math.log2OfPowerOfTwo(this.width);\n            let h = _Math.log2OfPowerOfTwo(this.height);\n            let canMipMaps = (Math.pow(2, w) === this.width && Math.pow(2, h) === this.height);\n            console.assert(canMipMaps, 'width or height is not pow of 2, can\\'t generate Mipmaps');\n            this.hasMipmaps = canMipMaps;\n            return;\n        }\n        this.hasMipmaps = false;\n    }\n\n    _update() {\n        this.computeNumLevelBytes();\n        this.data = new Uint8Array(this.numTotalBytes);\n    }\n\n    getData() { return this.data; }\n\n    upload() { \n        console.time(`${this.constructor.name} - ${this.name}`);\n        Renderer.updateAll(this);\n        console.timeEnd(`${this.constructor.name} - ${this.name}`);        \n    }\n\n    /**\n     * @param {ArrayBuffer} buffer\n     * @returns {Promise}\n     */\n    static unpack(buffer) {\n        let texture = new Texture2D(Texture.TT_NONE,0,0);\n        let err = Texture.unpackTo(buffer, texture);\n        if (err !== null) {\n            return Promise.reject(err);\n        }\n        return Promise.resolve(texture);\n    }\n\n    computeNumLevelBytes() {\n        this.numTotalBytes = 0;\n        const format = this.format;\n        let dim0 = this.width,\n            dim1 = this.height,\n            max0, max1;\n        switch (format) {\n            case Texture.TT_DXT1:\n                max0 = Math.max(dim0 / 4, 1);\n                max1 = Math.max(dim1 / 4, 1);\n                this.numTotalBytes = 8 * max0 * max1;\n                break;\n            case Texture.TT_DXT3:\n            case Texture.TT_DXT5:\n                max0 = Math.max(dim0 / 4, 1);\n                max1 = Math.max(dim1 / 4, 1);\n                this.numTotalBytes = 16 * max0 * max1;\n                break;\n            default:\n                this.numTotalBytes = Texture.PIXEL_SIZE[format] * dim0 * dim1;\n        }\n    }\n}\n\nexport { Texture2D };","import { VertexFormat } from './VertexFormat';\n\nexport let VBAAttr = {\n    offset: -1, // 偏移\n    eType: 0,  // 元素类型构造\n    wFn: 0,  // DataView 写函数名\n    rFn: 0,  // DataView 读函数名\n    eNum: 0,  // 元素类型数量\n    cSize: 0   // 单元大小, 字节, 缓存值\n};\n\n\n/**\n * VertexBufferAccessor 顶点缓冲访问器\n */\nexport class VertexBufferAccessor {\n\n    /**\n     * @param {VertexFormat} format\n     * @param {VertexBuffer} buffer\n     * @param {Boolean} endian 字节序, 默认为小端\n     */\n    constructor(format, buffer, endian = true) {\n        /**\n         * @type {VertexFormat}\n         */\n        this.format = format;\n        /**\n         * @type {VertexBuffer}\n         */\n        this.vertexBuffer = buffer;\n\n        this.stride = format.stride;\n        this.endian = endian;\n\n        /**\n         * @type {ArrayBuffer}\n         */\n        this.data = buffer.getData();\n        this.rw = new DataView(this.data.buffer);\n\n        var i;\n        const MAX_TCOORD_UNITS = VertexFormat.MAX_TCOORD_UNITS;\n        const MAX_COLOR_UNITS = VertexFormat.MAX_COLOR_UNITS;\n\n        this.position = Object.create(VBAAttr);\n        this.normal = Object.create(VBAAttr);\n        this.tangent = Object.create(VBAAttr);\n        this.binormal = Object.create(VBAAttr);\n        this.pointSize = Object.create(VBAAttr);\n        this.tCoord = new Array(MAX_TCOORD_UNITS);\n        this.color = new Array(MAX_COLOR_UNITS);\n        this.blendIndices = Object.create(VBAAttr);\n        this.blendWeight = Object.create(VBAAttr);\n\n\n        for (i = 0; i < MAX_TCOORD_UNITS; ++i) {\n            this.tCoord[i] = Object.create(VBAAttr);\n        }\n        for (i = 0; i < MAX_COLOR_UNITS; ++i) {\n            this.color[i] = Object.create(VBAAttr);\n        }\n\n        this._initialize();\n    }\n\n    /**\n     * @private\n     */\n    _initialize() {\n        let fmt = this.format;\n        let unit, units;\n\n        // 顶点坐标\n        fmt.fillVBAttr(VertexFormat.AU_POSITION, this.position);\n        // 法线\n        fmt.fillVBAttr(VertexFormat.AU_NORMAL, this.normal);\n        // 切线\n        fmt.fillVBAttr(VertexFormat.AU_TANGENT, this.tangent);\n        // 双切线\n        fmt.fillVBAttr(VertexFormat.AU_BINORMAL, this.binormal);\n        // 点大小\n        fmt.fillVBAttr(VertexFormat.AU_PSIZE, this.pointSize);\n        // 纹理坐标\n        units = VertexFormat.MAX_TCOORD_UNITS;\n        for (unit = 0; unit < units; ++unit) {\n            fmt.fillVBAttr(VertexFormat.AU_TEXCOORD, this.tCoord[unit], unit);\n        }\n\n        // 颜色\n        units = VertexFormat.MAX_COLOR_UNITS;\n        for (unit = 0; unit < units; ++unit) {\n            fmt.fillVBAttr(VertexFormat.AU_COLOR, this.color[unit], unit);\n        }\n\n        fmt.fillVBAttr(VertexFormat.AU_BLENDINDICES, this.blendIndices);\n        fmt.fillVBAttr(VertexFormat.AU_BLENDWEIGHT, this.blendWeight);\n    }\n\n    /**\n     * @param {Visual} visual\n     * @returns {VertexBufferAccessor}\n     */\n    static fromVisual(visual) {\n        return new VertexBufferAccessor(visual.format, visual.vertexBuffer);\n    }\n\n    /**\n     * 获取顶点数量\n     * @returns {number}\n     */\n    get numVertices() {\n        return this.vertexBuffer.numElements;\n    }\n\n    getData() {\n        return this.data;\n    }\n\n    /**\n     * @param {number} index\n     * @return {ArrayBufferView}\n     */\n    getPosition(index) {\n        let t = this.position;\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    /**\n     * @param {number} index \n     * @param {ArrayBuffer} dataArr \n     */\n    setPosition(index, dataArr) {\n        let t = this.position;\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasPosition() {\n        return this.position.offset !== -1;\n    }\n\n    ////////////////// 法线 ///////////////////////////////\n    getNormal(index) {\n        let t = this.normal;\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    setNormal(index, dataArr) {\n        let t = this.normal;\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasNormal() {\n        return this.normal.offset !== -1;\n    }\n\n    //////////////////////////////////////////////////////\n    getTangent(index) {\n        let t = this.tangent;\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    setTangent(index, dataArr) {\n        let t = this.tangent;\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasTangent() {\n        return this.tangent.offset !== -1;\n    }\n\n    //////////////////////////////////////////////////////\n    getBinormal(index) {\n        let t = this.binormal;\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    setBinormal(index, dataArr) {\n        let t = this.binormal;\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasBinormal() {\n        return this.binormal.offset !== -1;\n    }\n\n    //////////////////////////////////////////////////////\n    getPointSize(index) {\n        let t = this.pointSize;\n        let startOffset = t.offset + index * this.stride;\n        return this.rw[t.rFn](startOffset, this.endian);\n    }\n\n    setPointSize(index, val) {\n        let t = this.pointSize;\n        let startOffset = t.offset + index * this.stride;\n        this.rw[t.wFn](startOffset, val, this.endian);\n    }\n\n    hasPointSize() {\n        return this.pointSize.offset !== -1;\n    }\n\n    ///////////////////////////////////////////////////////////\n    getTCoord(unit, index) {\n        let t = this.tCoord[unit];\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    /**\n     * @param {number} unit \n     * @param {number} index \n     * @param {Array<number>|DataView} dataArr \n     */\n    setTCoord(unit, index, dataArr) {\n        let t = this.tCoord[unit];\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasTCoord(unit) {\n        return this.tCoord[unit].offset !== -1;\n    }\n\n    ///////////////////////////////////////////////////////////\n    getColor(unit, index) {\n        let t = this.color[unit];\n        let startOffset = t.offset + index * this.stride;\n        return new t.eType(this.data.buffer.slice(startOffset, startOffset + t.eNum * t.eType.BYTES_PER_ELEMENT));\n    }\n\n    setColor(unit, index, dataArr) {\n        let t = this.color[unit];\n        let startOffset = t.offset + index * this.stride;\n\n        for (let i = 0, l = t.eNum; i < l; ++i) {\n            this.rw[t.wFn](startOffset + i * t.eType.BYTES_PER_ELEMENT, dataArr[i], this.endian);\n        }\n    }\n\n    hasColor(unit) {\n        return this.color[unit].offset !== -1;\n    }\n\n    //////////////////////////////////////////////////////\n    getBlendIndices(index) {\n        let t = this.blendIndices;\n        let startOffset = t.offset + index * this.stride;\n        return this.rw[t.rFn](startOffset, this.endian);\n    }\n\n    setBlendIndices(index, val) {\n        let t = this.blendIndices;\n        let startOffset = t.offset + index * this.stride;\n        this.rw[t.wFn](startOffset, val, this.endian);\n    }\n\n    hasBlendIndices() {\n        return this.blendIndices.offset !== -1;\n    }\n\n    //////////////////////////////////////////////////////\n    getBlendWeight(index) {\n        let t = this.blendWeight;\n        let startOffset = t.offset + index * this.stride;\n        return this.rw[t.rFn](startOffset, this.endian);\n    }\n\n    setBlendWeight(index, val) {\n        let t = this.blendWeight;\n        let startOffset = t.offset + index * this.stride;\n        this.rw[t.wFn](startOffset, val, this.endian);\n    }\n\n    hasBlendWeight() {\n        return this.blendWeight.offset !== -1;\n    }\n}\n","import { D3Object } from '../../core/D3Object';\nimport { _Math, Point, Vector, Matrix } from '../../math/index';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass Camera extends D3Object {\n\n    /**\n     * @param {boolean} isPerspective - 是否是透视相机, true-透视, false-正交\n     */\n    constructor(isPerspective = false) {\n        super();\n\n        this.isPerspective = isPerspective;\n\n        this.position = Point.ORIGIN;\n        this.direction = Vector.UNIT_Z.negative(); //-z\n        this.up = Vector.UNIT_Y;\n        this.right = Vector.UNIT_X;\n\n        // 摄像机视图矩阵\n        this.viewMatrix = Matrix.IDENTITY;\n\n        // 视截体存储结构, 存储顺序 NEAR-FAR-BOTTOM-TOP-LEFT-RIGHT\n        this.frustum = new Float32Array(6);\n\n        // 摄像机投影矩阵\n        this.projectionMatrix = Matrix.IDENTITY;\n\n        // 投影视图矩阵， 即投影矩阵和视图矩阵的乘积\n        // 当视图前置/后置矩阵不为空时会包含它们\n        this.projectionViewMatrix = Matrix.IDENTITY;\n\n        // 视图前置矩阵，位置在模型矩阵之后，但在视图矩阵之前\n        // 用于对物体的变换， 例如反射等，默认为单位矩阵\n        this.preViewMatrix = Matrix.IDENTITY;\n        this.preViewIsIdentity = true;\n\n        // 视图后置矩阵，用于屏幕空间转换，例如反射渲染后的图像等，默认为单位矩阵\n        this.postProjectionMatrix = Matrix.IDENTITY;\n        this.postProjectionIsIdentity = true;\n\n        // 初始化\n        this.setFrame(this.position, this.direction, this.up, this.right);\n        this.setPerspective(90, 1, 1, 1000);\n    }\n\n\n    /**\n     * 所有参数均为世界坐标系\n     *\n     * @param eye {Point} 相机位置\n     * @param center {Point} 场景中心\n     * @param up {Vector} 相机上方向\n     */\n    lookAt(eye, center, up) {\n\n        if (eye.equals(center)) {\n            this.position.copy(Point.ORIGIN);\n            this.up.copy(up);\n            this.direction.copy(Vector.UNIT_Z.negative());\n            this.right.copy(Vector.UNIT_X);\n            return;\n        }\n\n        this.position.copy(eye);\n\n        // 这里可直接计算正-Z方向, 上面已经做过判断\n        let z = eye.subAsVector(center);\n        z.normalize();\n\n        // 计算右方向\n        let x = up.cross(z);\n        x.normalize();\n\n        // 计算右方向\n        let y = z.cross(x);\n        y.normalize();\n\n        this.direction.copy(z);\n        this.up.copy(y);\n        this.right.copy(x);\n\n        this.onFrameChange();\n    }\n\n    /**\n     * 摄像机的向量使用世界坐标系.\n     *\n     * @param position  {Point } 位置 default (0, 0,  0; 1)\n     * @param direction {Vector} 观察方向 default (0, 0, -1; 0)\n     * @param up        {Vector} 上方向 default default (0, 1, 0; 0)\n     * @returns {void}\n     */\n    setFrame(position, direction, up) {\n        this.position.copy(position);\n        let right = direction.cross(up);\n        this.setAxes(direction, up, right);\n    }\n\n    /**\n     * 设置摄像机位置\n     * @param position {Point}\n     * @returns {void}\n     */\n    setPosition(position) {\n        this.position.copy(position);\n        this.onFrameChange();\n    }\n\n    /**\n     * 设置摄像机坐标系的3个轴\n     *\n     * @param direction {Vector} 观察方向\n     * @param up        {Vector} 上方向\n     * @param right     {Vector} 右方向\n     * @returns {void}\n     */\n    setAxes(direction, up, right) {\n        this.direction.copy(direction);\n        this.up.copy(up);\n        this.right.copy(right);\n\n        // 判断3个轴是否正交, 否则需要校正\n        let det = direction.dot(up.cross(right));\n        if (_Math.abs(1 - det) > 0.00001) {\n            Vector.orthoNormalize(this.direction, this.up, this.right);\n        }\n        this.onFrameChange();\n    }\n\n    /**\n     * 设置透视矩阵参数\n     * @param fov {float} 垂直视角, 单位: 度\n     * @param aspect {float} 高宽比\n     * @param near {float} 近平面\n     * @param far {float} 远平面\n     */\n    setPerspective(fov, aspect, near, far) {\n        let top = near * _Math.tan(fov * _Math.PI / 360);\n        let right = top * aspect;\n\n        this.frustum[Camera.VF_TOP] = top;\n        this.frustum[Camera.VF_BOTTOM] = -top;\n        this.frustum[Camera.VF_RIGHT] = right;\n        this.frustum[Camera.VF_LEFT] = -right;\n        this.frustum[Camera.VF_NEAR] = near;\n        this.frustum[Camera.VF_FAR] = far;\n\n        this.onFrustumChange();\n    }\n\n    /**\n     * 返回透视图的4个参数\n     * returns {Float32Array} [fov, aspect, near, far]\n     */\n    getPerspective() {\n        let ret = new Float32Array(4);\n\n        if (\n            this.frustum[Camera.VF_LEFT] == -this.frustum[Camera.VF_RIGHT] &&\n            this.frustum[Camera.VF_BOTTOM] == -this.frustum[Camera.VF_TOP]\n        ) {\n            let tmp = this.frustum[Camera.VF_TOP] / this.frustum[Camera.VF_NEAR];\n            ret[0] = _Math.atan(tmp) * 360 / _Math.PI;\n            ret[1] = this.frustum[Camera.VF_RIGHT] / this.frustum[Camera.VF_TOP];\n            ret[2] = this.frustum[Camera.VF_NEAR];\n            ret[3] = this.frustum[Camera.VF_FAR];\n        }\n        return ret;\n    }\n\n    /**\n     * 通过6个面的参数设置视截体\n     * @param near   {number} 近平面\n     * @param far    {number} 远平面\n     * @param bottom {number} 底面\n     * @param top    {number} 顶面\n     * @param left   {number} 左面\n     * @param right  {number} 右面\n     * @returns {void}\n     */\n    setFrustum(near, far, bottom, top, left, right) {\n        this.frustum[Camera.VF_NEAR] = near;\n        this.frustum[Camera.VF_FAR] = far;\n        this.frustum[Camera.VF_BOTTOM] = bottom;\n        this.frustum[Camera.VF_TOP] = top;\n        this.frustum[Camera.VF_LEFT] = left;\n        this.frustum[Camera.VF_RIGHT] = right;\n\n        this.onFrustumChange();\n    }\n\n    /**\n     * p00 {Point}\n     * p10 {Point}\n     * p11 {Point}\n     * p01 {Point}\n     * nearExtrude {number}\n     * farExtrude {number}\n     *\n     */\n    setProjectionMatrix(p00, p10, p11, p01,\n        nearExtrude, farExtrude) {\n\n        let // 计算近平面\n            q000 = p00.scalar(nearExtrude),\n            q100 = p01.scalar(nearExtrude),\n            q110 = p11.scalar(nearExtrude),\n            q010 = p01.scalar(nearExtrude),\n\n            // 计算远平面\n            q001 = p00.scalar(farExtrude),\n            q101 = p10.scalar(farExtrude),\n            q111 = p11.scalar(farExtrude),\n            q011 = p01.scalar(farExtrude);\n\n        // Compute the representation of q111.\n        let u0 = q100.sub(q000),\n            u1 = q010.sub(q000),\n            u2 = q001.sub(q000);\n\n        let m = Matrix.IPMake(u0, u1, u2, q000);\n        let invM = m.inverse(0.001);\n        let a = invM.mulPoint(q111);\n\n        // Compute the coeffients in the fractional linear transformation.\n        //   y[i] = n[i]*x[i]/(d[0]*x[0] + d[1]*x[1] + d[2]*x[2] + d[3])\n        let n0 = 2 * a.x;\n        let n1 = 2 * a.y;\n        let n2 = 2 * a.z;\n        let d0 = +a.x - a.y - a.z + 1;\n        let d1 = -a.x + a.y - a.z + 1;\n        let d2 = -a.x - a.y + a.z + 1;\n        let d3 = +a.x + a.y + a.z - 1;\n\n        // 从规范正方体[-1,1]^2 x [0,1]计算透视投影\n        let n20 = n2 / n0,\n            n21 = n2 / n1,\n            n20d0 = n20 * d0,\n            n21d1 = n21 * d1,\n            d32 = 2 * d3,\n            project = new Matrix(\n                n20 * d32 + n20d0, n21d1, d2, -n2,\n                n20d0, n21 * d32 + n21d1, d2, -n2,\n                n20d0, n21d1, d2, -n2,\n                -n20d0, -n21d1, -d2, n2\n            );\n\n        this.postProjectionMatrix.copy(project.mul(invM));\n        this.postProjectionIsIdentity = Matrix.isIdentity(this.postProjectionMatrix);\n        this.updatePVMatrix();\n    }\n\n    /**\n     * 设置视图前置矩阵\n     *\n     * @param mat {Matrix}\n     * @returns {void}\n     */\n    setPreViewMatrix(mat) {\n        this.preViewMatrix.copy(mat);\n        this.preViewIsIdentity = Matrix.isIdentity(mat);\n        this.updatePVMatrix();\n    }\n\n    /**\n     * 设置视图后置矩阵\n     *\n     * @param mat {Matrix}\n     * @returns {void}\n     */\n    setPostProjectionMatrix(mat) {\n        this.postProjectionMatrix.copy(mat);\n        this.postProjectionIsIdentity = Matrix.isIdentity(mat);\n        this.updatePVMatrix();\n    }\n\n    /**\n     * 在归一化后的显示空间[-1,1]x[-1,1]计算物体轴对齐包围盒\n     *\n     * @param numVertices  {number}       顶点数量\n     * @param vertices     {Float32Array} 顶点数组\n     * @param stride       {number}       步幅\n     * @param worldMatrix  {Matrix}   物体变换矩阵\n     * @returns {object}\n     */\n    computeBoundingAABB(numVertices, vertices, stride, worldMatrix) {\n        // 计算当前物体，世界视图投影矩阵.\n        let vpMatrix = this.projectionMatrix.mul(this.viewMatrix);\n        if (!this.postProjectionIsIdentity) {\n            vpMatrix.copy(this.postProjectionMatrix.mul(vpMatrix));\n        }\n        let wvpMatrix = vpMatrix.mul(worldMatrix);\n        let xmin, xmax, ymin, ymax;\n        // 计算规范化后的显示坐标包围盒\n        xmin = ymin = Infinity;\n        xmax = ymax = -Infinity;\n\n        for (let i = 0; i < numVertices; ++i) {\n            let pos = new Point(vertices[i + stride], vertices[i + stride + 1], vertices[i + stride + 2]);\n            let hpos = wvpMatrix.mulPoint(pos);\n            let invW = 1 / hpos.w;\n            let xNDC = hpos.x * invW;\n            let yNDC = hpos.y * invW;\n            if (xNDC < xmin) {\n                xmin = xNDC;\n            }\n            if (xNDC > xmax) {\n                xmax = xNDC;\n            }\n            if (yNDC < ymin) {\n                ymin = yNDC;\n            }\n            if (yNDC > ymax) {\n                ymax = yNDC;\n            }\n        }\n        return { xmin: xmin, xmax: xmax, ymin: ymin, ymax: ymax };\n    }\n\n    /**\n     * 计算变更后的视图矩阵\n     * @returns {void}\n     */\n    onFrameChange() {\n        let nPos = this.position;\n        let x = this.right, y = this.up, z = this.direction;\n\n        this.viewMatrix[0] = x[0];\n        this.viewMatrix[1] = y[0];\n        this.viewMatrix[2] = z[0];\n        this.viewMatrix[3] = 0;\n\n        this.viewMatrix[4] = x[1];\n        this.viewMatrix[5] = y[1];\n        this.viewMatrix[6] = z[1];\n        this.viewMatrix[7] = 0;\n\n        this.viewMatrix[8] = x[2];\n        this.viewMatrix[9] = y[2];\n        this.viewMatrix[10] = z[2];\n        this.viewMatrix[11] = 0;\n\n        this.viewMatrix[12] = -nPos.dot(x);\n        this.viewMatrix[13] = -nPos.dot(y);\n        this.viewMatrix[14] = -nPos.dot(z);\n        this.viewMatrix[15] = 1;\n\n        this.updatePVMatrix();\n    }\n\n    /**\n     * 视截体变化后计算投影矩阵\n     * @returns {void}\n     */\n    onFrustumChange() {\n        let f = this.frustum;\n        let near = f[Camera.VF_NEAR],\n            far = f[Camera.VF_FAR],\n            bottom = f[Camera.VF_BOTTOM],\n            top = f[Camera.VF_TOP],\n            left = f[Camera.VF_LEFT],\n            right = f[Camera.VF_RIGHT],\n\n            rl = right - left,\n            tb = top - bottom,\n            fn = far - near;\n\n        this.projectionMatrix.zero();\n\n        if (this.isPerspective) {\n            let near2 = 2 * near;\n            this.projectionMatrix[0] = near2 / rl;\n            this.projectionMatrix[5] = near2 / tb;\n            this.projectionMatrix[8] = (right + left) / rl;\n            this.projectionMatrix[9] = (top + bottom) / tb;\n            this.projectionMatrix[10] = -(far + near) / fn;\n            this.projectionMatrix[11] = -1;\n            this.projectionMatrix[14] = -(far * near2) / fn;\n        }\n        else {\n            this.projectionMatrix[0] = 2 / rl;\n            this.projectionMatrix[5] = 2 / tb;\n            this.projectionMatrix[10] = -2 / fn;\n            this.projectionMatrix[12] = -(left + right) / rl;\n            this.projectionMatrix[13] = -(top + bottom) / tb;\n            this.projectionMatrix[14] = -(far + near) / fn;\n            this.projectionMatrix[15] = 1;\n        }\n\n        this.updatePVMatrix();\n    }\n\n    /**\n     * 计算postproj-proj-view-preview的乘积\n     */\n    updatePVMatrix() {\n        this.projectionViewMatrix.copy(this.projectionMatrix.mul(this.viewMatrix));\n        if (!this.postProjectionIsIdentity) {\n            this.projectionViewMatrix.copy(this.postProjectionMatrix.mul(this.projectionViewMatrix));\n        }\n        if (!this.preViewIsIdentity) {\n            this.projectionViewMatrix.copy(this.projectionViewMatrix.mul(this.preViewMatrix));\n        }\n    }\n\n    debug() {\n        let pos = this.position;\n        let dir = this.direction;\n        console.log(`pos:[${pos.x.toFixed(4)}, ${pos.y.toFixed(4)}, ${pos.z.toFixed(4)}]\ndir:[${dir.x.toFixed(4)}, ${dir.y.toFixed(4)}, ${dir.z.toFixed(4)}]`);\n    }\n};\n\nDECLARE_ENUM(Camera, {\n    VF_NEAR: 0,\n    VF_FAR: 1,\n    VF_BOTTOM: 2,\n    VF_TOP: 3,\n    VF_LEFT: 4,\n    VF_RIGHT: 5,\n    VF_QUANTITY: 6\n});\nexport { Camera };\n","import { D3Object } from '../../core/D3Object';\nimport { Point } from '../../math/Point';\nimport { Spatial } from './Spatial';\n\nclass Node extends Spatial {\n    constructor() {\n        super();\n        this.childs = [];\n    }\n\n    /**\n     * 获取子节点数量\n     * @returns {number}\n     */\n    getChildsNumber() {\n        return this.childs.length;\n    }\n\n    /**\n     * 加载子节点.\n     * 如果执行成功，则返回子节点存储的索引i, 0 <= i < getNumChildren()\n     * 数组中第一个空槽将被用来存储子节点. 如果所有的槽都不为空，则添加到数组末尾[js底层可能需要重新分配空间]\n     *\n     * 以下情况会失败,并返回-1\n     * child === null or child.parent !== null\n     *\n     * @param {Spatial} child\n     * @returns {number}\n     */\n    attachChild(child) {\n        if (child === null) {\n            console.assert(false, 'You cannot attach null children to a node.');\n            return -1;\n        }\n        if (child.parent !== null) {\n            console.assert(false, 'The child already has a parent.');\n            return -1;\n        }\n\n        child.parent = this;\n\n        let nodes = this.childs.slice(),\n            max = nodes.length;\n        for (let idx = 0; idx < max; ++idx) {\n            if (nodes[idx] === null) {\n                this.childs[idx] = child;\n                return idx;\n            }\n        }\n        this.childs[max] = child;\n        return max;\n    }\n\n    /**\n     * 从当前节点卸载子节点\n     * 如果child不为null且在数组中， 则返回存储的索引， 否则返回-1\n     * @param {Spatial} child\n     * @returns {number}\n     */\n    detachChild(child) {\n        if (child !== null) {\n            let nodes = this.childs.slice(),\n                max = nodes.length;\n            for (let idx = 0; idx < max; ++idx) {\n                if (nodes[idx] === child) {\n                    this.childs[idx] = null;\n                    child.parent = null;\n                    return idx;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 从当前节点卸载子节点\n     * 如果 0 <= index < getNumChildren(), 则返回存储在index位置的子节点，否则返回null\n     *\n     * @param {number} index\n     * @returns {Spatial|null}\n     */\n    detachChildAt(index) {\n        let child = null;\n        if (index >= 0 && index < this.childs.length) {\n            child = this.childs[index];\n            if (child !== null) {\n                child.parent = null;\n                this.childs[index] = null;\n            }\n        }\n        return child;\n    }\n\n    /**\n     * 在index位置放入child,并返回被替换的元素\n     * @param {number} index\n     * @param {Spatial} child\n     * @returns {Spatial|null}\n     */\n    setChild(index, child) {\n        if (child && child.parent !== null) return null;\n\n        if (index >= 0 && index < this.childs.length) {\n            let prev = this.childs[index];\n            if (prev !== null) {\n                prev.parent = null;\n            }\n            if (child) {\n                child.parent = this;\n            }\n            this.childs[index] = child;\n            return prev;\n        }\n\n        if (child) {\n            child.parent = this;\n        }\n        this.childs.push(child);\n        return null;\n    }\n\n    /**\n     * 通过索引获取子节点\n     * @param {number} index\n     * @returns {Spatial|null}\n     */\n    getChild(index) {\n        let child = null;\n        if (index >= 0 && index < this.childs.length) {\n            child = this.childs[index];\n        }\n        return child;\n    }\n\n    /**\n     * @param {number} applicationTime\n     */\n    updateWorldData(applicationTime) {\n        super.updateWorldData(applicationTime);\n        let nodes = this.childs.slice(),\n            max = nodes.length;\n        for (let idx = 0; idx < max; ++idx) {\n            if (nodes[idx]) {\n                nodes[idx].update(applicationTime, false);\n            }\n        }\n    }\n\n    updateWorldBound() {\n        if (!this.worldBoundIsCurrent) {\n            // Start with an invalid bound.\n            this.worldBound.center = Point.ORIGIN;\n            this.worldBound.radius = 0;\n            let nodes = this.childs.slice(),\n                max = nodes.length;\n            for (let idx = 0; idx < max; ++idx) {\n                if (nodes[idx]) {\n                    this.worldBound.growToContain(nodes[idx].worldBound);\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {Culler} culler\n     * @param {boolean} noCull\n     */\n    getVisibleSet(culler, noCull) {\n        let nodes = this.childs.slice(),\n            max = nodes.length;\n        for (let idx = 0; idx < max; ++idx) {\n            if (nodes[idx]) {\n                nodes[idx].onGetVisibleSet(culler, noCull);\n            }\n        }\n    }\n    /**\n     * @param {InStream} inStream\n     */\n    load(inStream) {\n        super.load(inStream);\n        let numChildren = inStream.readUint32();\n        if (numChildren > 0) {\n            this.childs = inStream.readSizedPointerArray(numChildren);\n        }\n    }\n    /**\n     * @param {InStream} inStream\n     */\n    link(inStream) {\n        super.link(inStream);\n        this.childs.forEach(function (c, i) {\n            this.childs[i] = inStream.resolveLink(c);\n            this.setChild(i, this.childs[i]);\n        }, this);\n    }\n}\n\nD3Object.Register('Node', Node.factory);\n\nexport { Node };","import { Camera } from './Camera';\nimport { DECLARE_ENUM } from '../../util/util';\nimport { Matrix } from '../../math/index';\n\nclass Projector extends Camera {\n\tconstructor(isPerspective = true) {\n\t\tsuper(isPerspective);\n\t}\n}\n\nDECLARE_ENUM(Projector, {\n\tbiasScaleMatrix: [new Matrix(\n\t\t0.5, 0.0, 0.0, 0.5,\n\t\t0.0, -0.5, 0.0, 0.5,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\t0.0, 0.0, 0.0, 1.0\n\t), new Matrix(\n\t\t0.5, 0.0, 0.0, 0.5,\n\t\t0.0, -0.5, 0.0, 0.5,\n\t\t0.0, 0.0, 1.0, 0.0,\n\t\t0.0, 0.0, 0.0, 1.0\n\t)]\n});\n\nexport { Projector };","class VisibleSet {\n    constructor() {\n        this.numVisible = 0;\n        this.visibles = [];\n    }\n\n    getNumVisible() {\n        return this.numVisible;\n    }\n\n    getAllVisible() {\n        return this.visibles;\n    }\n\n    getVisible(index) {\n        console.assert(0 <= index && index < this.numVisible, 'Invalid index to getVisible');\n        return this.visibles[index];\n    }\n\n    insert(visible) {\n        const size = this.visibles.length;\n        if (this.numVisible < size) {\n            this.visibles[this.numVisible] = visible;\n        }\n        else {\n            this.visibles.push(visible);\n        }\n        ++this.numVisible;\n    }\n\n    clear() {\n        this.numVisible = 0;\n    }\n}\n\nexport { VisibleSet };","import { DECLARE_ENUM } from '../../util/util';\nimport { _Math, Vector, Plane } from '../../math/index';\nimport { Camera } from './Camera';\nimport { VisibleSet } from './VisibleSet';\n\nclass Culler {\n\n    /**\n     * construction.  Culling requires a camera model.  If the camera is \n     * not passed to the constructor, you should set it using camera setter\n     *  before calling ComputeVisibleSet.\n     * @param {Camera|null} camera \n     */\n    constructor(camera = null) {\n        // The input camera has information that might be needed during the\n        // culling pass over the scene.\n        this._camera = camera;\n\n        /**\n         * The potentially visible set for a call to getVisibleSet.\n         * @type {VisibleSet}\n         * @private\n         */\n        this._visibleSet = new VisibleSet();\n\n        // The data members _frustum, _plane, and _planeState are\n        // uninitialized.  They are initialized in the getVisibleSet call.\n\n        // The world culling planes corresponding to the view frustum plus any\n        // additional user-defined culling planes.  The member m_uiPlaneState\n        // represents bit flags to store whether or not a plane is active in the\n        // culling system.  A bit of 1 means the plane is active, otherwise the\n        // plane is inactive.  An active plane is compared to bounding volumes,\n        // whereas an inactive plane is not.  This supports an efficient culling\n        // of a hierarchy.  For example, if a node's bounding volume is inside\n        // the left plane of the view frustum, then the left plane is set to\n        // inactive because the children of the node are automatically all inside\n        // the left plane.\n        this._planeQuantity = 6;\n        this._plane = new Array(Culler.MAX_PLANE_QUANTITY);\n        for (let i = 0, l = this._plane.length; i < l; ++i) {\n            this._plane[i] = new Plane(Vector.ZERO, 0);\n        }\n        this._planeState = 0;\n\n        // 传入摄像机的视截体副本\n        // 主要用于在裁剪时供各种子系统修改视截体参数, 而不影响摄像机\n        // 渲染器需要这些内部状态\n        this._frustum = new Array(Camera.VF_QUANTITY);\n    }\n    get camera() {\n        return this._camera;\n    }\n    set camera(camera) {\n        this._camera = camera;\n    }\n\n    set frustum(frustum) {\n        if (!this._camera) {\n            console.assert(false, 'set frustum requires the existence of a camera');\n            return;\n        }\n\n        const VF_NEAR = Camera.VF_NEAR,\n            VF_FAR = Camera.VF_FAR,\n            VF_BOTTOM = Camera.VF_BOTTOM,\n            VF_TOP = Camera.VF_TOP,\n            VF_LEFT = Camera.VF_LEFT,\n            VF_RIGHT = Camera.VF_RIGHT;\n\n        let near, far, bottom, top, left, right;\n\n        // 赋值到当前实例.\n        this._frustum[VF_NEAR] = near = frustum[VF_NEAR];\n        this._frustum[VF_FAR] = far = frustum[VF_FAR];\n        this._frustum[VF_BOTTOM] = bottom = frustum[VF_BOTTOM];\n        this._frustum[VF_TOP] = top = frustum[VF_TOP];\n        this._frustum[VF_LEFT] = left = frustum[VF_LEFT];\n        this._frustum[VF_RIGHT] = right = frustum[VF_RIGHT];\n\n        let near2 = near * near;\n        let bottom2 = bottom * bottom;\n        let top2 = top * top;\n        let left2 = left * left;\n        let right2 = right * right;\n\n        // 获取相机坐标结构\n        let position = this._camera.position;\n        let directionVec = this._camera.direction;\n        let upVec = this._camera.up;\n        let rightVec = this._camera.right;\n        let dirDotEye = position.dot(directionVec);\n\n        // 更新近平面\n        this._plane[VF_NEAR].normal = Vector.ZERO.copy(directionVec);\n        this._plane[VF_NEAR].constant = dirDotEye + near;\n\n        // 更新远平面\n        this._plane[VF_FAR].normal = directionVec.negative();\n        this._plane[VF_FAR].constant = -(dirDotEye + far);\n\n        // 更新下平面\n        let invLength = _Math.invSqrt(near2 + bottom2);\n        let c0 = -bottom * invLength;\n        let c1 = near * invLength;\n        let normal = directionVec.scalar(c0).add(upVec.scalar(c1));\n        let constant = position.dot(normal);\n        this._plane[VF_BOTTOM].normal = normal;\n        this._plane[VF_BOTTOM].constant = constant;\n\n        // 更新上平面\n        invLength = _Math.invSqrt(near2 + top2);\n        c0 = top * invLength;\n        c1 = -near * invLength;\n        normal = directionVec.scalar(c0).add(upVec.scalar(c1));\n        constant = position.dot(normal);\n        this._plane[VF_TOP].normal = normal;\n        this._plane[VF_TOP].constant = constant;\n\n        // 更新左平面\n        invLength = _Math.invSqrt(near2 + left2);\n        c0 = -left * invLength;\n        c1 = near * invLength;\n        normal = directionVec.scalar(c0).add(rightVec.scalar(c1));\n        constant = position.dot(normal);\n        this._plane[VF_LEFT].normal = normal;\n        this._plane[VF_LEFT].constant = constant;\n\n        // 更新右平面\n        invLength = _Math.invSqrt(near2 + right2);\n        c0 = right * invLength;\n        c1 = -near * invLength;\n        normal = directionVec.scalar(c0).add(rightVec.scalar(c1));\n        constant = position.dot(normal);\n        this._plane[VF_RIGHT].normal = normal;\n        this._plane[VF_RIGHT].constant = constant;\n\n        // 所有的平面已经初始化\n        this._planeState = 0xFFFFFFFF;\n    }\n\n    get frustum() {\n        return this._frustum;\n    }\n\n    get visibleSet() {\n        return this._visibleSet;\n    }\n\n    get planeState() {\n        return this._planeState;\n    }\n\n    set planeState(val) {\n        this._planeState = val;\n    }\n\n    get planes() {\n        return this._plane;\n    }\n\n    get planeQuantity() {\n        return this._planeQuantity;\n    }\n\n    pushPlan(plane) {\n        if (this._planeQuantity < Culler.MAX_PLANE_QUANTITY) {\n            // The number of user-defined planes is limited.\n            this._plane[this._planeQuantity] = plane;\n            ++this._planeQuantity;\n        }\n    }\n\n    popPlane() {\n        if (this._planeQuantity > Camera.VF_QUANTITY) {\n            // Frustum planes may not be removed from the stack.\n            --this._planeQuantity;\n        }\n    }\n\n    /**\n     * The base class behavior is to append the visible object to the end of\n     * the visible set (stored as an array).  Derived classes may override\n     * this behavior; for example, the array might be maintained as a sorted\n     * array for minimizing render state changes or it might be/ maintained\n     * as a unique list of objects for a portal system.\n     * @param {Spatial} visible\n     */\n    insert(visible) {\n        this._visibleSet.insert(visible);\n    }\n\n    /**\n     * Compare the object's world bound against the culling planes.\n     * Only Spatial calls this function.\n     *\n     * @param {Bound} bound\n     * @returns {boolean}\n     */\n    isVisible(bound) {\n        if (bound.radius === 0) {\n            // 该节点是虚拟节点，不可见\n            return false;\n        }\n\n        // Start with the last pushed plane, which is potentially the most\n        // restrictive plane.\n        let index = this._planeQuantity - 1;\n        let mask = (1 << index);\n\n        for (let i = 0; i < this._planeQuantity; ++i, --index, mask >>= 1) {\n            if (this._planeState & mask) {\n                let side = bound.whichSide(this._plane[index]);\n\n                if (side < 0) {\n                    // 对象在平面的反面, 剔除掉\n                    return false;\n                }\n\n                if (side > 0) {\n                    // 对象在平面的正面\n                    // There is no need to compare subobjects against this plane\n                    // so mark it as inactive.\n                    this._planeState &= ~mask;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Support for Portal.getVisibleSet.\n     * @param {number} numVertices\n     * @param {Array<Point>} vertices\n     * @param {boolean} ignoreNearPlane\n     */\n    isVisible1(numVertices, vertices, ignoreNearPlane) {\n        // The Boolean letiable ignoreNearPlane should be set to 'true' when\n        // the test polygon is a portal.  This avoids the situation when the\n        // portal is in the view pyramid (eye+left/right/top/bottom), but is\n        // between the eye and near plane.  In such a situation you do not want\n        // the portal system to cull the portal.  This situation typically occurs\n        // when the camera moves through the portal from current region to\n        // adjacent region.\n\n        // Start with the last pushed plane, which is potentially the most\n        // restrictive plane.\n        let index = this._planeQuantity - 1;\n        for (let i = 0; i < this._planeQuantity; ++i, --index) {\n            let plane = this._plane[index];\n            if (ignoreNearPlane && (index === Camera.VF_NEAR)) {\n                continue;\n            }\n\n            let j;\n            for (j = 0; j < numVertices; ++j) {\n                let side = plane.whichSide(vertices[j]);\n                if (side >= 0) {\n                    // The polygon is not totally outside this plane.\n                    break;\n                }\n            }\n\n            if (j === numVertices) {\n                // The polygon is totally outside this plane.\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // Support for BspNode.getVisibleSet.  Determine whether the view frustum\n    // is fully on one side of a plane.  The \"positive side\" of the plane is\n    // the half space to which the plane normal points.  The \"negative side\"\n    // is the other half space.  The function returns +1 if the view frustum\n    // is fully on the positive side of the plane, -1 if the view frustum is\n    // fully on the negative side of the plane, or 0 if the view frustum\n    // straddles the plane.  The input plane is in world coordinates and the\n    // world camera coordinate system is used for the test.\n    /**\n     * @param {Plane} plane\n     * @returns {number}\n     */\n    whichSide(plane) {\n        // The plane is N*(X-C) = 0 where the * indicates dot product.  The signed\n        // distance from the camera location E to the plane is N*(E-C).\n        let NdEmC = plane.distanceTo(this._camera.position);\n\n        let normal = plane.normal;\n        let NdD = normal.dot(this._camera.direction);\n        let NdU = normal.dot(this._camera.up);\n        let NdR = normal.dot(this._camera.right);\n        let FdN = this._frustum[Camera.VF_FAR] / this._frustum[Camera.VF_NEAR];\n\n        let positive = 0, negative = 0, sgnDist;\n\n        // Check near-plane vertices.\n        let PDMin = this._frustum[Camera.VF_NEAR] * NdD;\n        let NUMin = this._frustum[Camera.VF_BOTTOM] * NdU;\n        let NUMax = this._frustum[Camera.VF_TOP] * NdU;\n        let NRMin = this._frustum[Camera.VF_LEFT] * NdR;\n        let NRMax = this._frustum[Camera.VF_RIGHT] * NdR;\n\n        // V = E + dmin*D + umin*U + rmin*R\n        // N*(V-C) = N*(E-C) + dmin*(N*D) + umin*(N*U) + rmin*(N*R)\n        sgnDist = NdEmC + PDMin + NUMin + NRMin;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmin*D + umin*U + rmax*R\n        // N*(V-C) = N*(E-C) + dmin*(N*D) + umin*(N*U) + rmax*(N*R)\n        sgnDist = NdEmC + PDMin + NUMin + NRMax;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmin*D + umax*U + rmin*R\n        // N*(V-C) = N*(E-C) + dmin*(N*D) + umax*(N*U) + rmin*(N*R)\n        sgnDist = NdEmC + PDMin + NUMax + NRMin;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmin*D + umax*U + rmax*R\n        // N*(V-C) = N*(E-C) + dmin*(N*D) + umax*(N*U) + rmax*(N*R)\n        sgnDist = NdEmC + PDMin + NUMax + NRMax;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // check far-plane vertices (s = dmax/dmin)\n        let PDMax = this._frustum[Camera.VF_FAR] * NdD;\n        let FUMin = FdN * NUMin;\n        let FUMax = FdN * NUMax;\n        let FRMin = FdN * NRMin;\n        let FRMax = FdN * NRMax;\n\n        // V = E + dmax*D + umin*U + rmin*R\n        // N*(V-C) = N*(E-C) + dmax*(N*D) + s*umin*(N*U) + s*rmin*(N*R)\n        sgnDist = NdEmC + PDMax + FUMin + FRMin;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmax*D + umin*U + rmax*R\n        // N*(V-C) = N*(E-C) + dmax*(N*D) + s*umin*(N*U) + s*rmax*(N*R)\n        sgnDist = NdEmC + PDMax + FUMin + FRMax;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmax*D + umax*U + rmin*R\n        // N*(V-C) = N*(E-C) + dmax*(N*D) + s*umax*(N*U) + s*rmin*(N*R)\n        sgnDist = NdEmC + PDMax + FUMax + FRMin;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        // V = E + dmax*D + umax*U + rmax*R\n        // N*(V-C) = N*(E-C) + dmax*(N*D) + s*umax*(N*U) + s*rmax*(N*R)\n        sgnDist = NdEmC + PDMax + FUMax + FRMax;\n        if (sgnDist > 0) {\n            positive++;\n        }\n        else if (sgnDist < 0) {\n            negative++;\n        }\n\n        if (positive > 0) {\n            if (negative > 0) {\n                // Frustum straddles the plane.\n                return 0;\n            }\n\n            // Frustum is fully on the positive side.\n            return +1;\n        }\n\n        // Frustum is fully on the negative side.\n        return -1;\n    }\n\n    /**\n     * 计算裁剪后的可见物体\n     * @param {Spatial} scene\n     */\n    computeVisibleSet(scene) {\n        if (this._camera && scene) {\n            this.frustum = this.camera.frustum;\n            this._visibleSet.clear();\n            scene.onGetVisibleSet(this, false);\n            return;\n        }\n        console.assert(false, 'A camera and a scene are required for culling');\n    }\n\n};\n\nDECLARE_ENUM(Culler, { MAX_PLANE_QUANTITY: 32 });\n\nexport { Culler };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport { _Math, Point, Vector } from '../../math/index';\n\nclass Light extends D3Object {\n    constructor(type) {\n        super();\n        this.type = type;\n\n        // 灯光颜色属性\n        this.ambient = new Float32Array([0, 0, 0, 1]);\n        this.diffuse = new Float32Array([0, 0, 0, 1]);\n        this.specular = new Float32Array([0, 0, 0, 1]);\n\n        // 衰减系数\n        //     m = 1/(C + L*d + Q*d*d)\n        // C : 常量系数\n        // L : 线性系数\n        // Q : 2次系数\n        // d : 从光源位置到顶点的距离\n        // 使用线性衰减光强,可用:m = I/(C + L*d + Q*d*d)替代, I是强度系数\n        this.constant = 1.0;\n        this.linear = 0.0;\n        this.quadratic = 0.0;\n        this.intensity = 1.0;\n\n        // 聚光灯参数\n        // 椎体夹角为弧度制, 范围为: 0 < angle <= Math.PI.\n        this.angle = Math.PI;\n        this.cosAngle = -1.0;\n        this.sinAngle = 0.0;\n        this.exponent = 1.0;\n\n        this.position = Point.ORIGIN;\n        this.direction = Vector.UNIT_Z.negative();\n        this.up = Vector.UNIT_Y;\n        this.right = Vector.UNIT_X;\n    }\n\n    /**\n     * 设置光源[聚光灯]角度\n     * @param {number} angle - 弧度有效值 0< angle <= PI\n     */\n    setAngle(angle) {\n        console.assert(0 < angle && angle <= Math.PI, 'Angle out of range in SetAngle');\n        this.angle = angle;\n        this.cosAngle = Math.cos(angle);\n        this.sinAngle = Math.sin(angle);\n    }\n\n    /**\n     * 设置光源方向\n     * @param {Vector} dir - 方向向量\n     */\n    setDirection(dir) {\n        dir.normalize();\n        this.direction.copy(dir);\n        Vector.generateComplementBasis(this.up, this.right, this.direction);\n    }\n\n    /**\n     * 设置光源位置\n     *\n     * 只对点光源以及聚光灯有效\n     * @param {Point} pos - 位置\n     */\n    setPosition(pos) {\n        this.position.copy(pos);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.type = inStream.readEnum();\n        this.ambient.set(inStream.readFloat32Range(4));\n        this.diffuse.set(inStream.readFloat32Range(4));\n        this.specular.set(inStream.readFloat32Range(4));\n        this.constant = inStream.readFloat32();\n        this.linear = inStream.readFloat32();\n        this.quadratic = inStream.readFloat32();\n        this.intensity = inStream.readFloat32();\n        this.angle = inStream.readFloat32();\n        this.cosAngle = inStream.readFloat32();\n        this.sinAngle = inStream.readFloat32();\n        this.exponent = inStream.readFloat32();\n        this.position = inStream.readPoint();\n        this.direction.copy(inStream.readFloat32Range(4));\n        this.up.copy(inStream.readFloat32Range(4));\n        this.right.copy(inStream.readFloat32Range(4));\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writeEnum(this.type);\n        outStream.writeFloat32Array(4, this.ambient);\n        outStream.writeFloat32Array(4, this.diffuse);\n        outStream.writeFloat32Array(4, this.specular);\n        outStream.writeFloat32(this.constant);\n        outStream.writeFloat32(this.linear);\n        outStream.writeFloat32(this.quadratic);\n        outStream.writeFloat32(this.intensity);\n        outStream.writeFloat32(this.angle);\n        outStream.writeFloat32(this.cosAngle);\n        outStream.writeFloat32(this.sinAngle);\n        outStream.writeFloat32(this.exponent);\n        outStream.writeFloat32Array(4, this.position);\n        outStream.writeFloat32Array(4, this.direction);\n        outStream.writeFloat32Array(4, this.up);\n        outStream.writeFloat32Array(4, this.right);\n    }\n\n    /**\n     * 文件解析工厂方法\n     * @param {InStream} inStream\n     * @returns {Light}\n     */\n    static factory(inStream) {\n        var l = new Light(Light.LT_INVALID);\n        l.load(inStream);\n        return l;\n    }\n};\n\nDECLARE_ENUM(Light, {\n    LT_AMBIENT: 0,  // 环境光\n    LT_DIRECTIONAL: 1, // 方向光\n    LT_POINT: 2, // 点光源\n    LT_SPOT: 3, // 聚光等\n    LT_INVALID: 4 // 无效光源\n});\n\nD3Object.Register('Light', Light.factory);\nexport { Light };\n","import { D3Object } from '../../core/D3Object';\n\nclass Material extends D3Object {\n\n    constructor(opts = {}) {\n        super();\n        opts = Material.parseOption(opts);\n\n        let val = opts.emissive;\n        this.emissive = new Float32Array([val[0], val[1], val[2], 1]);\n        val = opts.ambient;\n        this.ambient = new Float32Array([val[0], val[1], val[2], 1]);\n\n        val = opts.diffuse;\n        // 材质透明度在反射颜色的alpha通道\n        this.diffuse = new Float32Array([val[0], val[1], val[2], opts.alpha]);\n\n        val = opts.specular;\n        // 镜面高光指数存储在alpha通道\n        this.specular = new Float32Array([val[0], val[1], val[2], opts.exponent]);\n    }\n\n    static get defaultOptions() {\n        return {\n            alpha: 1,\n            exponent: 32,\n            ambient: new Float32Array(3),\n            emissive: new Float32Array(3),\n            diffuse: new Float32Array(3),\n            specular: new Float32Array(3)\n        };\n    }\n\n    static parseOption(opts) {\n        let defOption = Object.assign({}, Material.defaultOptions);\n        if (opts.alpha && opts.alpha >= 0 && opts.alpha <= 1) {\n            defOption.alpha = opts.alpha;\n        }\n        if (opts.exponent) {\n            defOption.exponent = opts.exponent;\n        }\n        if (opts.ambient) {\n            if (typeof opts.ambient === 'number') {\n                defOption.ambient[0] = ((opts.ambient >> 16) & 0xff) / 255;\n                defOption.ambient[1] = ((opts.ambient >> 8) & 0xff) / 255;\n                defOption.ambient[2] = (opts.ambient & 0xff) / 255;\n            } else {\n                defOption.ambient.set(opts.ambient);\n            }\n        }\n        if (opts.emissive) {\n            if (typeof opts.emissive === 'number') {\n                defOption.emissive[0] = ((opts.emissive >> 16) & 0xff) / 255;\n                defOption.emissive[1] = ((opts.emissive >> 8) & 0xff) / 255;\n                defOption.emissive[2] = (opts.emissive & 0xff) / 255;\n            } else {\n                defOption.emissive.set(opts.emissive);\n            }\n        }\n        if (opts.diffuse) {\n            if (typeof opts.diffuse === 'number') {\n                defOption.diffuse[0] = ((opts.diffuse >> 16) & 0xff) / 255;\n                defOption.diffuse[1] = ((opts.diffuse >> 8) & 0xff) / 255;\n                defOption.diffuse[2] = (opts.diffuse & 0xff) / 255;\n            } else {\n                defOption.diffuse.set(opts.diffuse);\n            }\n        }\n        if (opts.specular) {\n            if (typeof opts.specular === 'number') {\n                defOption.specular[0] = ((opts.specular >> 16) & 0xff) / 255;\n                defOption.specular[1] = ((opts.specular >> 8) & 0xff) / 255;\n                defOption.specular[2] = (opts.specular & 0xff) / 255;\n            } else {\n                defOption.specular.set(opts.specular);\n            }\n        }\n        return defOption;\n    }\n\n    static factory(inStream) {\n        var obj = new Material();\n        obj.emissive[3] = 0;\n        obj.ambient[3] = 0;\n        obj.diffuse[3] = 0;\n        obj.load(inStream);\n        return obj;\n    }\n};\n\nD3Object.Register('Material', Material.factory);\n\nexport { Material };","import { Visual } from './Visual';\nimport { VertexBufferAccessor } from '../resources/namespace';\nimport { Point, Vector } from '../../math/index';\nimport { Renderer } from '../renderer/Renderer';\n\nclass Triangles extends Visual {\n\n    /**\n     * @abstract\n     */\n    getNumTriangles() {\n        throw new Error('Method:' + this.constructor.name + '.getNumTriangles not defined.');\n    }\n\n    /**\n     * @param {number} index\n     * @param {Array<number>} output\n     * @return {boolean}\n     * @abstract\n     */\n    getTriangle(index, output) {\n        throw new Error('Method:' + this.constructor.name + '.getTriangle not defined.');\n    }\n\n    /**\n     * @return {number}\n     */\n    getNumVertices() {\n        return this.vertexBuffer.numElements;\n    }\n\n    /**\n     * 获取物体坐标系的三角形顶点数组\n     * @param {number} i\n     * @param {Array<Point>} modelTriangle\n     */\n    getModelTriangle(i, modelTriangle) {\n        let v = new Array(3);\n        if (this.getTriangle(i, v)) {\n            let vba = new VertexBufferAccessor(this.format, this.vertexBuffer);\n            let p = vba.getPosition(v[0]);\n            modelTriangle[0] = new Point(p[0], p[1], p[2]);\n\n            p = vba.getPosition(v[1]);\n            modelTriangle[1] = new Point(p[0], p[1], p[2]);\n\n            p = vba.getPosition(v[2]);\n            modelTriangle[2] = new Point(p[0], p[1], p[2]);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * 获取世界坐标系的三角形顶点数组\n     * @param {number} i\n     * @param {Point} worldTriangle\n     */\n    getWorldTriangle(i, worldTriangle) {\n        let pos = new Array(3);\n        if (this.getModelTriangle(i, pos)) {\n            worldTriangle[0] = this.worldTransform.mulPoint(pos[0]);\n            worldTriangle[1] = this.worldTransform.mulPoint(pos[1]);\n            worldTriangle[2] = this.worldTransform.mulPoint(pos[2]);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @param {number} v\n     * @returns {Point}\n     */\n    getPosition(v) {\n        let index = this.format.getIndex(VertexFormat.AU_POSITION);\n        if (index >= 0) {\n            let offset = this.format.getOffset(index);\n            let stride = this.format.stride;\n            let start = offset + v * stride;\n            return new Point(\n                new Float32Array(this.vertexBuffer.getData(), start, 3)\n            );\n        }\n\n        console.assert(false, 'GetPosition failed.');\n        return new Point(0, 0, 0);\n    }\n\n    updateModelSpace(type) {\n        this.updateModelBound();\n        if (type === Visual.GU_MODEL_BOUND_ONLY) {\n            return;\n        }\n\n        let vba = VertexBufferAccessor.fromVisual(this);\n        if (vba.hasNormal()) {\n            this.updateModelNormals(vba);\n        }\n\n        if (type !== Visual.GU_NORMALS) {\n            if (vba.hasTangent() || vba.hasBinormal()) {\n                if (type === Visual.GU_USE_GEOMETRY) {\n                    this.updateModelTangentsUseGeometry(vba);\n                }\n                else {\n                    this.updateModelTangentsUseTCoords(vba);\n                }\n            }\n        }\n\n        Renderer.updateAll(this.vertexBuffer, this.format);\n    }\n\n    /**\n     * @param {VertexBufferAccessor} vba\n     */\n    updateModelNormals(vba) {\n        const numTriangles = this.getNumTriangles();\n\n        let i, t, pos0, pos1, pos2, tv0, tv1, tNormal,\n            v = new Uint32Array(3);\n\n        for (i = 0; i < numTriangles; ++i) {\n            // Get the vertex indices for the triangle.\n            if (!this.getTriangle(i, v)) {\n                continue;\n            }\n            pos0 = new Point(vba.getPosition(v[0]));\n            pos1 = new Point(vba.getPosition(v[1]));\n            pos2 = new Point(vba.getPosition(v[2]));\n\n            tv0 = pos1.subAsVector(pos0); // pos1 - pos0\n            tv1 = pos2.subAsVector(pos0); // pos2 - pos0\n            tNormal = tv0.cross(tv1);\n            vba.setNormal(v[0], tNormal.add(vba.getNormal(v[0])));\n            vba.setNormal(v[1], tNormal.add(vba.getNormal(v[1])));\n            vba.setNormal(v[2], tNormal.add(vba.getNormal(v[2])));\n        }\n\n        const numVertices = this.getNumVertices();\n        tNormal = Vector.ZERO;\n        for (i = 0; i < numVertices; ++i) {\n            tNormal.copy(vba.getNormal(i)).normalize();\n            vba.setNormal(i, tNormal);\n        }\n    }\n\n    /**\n     * 更新物体模型空间切线\n     * @param {VertexBufferAccessor} vba\n     */\n    updateModelTangentsUseGeometry(vba) {\n        // Compute the matrix of normal derivatives.\n        const numVertices = vba.getNumVertices();\n        let dNormal = new Array(numVertices);\n        let wwTrn = new Array(numVertices);\n        let dwTrn = new Array(numVertices);\n        let i, j, row, col;\n\n        for (i = 0; i < numTriangles; ++i) {\n            wwTrn[i] = new Matrix().zero();\n            dwTrn[i] = new Matrix().zero();\n            dNormal[i] = new Matrix().zero();\n\n            // 获取三角形的3个顶点索引.\n            let v = new Array(3);\n            if (!this.getTriangle(i, v)) {\n                continue;\n            }\n\n            for (j = 0; j < 3; j++) {\n                // 获取顶点坐标和法线.\n                let v0 = v[j];\n                let v1 = v[(j + 1) % 3];\n                let v2 = v[(j + 2) % 3];\n                let pos0 = new Point(vba.getPosition(v0));\n                let pos1 = new Point(vba.getPosition(v1));\n                let pos2 = new Point(vba.getPosition(v2));\n                let nor0 = new Vector(vba.getNormal(v0));\n                let nor1 = new Vector(vba.getNormal(v1));\n                let nor2 = new Vector(vba.getNormal(v2));\n\n                // 计算从pos0到pos1的边,使其射向顶点切面，然后计算相邻法线的差\n                let edge = pos1.subAsVector(pos0);\n                let proj = edge.sub(nor0.scalar(edge.dot(nor0)));\n                let diff = nor1.sub(nor0);\n                for (row = 0; row < 3; ++row) {\n                    for (col = 0; col < 3; ++col) {\n                        wwTrn[v0].setItem(row, col, wwTrn.item(row, col) + proj[row] * proj[col]);\n                        dwTrn[v0].setItem(row, col, dwTrn.item(row, col) + diff[row] * proj[col]);\n                    }\n                }\n\n                // 计算从pos0到pos2的边,使其射向顶点切面，然后计算相邻法线的差\n                edge = pos2.subAsVector(pos0);\n                proj = edge.sub(nor0.scalar(edge.dot(nor0)));\n                diff = nor2.sub(nor0);\n                for (row = 0; row < 3; ++row) {\n                    for (col = 0; col < 3; ++col) {\n                        wwTrn[v0].setItem(row, col, wwTrn.item(row, col) + proj[row] * proj[col]);\n                        dwTrn[v0].setItem(row, col, dwTrn.item(row, col) + diff[row] * proj[col]);\n                    }\n                }\n            }\n        }\n\n        // Add N*N^T to W*W^T for numerical stability.  In theory 0*0^T is added\n        // to D*W^T, but of course no update is needed in the implementation.\n        // Compute the matrix of normal derivatives.\n        for (i = 0; i < numVertices; ++i) {\n            let nor = vba.getNormal(i);\n            for (row = 0; row < 3; ++row) {\n                for (col = 0; col < 3; ++col) {\n                    wwTrn[i].setItem(row, col, 0.5 * wwTrn[i].item(row, col) + nor[row] * nor[col]);\n                    dwTrn[i].setItem(row, col, dwTrn[i].item(row, col) * 0.5);\n                }\n            }\n\n            wwTrn[i].setColumn(3, Point.ORIGIN);\n            dNormal[i] = dwTrn[i].mul(wwTrn[i]).inverse();\n        }\n\n        // gc?\n        wwTrn = null;\n        dwTrn = null;\n\n        // If N is a unit-length normal at a vertex, let U and V be unit-length\n        // tangents so that {U, V, N} is an orthonormal set.  Define the matrix\n        // J = [U | V], a 3-by-2 matrix whose columns are U and V.  Define J^T\n        // to be the transpose of J, a 2-by-3 matrix.  Let dN/dX denote the\n        // matrix of first-order derivatives of the normal vector field.  The\n        // shape matrix is\n        //   S = (J^T * J)^{-1} * J^T * dN/dX * J = J^T * dN/dX * J\n        // where the superscript of -1 denotes the inverse.  (The formula allows\n        // for J built from non-perpendicular vectors.) The matrix S is 2-by-2.\n        // The principal curvatures are the eigenvalues of S.  If k is a principal\n        // curvature and W is the 2-by-1 eigenvector corresponding to it, then\n        // S*W = k*W (by definition).  The corresponding 3-by-1 tangent vector at\n        // the vertex is called the principal direction for k, and is J*W.  The\n        // principal direction for the minimum principal curvature is stored as\n        // the mesh tangent.  The principal direction for the maximum principal\n        // curvature is stored as the mesh bitangent.\n        for (i = 0; i < numVertices; ++i) {\n            // Compute U and V given N.\n            let norvec = new Vector(vba.getNormal(i));\n            let uvec = new Vector(),\n                vvec = new Vector();\n\n            Vector.generateComplementBasis(uvec, vvec, norvec);\n\n            // Compute S = J^T * dN/dX * J.  In theory S is symmetric, but\n            // because we have estimated dN/dX, we must slightly adjust our\n            // calculations to make sure S is symmetric.\n            let s01 = uvec.dot(dNormal[i].mulPoint(vvec));\n            let s10 = vvec.dot(dNormal[i].mulPoint(uvec));\n            let sAvr = 0.5 * (s01 + s10);\n            let smat = [\n                [uvec.dot(dNormal[i].mulPoint(uvec)), sAvr],\n                [sAvr, vvec.dot(dNormal[i].mulPoint(vvec))]\n            ];\n\n            // Compute the eigenvalues of S (min and max curvatures).\n            let trace = smat[0][0] + smat[1][1];\n            let det = smat[0][0] * smat[1][1] - smat[0][1] * smat[1][0];\n            let discr = trace * trace - 4.0 * det;\n            let rootDiscr = Math.sqrt(Math.abs(discr));\n            let minCurvature = 0.5 * (trace - rootDiscr);\n            // float maxCurvature = 0.5f*(trace + rootDiscr);\n\n            // Compute the eigenvectors of S.\n            let evec0 = new Vector(smat[0][1], minCurvature - smat[0][0], 0);\n            let evec1 = new Vector(minCurvature - smat[1][1], smat[1][0], 0);\n\n            let tanvec, binvec;\n            if (evec0.squaredLength() >= evec1.squaredLength()) {\n                evec0.normalize();\n                tanvec = uvec.scalar(evec0.x).add(vvec.scalar(evec0.y));\n                binvec = norvec.cross(tanvec);\n            }\n            else {\n                evec1.normalize();\n                tanvec = uvec.scalar(evec1.x).add(vvec.scalar(evec1.y));\n                binvec = norvec.cross(tanvec);\n            }\n\n            if (vba.hasTangent()) {\n                let t = vba.getTangent(i);\n                t[0] = tanvec.x;\n                t[1] = tanvec.y;\n                t[2] = tanvec.z;\n            }\n\n            if (vba.hasBinormal()) {\n                let b = vba.getBinormal(i);\n                b[0] = binvec.x;\n                b[1] = binvec.y;\n                b[2] = binvec.z;\n            }\n        }\n        dNormal = null;\n    }\n\n    /**\n     * @param {VertexBufferAccessor} vba\n     */\n    updateModelTangentsUseTCoords(vba) {\n        // Each vertex can be visited multiple times, so compute the tangent\n        // space only on the first visit.  Use the zero vector as a flag for the\n        // tangent vector not being computed.\n        const numVertices = vba.getNumVertices();\n        let hasTangent = vba.hasTangent();\n        let zero = Vector.ZERO;\n        let i, t;\n        if (hasTangent) {\n            for (i = 0; i < numVertices; ++i) {\n                t = vba.getTangent(i);\n                t[0] = 0;\n                t[1] = 0;\n                t[2] = 0;\n            }\n        } else {\n            for (i = 0; i < numVertices; ++i) {\n                t = vba.getBinormal(i);\n                t[0] = 0;\n                t[1] = 0;\n                t[2] = 0;\n            }\n        }\n\n        const numTriangles = this.getNumTriangles();\n        for (i = 0; i < numTriangles; i++) {\n            // Get the triangle vertices' positions, normals, tangents, and\n            // texture coordinates.\n            let v = [0, 0, 0];\n            if (!this.getTriangle(i, v)) {\n                continue;\n            }\n\n            let locPosition = new Array(3);\n            let locNormal = new Array(3);\n            let locTangent = new Array(3);\n            let locTCoord = new Array(2);\n            let curr, k;\n            for (curr = 0; curr < 3; ++curr) {\n                k = v[curr];\n                locPosition[curr] = new Point(vba.getPosition(k));\n                locNormal[curr] = new Vector(vba.getNormal(k));\n                locTangent[curr] = new Vector((hasTangent ? vba.getTangent(k) : vba.getBinormal(k)));\n                locTCoord[curr] = vba.getTCoord(0, k);\n            }\n\n            for (curr = 0; curr < 3; ++curr) {\n                let currLocTangent = locTangent[curr];\n                if (!currLocTangent.equals(zero)) {\n                    // 该顶点已被计算过\n                    continue;\n                }\n\n                // 计算顶点切线空间\n                let norvec = locNormal[curr];\n                let prev = ((curr + 2) % 3);\n                let next = ((curr + 1) % 3);\n                let tanvec = Triangles.computeTangent(\n                    locPosition[curr], locTCoord[curr],\n                    locPosition[next], locTCoord[next],\n                    locPosition[prev], locTCoord[prev]\n                );\n\n                // Project T into the tangent plane by projecting out the surface\n                // normal N, and then making it unit length.\n                tanvec -= norvec.dot(tanvec) * norvec;\n                tanvec.normalize();\n\n                // Compute the bitangent B, another tangent perpendicular to T.\n                let binvec = norvec.unitCross(tanvec);\n\n                k = v[curr];\n                if (hasTangent) {\n                    locTangent[k] = tanvec;\n                    if (vba.hasBinormal()) {\n                        t = vba.getBinormal(k);\n                        t[0] = binvec.x;\n                        t[1] = binvec.y;\n                        t[2] = binvec.z;\n                    }\n                }\n                else {\n                    t = vba.getBinormal(k);\n                    t[0] = tanvec.x;\n                    t[1] = tanvec.y;\n                    t[2] = tanvec.z;\n                }\n            }\n        }\n    }\n\n    /**\n     * 计算切线\n     *\n     * @param {Point} position0\n     * @param {Array<number>} tcoord0\n     * @param {Point} position1\n     * @param {Array<number>} tcoord1\n     * @param {Point} position2\n     * @param {Array<number>} tcoord2\n     * @returns {Vector}\n     */\n    static computeTangent(position0, tcoord0,\n        position1, tcoord1,\n        position2, tcoord2) {\n        // Compute the change in positions at the vertex P0.\n        let v10 = position1.subAsVector(position0);\n        let v20 = position2.subAsVector(position0);\n\n        const ZERO_TOLERANCE = Math.ZERO_TOLERANCE;\n        const abs = Math.abs;\n\n        if (abs(v10.length()) < ZERO_TOLERANCE ||\n            abs(v20.length()) < ZERO_TOLERANCE) {\n            // The triangle is very small, call it degenerate.\n            return Vector.ZERO;\n        }\n\n        // Compute the change in texture coordinates at the vertex P0 in the\n        // direction of edge P1-P0.\n        let d1 = tcoord1[0] - tcoord0[0];\n        let d2 = tcoord1[1] - tcoord0[1];\n        if (abs(d2) < ZERO_TOLERANCE) {\n            // The triangle effectively has no letiation in the v texture\n            // coordinate.\n            if (abs(d1) < ZERO_TOLERANCE) {\n                // The triangle effectively has no letiation in the u coordinate.\n                // Since the texture coordinates do not lety on this triangle,\n                // treat it as a degenerate parametric surface.\n                return Vector.ZERO;\n            }\n\n            // The letiation is effectively all in u, so set the tangent vector\n            // to be T = dP/du.\n            return v10.div(d1);\n        }\n\n        // Compute the change in texture coordinates at the vertex P0 in the\n        // direction of edge P2-P0.\n        let d3 = tcoord2[0] - tcoord0[0];\n        let d4 = tcoord2[1] - tcoord0[1];\n        let det = d2 * d3 - d4 * d1;\n        if (abs(det) < ZERO_TOLERANCE) {\n            // The triangle vertices are collinear in parameter space, so treat\n            // this as a degenerate parametric surface.\n            return Vector.ZERO;\n        }\n\n        // The triangle vertices are not collinear in parameter space, so choose\n        // the tangent to be dP/du = (dv1*dP2-dv2*dP1)/(dv1*du2-dv2*du1)\n        return v20.scalar(d2).sub(v10.scalar(d4)).div(det);\n    }\n}\n\nexport { Triangles };","import { Triangles } from './Triangles';\nimport { Visual } from './Visual';\nimport { D3Object } from '../../core/D3Object';\n\nclass TriMesh extends Triangles {\n\n    /**\n     * @param {VertexFormat} format\n     * @param {VertexBuffer} vertexBuffer\n     * @param {IndexBuffer} indexBuffer\n     */\n    constructor(format, vertexBuffer, indexBuffer) {\n        super(Visual.PT_TRIMESH, format, vertexBuffer, indexBuffer);\n    }\n\n    /**\n     * @returns {number}\n     */\n    getNumTriangles() {\n        return this.indexBuffer.numElements / 3;\n    }\n\n    /**\n     * 获取位置I处的三角形索引\n     * @param {number} i\n     * @param {Array<number>} output 3 elements\n     * @returns {boolean}\n     */\n    getTriangle(i, output) {\n        if (0 <= i && i < this.getNumTriangles()) {\n            let data = this.indexBuffer.getData();\n            data = new Uint32Array(data.subarray(3 * i * 4, 3 * (i + 1) * 4).buffer);\n            output[0] = data[0];\n            output[1] = data[1];\n            output[2] = data[2];\n            return true;\n        }\n        return false;\n    }\n}\n\nD3Object.Register('TriMesh', TriMesh.factory);\n\nexport { TriMesh };","import { Node } from '../sceneTree/namespace';\nimport { DECLARE_ENUM } from '../../util/util';\n\nclass SwitchNode extends Node {\n    constructor() {\n        this.activeChild = SwitchNode.SN_INVALID_CHILD;\n    }\n\n\t/**\n\t * @param {number} activeChild \n\t */\n    setActiveChild(activeChild) {\n        console.assert(activeChild === SwitchNode.SN_INVALID_CHILD || activeChild < this.childs.length, 'Invalid active child specified');\n        this.activeChild = activeChild;\n    }\n    getActiveChild() {\n        return this.activeChild;\n    }\n    disableAllChildren() {\n        this.activeChild = SwitchNode.SN_INVALID_CHILD;\n    }\n\n    // Support for hierarchical culling.\n    getVisibleSet(culler, noCull) {\n        if (this.activeChild === SwitchNode.SN_INVALID_CHILD) {\n            return;\n        }\n\n        // All Visual objects in the active subtree are added to the visible set.\n        let child = this.childs[thia.activeChild];\n        if (child) {\n            child.onGetVisibleSet(culler, noCull);\n        }\n    }\n}\n\nDECLARE_ENUM(SwitchNode, { SN_INVALID_CHILD: -1 });\n\nexport { SwitchNode };\n","class PickRecord {\n\tconstructor() {\n\t\t/**\n\t\t * The intersected object.\n\t\t * @type {Spatial}\n\t\t */\n\t\tthis.intersected = null;\n\n\t\t// The linear component is parameterized by P + t*D.  The T member is\n\t\t// the value of parameter t at the intersection point.\n\t\tthis.T = 0;\n\n\t\t// The index of the triangle that is intersected by the ray.\n\t\tthis.triangle = 0;\n\n\t\t// The barycentric coordinates of the point of intersection.  All of the\n\t\t// coordinates are in [0,1] and b0 + b1 + b2 = 1.\n\t\tthis.bary = new Array(3);\n\t}\n}\n\nexport { PickRecord };","import { _Math, Point, Vector, Triangle3, Line3 } from '../../math/index';\nimport { DECLARE_ENUM } from '../../util/util';\nimport { VertexBufferAccessor } from '../resources/VertexBufferAccessor';\nimport { SwitchNode } from '../detail/SwitchNode';\nimport { PickRecord } from './PickRecord';\nimport { Triangles } from './Triangles';\nimport { Node } from './Node';\n\nclass Picker {\n\n\tconstructor() {\n\t\tthis._origin = Point.ORIGIN;\n\t\tthis._direction = Vector.ZERO;\n\t\tthis._tmin = 0;\n\t\tthis._tmax = 0;\n\t\t/**\n\t\t * @type {Array<PickRecord>}\n\t\t */\n\t\tthis.records = [];\n\t}\n\n\t/**\n\t * The linear component is parameterized by P + t*D, where P is a point on\n\t * the component (P is the origin), D is a unit-length direction, and t is\n\t * a scalar in the interval [tmin,tmax] with tmin < tmax.  The P and D\n\t * values must be in world coordinates.  The choices for tmin and tmax are\n\t *    line:     tmin = -Math.MAX_REAL, tmax = Math.MAX_REAL\n\t *    ray:      tmin = 0, tmax = Math.MAX_REAL\n\t *    segment:  tmin = 0, tmax > 0;\n\t * \n\t * A call to this function will automatically clear the Records array.\n\t * If you need any information from this array obtained by a previous\n\t * call to execute, you must save it first.\n\t * \n\t * @param {Spatial} scene\n\t * @param {Point} origin\n\t * @param {Vector} direction\n\t * @param {number} tmin\n\t * @param {number} tmax\n\t */\n\texecute(scene, origin, direction, tmin, tmax) {\n\t\tthis._origin.copy(origin);\n\t\tthis._direction.copy(direction);\n\t\tthis._tmin = tmin;\n\t\tthis._tmax = tmax;\n\t\tthis.records.length = 0;\n\t\tthis._executeRecursive(scene);\n\t}\n\n    /**\n\t * Locate the record whose T value is smallest in absolute value.\n\t * @return {PickRecord}\n\t */\n\tgetClosestToZero() {\n\t\tif (this.records.length == 0) {\n\t\t\treturn msInvalid;\n\t\t}\n\n\t\tlet closest = _Math.abs(this.records[0].T);\n\t\tlet index = 0;\n\t\tconst numRecords = this.records.length;\n\t\tfor (let i = 1; i < numRecords; ++i) {\n\t\t\tlet tmp = _Math.abs(this.records[i].T);\n\t\t\tif (tmp < closest) {\n\t\t\t\tclosest = tmp;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn this.records[index];\n\t}\n\n\t/**\n\t * Locate the record with nonnegative T value closest to zero.\n\t * @return {PickRecord}\n\t */\n\tgetClosestNonnegative() {\n\t\tif (this.records.length === 0) {\n\t\t\treturn Picker.invalid;\n\t\t}\n\n\t\t// Get first nonnegative value.\n\t\tlet closest = _Math.MAX_REAL;\n\t\tlet index;\n\t\tconst numRecords = this.records.length;\n\t\tfor (index = 0; index < numRecords; ++index) {\n\t\t\tif (this.records[index].T >= 0) {\n\t\t\t\tclosest = this.records[index].T;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (index == numRecords) {\n\t\t\treturn Picker.invalid;\n\t\t}\n\n\t\tfor (let i = index + 1; i < numRecords; ++i) {\n\t\t\tif (0 <= this.records[i].T && this.records[i].T < closest) {\n\t\t\t\tclosest = this.records[i].T;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn this.records[index];\n\t}\n\n\t/**\n\t * Locate the record with nonpositive T value closest to zero\n\t * @return {PickRecord}\n\t */\n\tgetClosestNonpositive() {\n\t\tif (this.records.length === 0) {\n\t\t\treturn Picker.invalid;\n\t\t}\n\n\t\t// Get first nonpositive value.\n\t\tlet closest = -_Math.MAX_REAL;\n\t\tlet index;\n\t\tconst numRecords = this.records.length;\n\t\tfor (index = 0; index < numRecords; ++index) {\n\t\t\tif (this.records[index].T <= 0) {\n\t\t\t\tclosest = this.records[index].T;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (index === numRecords) {\n\t\t\treturn Picker.invalid; // All values are positive.\n\t\t}\n\n\t\tfor (let i = index + 1; i < numRecords; ++i) {\n\t\t\tif (closest < this.records[i].T && this.records[i].T <= 0) {\n\t\t\t\tclosest = this.records[i].T;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn this.records[index];\n\t}\n\n\t/**\n\t * The picking occurs recursively by traversing the input scene\n\t * @param {Spatial} obj\n\t */\n\t_executeRecursive(obj) {\n\t\tlet mesh = obj;\n\t\tif (mesh instanceof Triangles) {\n\t\t\tif (mesh.worldBound.testIntersection(this._origin, this._direction, this._tmin, this._tmax)) {\n\t\t\t\t// Convert the linear component to model-space coordinates.\n\t\t\t\tlet ptmp = mesh.worldTransform.inverse().mulPoint(this._origin);\n\t\t\t\tlet modelOrg = new Vector(ptmp.x, ptmp.y, ptmp.z);\n\n\t\t\t\tlet vtmp = mesh.worldTransform.inverse.mulPoint(this._direction);\n\t\t\t\tlet modelDirection = new Vector(vtmp.x, vtmp.y, vtmp.z);\n\n\t\t\t\tlet line = new Line3(modelOrg, modelDirection);\n\n\t\t\t\t// Get the position data.\n\t\t\t\tlet vba = VertexBufferAccessor.fromVisual(mesh);\n\n\t\t\t\t// Compute intersections with the model-space triangles.\n\t\t\t\tlet numTriangles = mesh.getNumTriangles();\n\t\t\t\tfor (let i = 0; i < numTriangles; ++i) {\n\t\t\t\t\tlet vs = [0, 0, 0];\n\t\t\t\t\tif (!mesh.getTriangle(i, v0, v1, v2)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet v0 = vba.getPosition(vs[0]);\n\t\t\t\t\tlet v1 = vba.getPosition(vs[1]);\n\t\t\t\t\tlet v2 = vba.getPosition(vs[2]);\n\t\t\t\t\tlet triangle = new Triangle3(v0, v1, v2);\n\t\t\t\t\tlet calc = new IntrLineTriangle(line, triangle);\n\t\t\t\t\tif (calc.find() && this._tmin <= calc.getLineParameter() && calc.getLineParameter() <= this._tmax) {\n\t\t\t\t\t\tlet record = new PickRecord;\n\t\t\t\t\t\trecord.intersected = mesh;\n\t\t\t\t\t\trecord.T = calc.getLineParameter();\n\t\t\t\t\t\trecord.Triangle = i;\n\t\t\t\t\t\trecord.bary[0] = calc.getTriBary0();\n\t\t\t\t\t\trecord.bary[1] = calc.getTriBary1();\n\t\t\t\t\t\trecord.bary[2] = calc.getTriBary2();\n\t\t\t\t\t\tthis.records.push(record);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (mesh instanceof SwitchNode) {\n\t\t\tlet activeChild = mesh.getActiveChild();\n\t\t\tif (activeChild != SwitchNode.SN_INVALID_CHILD) {\n\t\t\t\tif (mesh.worldBound.testIntersection(this._origin, this._direction, this._tmin, this._tmax)) {\n\t\t\t\t\tlet child = mesh.getChild(activeChild);\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tthis._executeRecursive(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (mesh instanceof Node) {\n\t\t\tif (mesh.worldBound.testIntersection(this._origin, this._direction, this._tmin, this._tmax)) {\n\t\t\t\tfor (let i = 0, t = mesh.getChildsNumber(); i < t; ++i) {\n\t\t\t\t\tlet child = mesh.getChild(i);\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tthis._executeRecursive(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nDECLARE_ENUM(Picker, { invalid: new PickRecord });\nexport { Picker };\n","import { _Math, Point, Vector } from '../../math/index';\nimport { Transform } from '../dataTypes/Transform';\nimport { VertexFormat, Buffer, IndexBuffer, VertexBuffer, VertexBufferAccessor } from '../resources/namespace';\nimport { TriMesh } from './TriMesh';\nimport { Visual } from './Visual';\nimport { def } from '../../util/util';\n\nclass StandardMesh {\n    /**\n     * 标准网格 - StandardMesh\n     *\n     * @param {VertexFormat} format - 网格顶点格式\n     * @param {boolean} isStatic - 是否使用静态缓冲, 默认true;\n     * @param {boolean} inside - 是否反向卷绕, 默认false\n     * @param {Transform} transform - 默认为单位变换\n     */\n    constructor(format, isStatic = true, inside = false, transform = Transform.IDENTITY) {\n        this.format = format;\n        this.transform = transform;\n        this.isStatic = isStatic;\n        this.inside = inside;\n        this.hasNormals = false;\n\n        this.usage = isStatic ? Buffer.BU_STATIC : Buffer.BU_DYNAMIC;\n\n        // 检查顶点坐标\n        let posIndex = format.getIndex(VertexFormat.AU_POSITION);\n        console.assert(posIndex >= 0, 'Vertex format must have positions');\n        let posType = format.getAttributeType(posIndex);\n        console.assert(posType === VertexFormat.AT_FLOAT3, 'Positions must be 3-element of floats');\n\n        // 检查法线\n        let norIndex = format.getIndex(VertexFormat.AU_NORMAL);\n        if (norIndex >= 0) {\n            let norType = format.getAttributeType(norIndex);\n            this.hasNormals = (norType === VertexFormat.AT_FLOAT3);\n        }\n\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const AU_TEXCOORD = VertexFormat.AU_TEXCOORD;\n        const AT_FLOAT2 = VertexFormat.AT_FLOAT2;\n\n        this.hasTCoords = new Array(MAX_UNITS);\n        for (let unit = 0; unit < MAX_UNITS; ++unit) {\n            this.hasTCoords[unit] = false;\n            let tcdIndex = format.getIndex(AU_TEXCOORD, unit);\n            if (tcdIndex >= 0) {\n                let tcdType = format.getAttributeType(tcdIndex);\n                if (tcdType === AT_FLOAT2) {\n                    this.hasTCoords[unit] = true;\n                }\n            }\n        }\n    }\n\n    /**\n     * 更改三角形卷绕顺序\n     * @param {number} numTriangles - 三角形数量\n     * @param {Uint32Array} indices - 顶点索引数组\n     */\n    reverseTriangleOrder(numTriangles, indices) {\n        let i, j1, j2, tmp;\n        for (i = 0; i < numTriangles; ++i) {\n            j1 = 3 * i + 1;\n            j2 = j1 + 1;\n            tmp = indices[j1];\n            indices[j1] = indices[j2];\n            indices[j2] = tmp;\n        }\n    }\n    /**\n     *\n     * @param {VertexBufferAccessor} vba\n     */\n    createPlatonicNormals(vba) {\n        if (this.hasNormals) {\n            const numVertices = vba.numVertices;\n            for (let i = 0; i < numVertices; ++i) {\n                vba.setNormal(i, vba.getPosition(i));\n            }\n        }\n    }\n    /**\n     *\n     * @param vba {VertexBufferAccessor}\n     */\n    createPlatonicUVs(vba) {\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const numVertices = vba.numVertices;\n        const INV_PI = _Math.INV_PI;\n        let unit, i, pos, t;\n        for (unit = 0; unit < MAX_UNITS; ++unit) {\n            if (this.hasTCoords[unit]) {\n                for (i = 0; i < numVertices; ++i) {\n                    pos = vba.getPosition(i);\n                    t = 0.5;\n                    if (Math.abs(pos[2]) < 1) {\n                        t *= 1 + _Math.atan2(pos[1], pos[0]) * INV_PI;\n                    }\n                    vba.setTCoord(unit, i, [t, _Math.acos(pos[2]) * INV_PI]);\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {VertexBufferAccessor} vba\n     */\n    transformData(vba) {\n        if (this.transform.isIdentity()) {\n            return;\n        }\n\n        const numVertices = vba.numVertices;\n        let i, f3, t;\n        for (i = 0; i < numVertices; ++i) {\n            f3 = new Point(vba.getPosition(i));\n            vba.setPosition(i, this.transform.mulPoint(f3));\n        }\n\n        if (this.hasNormals) {\n            for (i = 0; i < numVertices; ++i) {\n                f3 = (new Vector(vba.getNormal(i))).normalize();\n                vba.setNormal(i, f3);\n            }\n        }\n    }\n\n    /**\n     * 长方形\n     * @param {number} xSamples - x方向点数量\n     * @param {number} ySamples - z方向点数量\n     * @param {number} width - x 方向长度\n     * @param {number} height - z 方向长度\n     * @returns {TriMesh}\n     */\n    rectangle(xSamples, ySamples, width, height) {\n        const format = this.format;\n        const hasNormals = this.hasNormals;\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const numVertices = xSamples * ySamples;\n        const numTriangles = 2 * (xSamples - 1) * (ySamples - 1);\n        const numIndices = 3 * numTriangles;\n        const stepX = 1 / (xSamples - 1);\n        const stepY = 1 / (ySamples - 1);\n\n        let vertexBuffer = new VertexBuffer(numVertices, format.stride, this.usage);\n        let vba = new VertexBufferAccessor(format, vertexBuffer);\n        let u, v, x, y, i, i0, i1, unit;\n        for (i1 = 0, i = 0; i1 < ySamples; ++i1) {\n            v = i1 * stepY;\n            y = (2 * v - 1) * height;\n            for (i0 = 0; i0 < xSamples; ++i0, ++i) {\n                u = i0 * stepX;\n                x = (2 * u - 1) * width;\n                vba.setPosition(i, [x, y, 0]);\n                if (hasNormals) {\n                    vba.setNormal(i, Vector.UNIT_Z);\n                }\n\n                for (unit = 0; unit < MAX_UNITS; ++unit) {\n                    if (this.hasTCoords[unit]) {\n                        vba.setTCoord(unit, i, [u, v]);\n                    }\n                }\n            }\n        }\n        this.transformData(vba);\n\n        let indexBuffer = new IndexBuffer(numIndices, 4, this.usage);\n        let indices = new Uint32Array(indexBuffer.getData().buffer);\n        let v0, v1, v2, v3, idx = 0;\n        for (i1 = 0; i1 < ySamples - 1; ++i1) {\n            for (i0 = 0; i0 < xSamples - 1; ++i0) {\n                v0 = i0 + xSamples * i1;\n                v1 = v0 + 1;\n                v2 = v1 + xSamples;\n                v3 = v0 + xSamples;\n                indices[idx++] = v0;\n                indices[idx++] = v1;\n                indices[idx++] = v2;\n                indices[idx++] = v0;\n                indices[idx++] = v2;\n                indices[idx++] = v3;\n            }\n        }\n        return new TriMesh(format, vertexBuffer, indexBuffer);\n    }\n\n    /**\n     * 圆盘\n     * todo error\n     * @param {number} shellSamples\n     * @param {number} radialSamples\n     * @param {number} radius\n     * @returns {TriMesh}\n     */\n    disk(shellSamples, radialSamples, radius) {\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const usage = this.usage;\n        const format = this.format;\n        const hasNormals = this.hasNormals;\n        const cos = Math.cos;\n        const sin = Math.sin;\n\n        let rsm1 = radialSamples - 1,\n            ssm1 = shellSamples - 1;\n        let numVertices = 1 + radialSamples * ssm1;\n        let numTriangles = radialSamples * (2 * ssm1 - 1);\n        let numIndices = 3 * numTriangles;\n\n        let vertexBuffer = new VertexBuffer(numVertices, format.stride, usage);\n        let vba = new VertexBufferAccessor(format, vertexBuffer);\n\n        let t;\n\n        // Center of disk.\n        vba.setPosition(0, [0, 0, 0]);\n\n        if (hasNormals) {\n            vba.setNormal(0, [0, 0, 1]);\n        }\n\n        let unit;\n        for (unit = 0; unit < MAX_UNITS; ++unit) {\n            if (this.hasTCoords[unit]) {\n                vba.setTCoord(unit, 0, [0.5, 0.5]);\n            }\n        }\n\n        let invSSm1 = 1 / ssm1;\n        let invRS = 1 / radialSamples;\n        let rsPI = _Math.TWO_PI * invRS;\n        let tcoord = [0.5, 0.5];\n\n        let angle, cs, sn, s, fraction, fracRadial, fracRadial1, i;\n\n        for (let r = 0; r < radialSamples; ++r) {\n            angle = rsPI * r;\n            cs = cos(angle);\n            sn = sin(angle);\n\n            let radial = new Vector(cs, sn, 0);\n\n            for (s = 1; s < shellSamples; ++s) {\n                fraction = invSSm1 * s;  // in (0,R]\n                fracRadial = radial.scalar(fraction);\n                i = s + ssm1 * r;\n\n                fracRadial1 = fracRadial.scalar(radius);\n                vba.setPosition(i, [fracRadial1.x, fracRadial1.y, fracRadial1.z]);\n\n                if (hasNormals) {\n                    vba.setNormal(i, [0, 0, 1]);\n                }\n\n                tcoord[0] = 0.5 + 0.5 * fracRadial[0];\n                tcoord[1] = 0.5 + 0.5 * fracRadial[1];\n                for (unit = 0; unit < MAX_UNITS; ++unit) {\n                    if (this.hasTCoords[unit]) {\n                        vba.setTCoord(unit, i, tcoord);\n                    }\n                }\n            }\n        }\n        this.transformData(vba);\n\n        // Generate indices.\n        let indexBuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(indexBuffer.getData().buffer);\n        let r0, r1;\n        for (r0 = rsm1, r1 = 0, t = 0, i=0; r1 < radialSamples; r0 = r1++) {\n            indices[i] = 0;\n            indices[i+1] = 1 + ssm1 * r0;\n            indices[i+2] = 1 + ssm1 * r1;\n            i += 3;\n            ++t;\n            for (s = 1; s < ssm1; ++s, i+=6) {\n                let i00 = s + ssm1 * r0;\n                let i01 = s + ssm1 * r1;\n                let i10 = i00 + 1;\n                let i11 = i01 + 1;\n                indices[i] = i00;\n                indices[i+1] = i10;\n                indices[i+2] = i11;\n                indices[i+3] = i00;\n                indices[i+4] = i11;\n                indices[i+5] = i01;\n                t += 2;\n            }\n        }\n\n        return new TriMesh(format, vertexBuffer, indexBuffer);\n    }\n\n    /**\n     * 长方体, 面朝内(默认为1x1x1)\n     * 中心点 [0,0,0]\n     * @param {number} width\n     * @param {number} height\n     * @param {number} depth\n     * @returns {TriMesh}\n     */\n    box(width = 1, height = 1, depth = 1) {\n        const format = this.format;\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const numVertices = 8;\n        const numTriangles = 12;\n        const numIndices = 3 * numTriangles;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, format.stride, this.usage);\n        let vba = new VertexBufferAccessor(format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [-width, -height, -depth]);\n        vba.setPosition(1, [+width, -height, -depth]);\n        vba.setPosition(2, [+width, +height, -depth]);\n        vba.setPosition(3, [-width, +height, -depth]);\n        vba.setPosition(4, [-width, -height, +depth]);\n        vba.setPosition(5, [+width, -height, +depth]);\n        vba.setPosition(6, [+width, +height, +depth]);\n        vba.setPosition(7, [-width, +height, +depth]);\n\n        for (let unit = 0; unit < MAX_UNITS; ++unit) {\n            if (this.hasTCoords[unit]) {\n                vba.setTCoord(unit, 0, [0.25, 0.75]);\n                vba.setTCoord(unit, 1, [0.75, 0.75]);\n                vba.setTCoord(unit, 2, [0.75, 0.25]);\n                vba.setTCoord(unit, 3, [0.25, 0.25]);\n                vba.setTCoord(unit, 4, [0, 1]);\n                vba.setTCoord(unit, 5, [1, 1]);\n                vba.setTCoord(unit, 6, [1, 0]);\n                vba.setTCoord(unit, 7, [0, 0]);\n            }\n        }\n        this.transformData(vba);\n\n        // Generate indices (outside view).\n        let ibuffer = new IndexBuffer(numIndices, 4, this.usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 0; indices[1] = 2; indices[2] = 1;\n        indices[3] = 0; indices[4] = 3; indices[5] = 2;\n\n        indices[6] = 0; indices[7] = 1; indices[8] = 5;\n        indices[9] = 0; indices[10] = 5; indices[11] = 4;\n        indices[12] = 0; indices[13] = 4; indices[14] = 7;\n        indices[15] = 0; indices[16] = 7; indices[17] = 3;\n        indices[18] = 6; indices[19] = 4; indices[20] = 5;\n        indices[21] = 6; indices[22] = 7; indices[23] = 4;\n        indices[24] = 6; indices[25] = 5; indices[26] = 1;\n        indices[27] = 6; indices[28] = 1; indices[29] = 2;\n        indices[30] = 6; indices[31] = 2; indices[32] = 3;\n        indices[33] = 6; indices[34] = 3; indices[35] = 7;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        let mesh = new TriMesh(format, vbuffer, ibuffer);\n        if (this.hasNormals) {\n            mesh.updateModelSpace(Visual.GU_NORMALS);\n        }\n        return mesh;\n    }\n\n    /**\n     * 圆柱体\n     *\n     * 中心(0,0,0)\n     * @param {number} axisSamples - 轴细分\n     * @param {number} radialSamples - 半径细分\n     * @param {number} radius - 圆柱体圆面半径\n     * @param {number} height - 圆柱体高度\n     * @param {boolean} open - 是否上下开口的\n     * @returns {TriMesh}\n     */\n    cylinder(axisSamples, radialSamples, radius, height, open = false) {\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n        const TWO_PI = _Math.TWO_PI;\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const cos = _Math.cos;\n        const sin = _Math.sin;\n        const hasNormals = this.hasNormals;\n        const inside = this.inside;\n\n        let unit, numVertices, vba;\n        let tcoord;\n        let t, i;\n        let vertexBuffer, ibuffer;\n        let mesh;\n\n        if (open) {\n            numVertices = axisSamples * (radialSamples + 1);\n            let numTriangles = 2 * (axisSamples - 1) * radialSamples;\n            let numIndices = 3 * numTriangles;\n\n            // Create a vertex buffer.\n            vertexBuffer = new VertexBuffer(numVertices, stride, usage);\n            vba = new VertexBufferAccessor(format, vertexBuffer);\n\n            // Generate geometry.\n            let invRS = 1 / radialSamples;\n            let invASm1 = 1 / (axisSamples - 1);\n            let halfHeight = 0.5 * height;\n            let r, a, aStart, angle;\n\n            // Generate points on the unit circle to be used in computing the\n            // mesh points on a cylinder slice.\n            let cs = new Float32Array(radialSamples + 1);\n            let sn = new Float32Array(radialSamples + 1);\n            for (r = 0; r < radialSamples; ++r) {\n                angle = TWO_PI * invRS * r;\n                cs[r] = cos(angle);\n                sn[r] = sin(angle);\n            }\n            cs[radialSamples] = cs[0];\n            sn[radialSamples] = sn[0];\n\n            // Generate the cylinder itself.\n            for (a = 0, i = 0; a < axisSamples; ++a) {\n                let axisFraction = a * invASm1;  // in [0,1]\n                let z = -halfHeight + height * axisFraction;\n\n                // Compute center of slice.\n                let sliceCenter = new Point(0, 0, z);\n\n                // Compute slice vertices with duplication at endpoint.\n                let save = i;\n                for (r = 0; r < radialSamples; ++r) {\n                    let radialFraction = r * invRS;  // in [0,1)\n                    let normal = new Vector(cs[r], sn[r], 0);\n                    t = sliceCenter.add(normal.scalar(radius));\n                    vba.setPosition(i, [t.x, t.y, t.z]);\n\n                    if (hasNormals) {\n                        if (inside) {\n                            normal = normal.negative();\n                        }\n                        vba.setNormal(i, [normal.x, normal.y, normal.z]);\n                    }\n\n                    tcoord = [radialFraction, axisFraction];\n                    for (unit = 0; unit < MAX_UNITS; ++unit) {\n                        if (this.hasTCoords[unit]) {\n                            vba.setTCoord(unit, i, tcoord);\n                        }\n                    }\n\n                    ++i;\n                }\n\n                vba.setPosition(i, vba.getPosition(save));\n                if (hasNormals) {\n                    vba.setNormal(i, vba.getNormal(save));\n                }\n\n                tcoord = [1, axisFraction];\n                for (unit = 0; unit < MAX_UNITS; ++unit) {\n                    if (this.hasTCoords[unit]) {\n                        vba.setTCoord(0, i, tcoord);\n                    }\n                }\n\n                ++i;\n            }\n            this.transformData(vba);\n\n            // Generate indices.\n            ibuffer = new IndexBuffer(numIndices, 4, usage);\n            let indices = new Uint32Array(ibuffer.getData().buffer);\n            let j = 0;\n            for (a = 0, aStart = 0; a < axisSamples - 1; ++a) {\n                let i0 = aStart;\n                let i1 = i0 + 1;\n                aStart += radialSamples + 1;\n                let i2 = aStart;\n                let i3 = i2 + 1;\n                for (i = 0; i < radialSamples; ++i, j += 6) {\n                    if (inside) {\n                        indices[j] = i0++;\n                        indices[j + 1] = i2;\n                        indices[j + 2] = i1;\n                        indices[j + 3] = i1++;\n                        indices[j + 4] = i2++;\n                        indices[j + 5] = i3++;\n                    }\n                    else { // outside view\n                        indices[j] = i0++;\n                        indices[j + 1] = i1;\n                        indices[j + 2] = i2;\n                        indices[j + 3] = i1++;\n                        indices[j + 4] = i3++;\n                        indices[j + 5] = i2++;\n                    }\n                }\n            }\n            mesh = new TriMesh(format, vertexBuffer, ibuffer);\n        }\n        else {\n            mesh = this.sphere(axisSamples, radialSamples, radius);\n            vertexBuffer = mesh.vertexBuffer;\n            numVertices = vertexBuffer.numElements;\n            vba = new VertexBufferAccessor(format, vertexBuffer);\n\n            // Flatten sphere at poles.\n            let hDiv2 = 0.5 * height;\n            vba.getPosition(numVertices - 2)[2] = -hDiv2;  // south pole\n            vba.getPosition(numVertices - 1)[2] = +hDiv2;  // north pole\n\n            // Remap z-values to [-h/2,h/2].\n            let zFactor = 2 / (axisSamples - 1);\n            let tmp0 = radius * (-1 + zFactor);\n            let tmp1 = 1 / (radius * (1 - zFactor));\n            for (i = 0; i < numVertices - 2; ++i) {\n                let pos = vba.getPosition(i);\n                pos[2] = hDiv2 * (-1 + tmp1 * (pos[2] - tmp0));\n                let adjust = radius / Math.hypot(pos[0], pos[1]);\n                pos[0] *= adjust;\n                pos[1] *= adjust;\n            }\n            this.transformData(vba);\n\n            if (hasNormals) {\n                mesh.updateModelSpace(Visual.GU_NORMALS);\n            }\n        }\n\n        mesh.modelBound.center = Point.ORIGIN;\n        mesh.modelBound.radius = Math.hypot(radius, height);\n        return mesh;\n    }\n    /**\n     * 球体\n     * 物体中心:(0,0,0), 半径: radius, 北极点(0,0,radius), 南极点(0,0,-radius)\n     *\n     * @param radius {float} 球体半径\n     * @param zSamples {int}\n     * @param radialSamples {int}\n     */\n    sphere(zSamples, radialSamples, radius) {\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n        const TWO_PI = _Math.TWO_PI;\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n        const hasNormal = this.hasNormals;\n        const inside = this.inside;\n\n        let zsm1 = zSamples - 1,\n            zsm2 = zSamples - 2,\n            zsm3 = zSamples - 3;\n        let rsp1 = radialSamples + 1;\n        let numVertices = zsm2 * rsp1 + 2;\n        let numTriangles = 2 * zsm2 * radialSamples;\n        let numIndices = 3 * numTriangles;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(format, vbuffer);\n\n        // Generate geometry.\n        let invRS = 1 / radialSamples;\n        let zFactor = 2 / zsm1;\n        let r, z, zStart, i, unit, tcoord, angle;\n\n        // Generate points on the unit circle to be used in computing the mesh\n        // points on a cylinder slice.\n        let sn = new Float32Array(rsp1);\n        let cs = new Float32Array(rsp1);\n        for (r = 0; r < radialSamples; ++r) {\n            angle = TWO_PI * invRS * r;\n            cs[r] = _Math.cos(angle);\n            sn[r] = _Math.sin(angle);\n        }\n        sn[radialSamples] = sn[0];\n        cs[radialSamples] = cs[0];\n\n        let t;\n\n        // Generate the cylinder itself.\n        for (z = 1, i = 0; z < zsm1; ++z) {\n            let zFraction = zFactor * z - 1;  // in (-1,1)\n            let zValue = radius * zFraction;\n\n            // Compute center of slice.\n            let sliceCenter = new Point(0, 0, zValue);\n\n            // Compute radius of slice.\n            let sliceRadius = _Math.sqrt(_Math.abs(radius * radius - zValue * zValue));\n\n            // Compute slice vertices with duplication at endpoint.\n            let save = i;\n            for (r = 0; r < radialSamples; ++r) {\n                let radialFraction = r * invRS;  // in [0,1)\n                let radial = new Vector(cs[r], sn[r], 0);\n                t = radial.scalar(sliceRadius).add(sliceCenter);\n                vba.setPosition(i, [t.x, t.y, t.z]);\n\n                if (hasNormal) {\n                    t.normalize();\n                    if (inside) {\n                        t = t.negative();\n                    }\n                    vba.setNormal(i, [t.x, t.y, t.z]);\n                }\n\n                tcoord = [radialFraction, 0.5 * (zFraction + 1)];\n                for (unit = 0; unit < MAX_UNITS; ++unit) {\n                    if (this.hasTCoords[unit]) {\n                        vba.setTCoord(unit, i, tcoord);\n                    }\n                }\n                ++i;\n            }\n\n            vba.setPosition(i, vba.getPosition(save));\n            if (hasNormal) {\n                vba.setNormal(i, vba.getNormal(save));\n            }\n\n            tcoord = [1, 0.5 * (zFraction + 1)];\n            for (unit = 0; unit < MAX_UNITS; ++unit) {\n                if (this.hasTCoords[unit]) {\n                    vba.setTCoord(unit, i, tcoord);\n                }\n            }\n            ++i;\n        }\n\n        // south pole\n        vba.setPosition(i, [0, 0, -radius]);\n        let nor = [0, 0, inside ? 1 : -1];\n        if (hasNormal) {\n            vba.setNormal(i, nor);\n        }\n        tcoord = [0.5, 0.5];\n        for (unit = 0; unit < MAX_UNITS; ++unit) {\n            if (this.hasTCoords[unit]) {\n                vba.setTCoord(unit, i, tcoord);\n            }\n        }\n        ++i;\n\n        // north pole\n        vba.setPosition(i, [0, 0, radius]);\n        nor = [0, 0, inside ? -1 : 1];\n        if (hasNormal) {\n            vba.setNormal(i, nor);\n        }\n        tcoord = [0.5, 1];\n        for (unit = 0; unit < MAX_UNITS; ++unit) {\n            if (this.hasTCoords[unit]) {\n                vba.setTCoord(unit, i, tcoord);\n            }\n        }\n        ++i;\n\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        let j;\n        for (z = 0, j = 0, zStart = 0; z < zsm3; ++z) {\n            let i0 = zStart;\n            let i1 = i0 + 1;\n            zStart += rsp1;\n            let i2 = zStart;\n            let i3 = i2 + 1;\n            for (i = 0; i < radialSamples; ++i, j += 6) {\n                if (inside) {\n                    indices[j] = i0++;\n                    indices[j + 1] = i2;\n                    indices[j + 2] = i1;\n                    indices[j + 3] = i1++;\n                    indices[j + 4] = i2++;\n                    indices[j + 5] = i3++;\n                }\n                else  // inside view\n                {\n                    indices[j] = i0++;\n                    indices[j + 1] = i1;\n                    indices[j + 2] = i2;\n                    indices[j + 3] = i1++;\n                    indices[j + 4] = i3++;\n                    indices[j + 5] = i2++;\n                }\n            }\n        }\n\n        // south pole triangles\n        let numVerticesM2 = numVertices - 2;\n        for (i = 0; i < radialSamples; ++i, j += 3) {\n            if (inside) {\n                indices[j] = i;\n                indices[j + 1] = i + 1;\n                indices[j + 2] = numVerticesM2;\n            }\n            else {\n                indices[j] = i;\n                indices[j + 1] = numVerticesM2;\n                indices[j + 2] = i + 1;\n            }\n        }\n\n        // north pole triangles\n        let numVerticesM1 = numVertices - 1,\n            offset = zsm3 * rsp1;\n        for (i = 0; i < radialSamples; ++i, j += 3) {\n            if (inside) {\n                indices[j] = i + offset;\n                indices[j + 1] = numVerticesM1;\n                indices[j + 2] = i + 1 + offset;\n            }\n            else {\n                indices[j] = i + offset;\n                indices[j + 1] = i + 1 + offset;\n                indices[j + 2] = numVerticesM1;\n            }\n        }\n\n        // The duplication of vertices at the seam cause the automatically\n        // generated bounding volume to be slightly off center.  Reset the bound\n        // to use the true information.\n        let mesh = new TriMesh(this.format, vbuffer, ibuffer);\n        mesh.modelBound.center = Point.ORIGIN;\n        mesh.modelBound.radius = radius;\n        return mesh;\n    }\n    /**\n     * 圆环\n     * @param circleSamples {int} 大圆细分\n     * @param radialSamples {int} 小圆细分\n     * @param outerRadius {float} 大圆半径\n     * @param innerRadius {float} 小圆半径\n     * @returns {TriMesh}\n     */\n    torus(circleSamples, radialSamples, outerRadius, innerRadius) {\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n        const hasNormals = this.hasNormals;\n        const inside = this.inside;\n        const MAX_UNITS = StandardMesh.MAX_UNITS;\n\n        const TWO_PI = _Math.TWO_PI;\n        const cos = _Math.cos;\n        const sin = _Math.sin;\n\n        let numVertices = (circleSamples + 1) * (radialSamples + 1);\n        let numTriangles = 2 * circleSamples * radialSamples;\n        let numIndices = 3 * numTriangles;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(format, vbuffer);\n\n        // Generate geometry.\n        let invCS = 1 / circleSamples;\n        let invRS = 1 / radialSamples;\n        let c, r, i, save, unit, tcoord;\n        let circleFraction, theta, cosTheta, sinTheta;\n        let radialFraction, phi, cosPhi, sinPhi;\n        let radial = Vector.ZERO;\n        let torusMiddle = Vector.ZERO;\n        let normal = Vector.ZERO;\n\n        // Generate the cylinder itself.\n        for (c = 0, i = 0; c < circleSamples; ++c) {\n            // Compute center point on torus circle at specified angle.\n            circleFraction = c * invCS;  // in [0,1)\n            theta = TWO_PI * circleFraction;\n            cosTheta = cos(theta);\n            sinTheta = sin(theta);\n            radial.assign(cosTheta, sinTheta, 0);\n            torusMiddle.assign(cosTheta * outerRadius, sinTheta * outerRadius, 0);\n\n            // Compute slice vertices with duplication at endpoint.\n            save = i;\n            for (r = 0; r < radialSamples; ++r) {\n                radialFraction = r * invRS;  // in [0,1)\n                phi = TWO_PI * radialFraction;\n                cosPhi = cos(phi);\n                sinPhi = sin(phi);\n\n                normal.assign(innerRadius * cosTheta * cosPhi, innerRadius * sinTheta * cosPhi, innerRadius * sinPhi);\n                vba.setPosition(i, torusMiddle.add(normal));\n                if (hasNormals) {\n                    if (inside) {\n                        normal.assign(-normal.x, -normal.y, -normal.z);\n                    }\n                    vba.setNormal(i, normal);\n                }\n\n                tcoord = [radialFraction, circleFraction];\n                for (unit = 0; unit < MAX_UNITS; ++unit) {\n                    if (this.hasTCoords[unit]) {\n                        vba.setTCoord(unit, i, tcoord);\n                    }\n                }\n\n                ++i;\n            }\n\n            vba.setPosition(i, vba.getPosition(save));\n            if (hasNormals) {\n                vba.setNormal(i, vba.getNormal(save));\n            }\n\n            tcoord = [1, circleFraction];\n            for (unit = 0; unit < MAX_UNITS; ++unit) {\n                if (this.hasTCoords[unit]) {\n                    vba.setTCoord(unit, i, tcoord);\n                }\n            }\n\n            ++i;\n        }\n\n        // Duplicate the cylinder ends to form a torus.\n        for (r = 0; r <= radialSamples; ++r, ++i) {\n            vba.setPosition(i, vba.getPosition(r));\n            if (hasNormals) {\n                vba.setNormal(i, vba.getNormal(r));\n            }\n\n            for (unit = 0; unit < MAX_UNITS; ++unit) {\n                if (this.hasTCoords[unit]) {\n                    vba.setTCoord(unit, i, [vba.getTCoord(unit, r)[0], 1]);\n                }\n            }\n        }\n\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        let i0, i1, i2, i3, offset = 0;\n        let cStart = 0;\n        for (c = 0; c < circleSamples; ++c) {\n            i0 = cStart;\n            i1 = i0 + 1;\n            cStart += radialSamples + 1;\n            i2 = cStart;\n            i3 = i2 + 1;\n            for (i = 0; i < radialSamples; ++i, offset += 6) {\n                if (inside) {\n                    indices[offset] = i0++;\n                    indices[offset + 1] = i1;\n                    indices[offset + 2] = i2;\n                    indices[offset + 3] = i1++;\n                    indices[offset + 4] = i3++;\n                    indices[offset + 5] = i2++;\n                }\n                else {  // inside view\n                    indices[offset] = i0++;\n                    indices[offset + 1] = i2;\n                    indices[offset + 2] = i1;\n                    indices[offset + 3] = i1++;\n                    indices[offset + 4] = i2++;\n                    indices[offset + 5] = i3++;\n                }\n            }\n        }\n\n        // The duplication of vertices at the seam cause the automatically\n        // generated bounding volume to be slightly off center.  Reset the bound\n        // to use the true information.\n        let mesh = new TriMesh(format, vbuffer, ibuffer);\n        mesh.modelBound.center.assign(0, 0, 0);\n        mesh.modelBound.radius = outerRadius;\n        return mesh;\n    }\n\n    /**\n     * 四面体\n     */\n    tetrahedron() {\n        const fSqrt2Div3 = _Math.sqrt(2) / 3;\n        const fSqrt6Div3 = _Math.sqrt(6) / 3;\n        const fOneThird = 1 / 3;\n\n        const numVertices = 4;\n        const numTriangles = 4;\n        const numIndices = 12;\n        const stride = this.format.stride;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, this.usage);\n        let vba = new VertexBufferAccessor(this.format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [0, 0, 1]);\n        vba.setPosition(1, [2 * fSqrt2Div3, 0, -fOneThird]);\n        vba.setPosition(2, [-fSqrt2Div3, fSqrt6Div3, -fOneThird]);\n        vba.setPosition(3, [-fSqrt2Div3, -fSqrt6Div3, -fOneThird]);\n        this.createPlatonicNormals(vba);\n        this.createPlatonicUVs(vba);\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, this.usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 0; indices[1] = 1; indices[2] = 2;\n        indices[3] = 0; indices[4] = 2; indices[5] = 3;\n        indices[6] = 0; indices[7] = 3; indices[8] = 1;\n        indices[9] = 1; indices[10] = 3; indices[11] = 2;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        return new TriMesh(this.format, vbuffer, ibuffer);\n    }\n\n    hexahedron() {\n        const fSqrtThird = _Math.sqrt(1 / 3);\n\n        const numVertices = 8;\n        const numTriangles = 12;\n        const numIndices = 36;\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [-fSqrtThird, -fSqrtThird, -fSqrtThird]);\n        vba.setPosition(1, [fSqrtThird, -fSqrtThird, -fSqrtThird]);\n        vba.setPosition(2, [fSqrtThird, fSqrtThird, -fSqrtThird]);\n        vba.setPosition(3, [-fSqrtThird, fSqrtThird, -fSqrtThird]);\n        vba.setPosition(4, [-fSqrtThird, -fSqrtThird, fSqrtThird]);\n        vba.setPosition(5, [fSqrtThird, -fSqrtThird, fSqrtThird]);\n        vba.setPosition(6, [fSqrtThird, fSqrtThird, fSqrtThird]);\n        vba.setPosition(7, [-fSqrtThird, fSqrtThird, fSqrtThird]);\n        this.createPlatonicNormals(vba);\n        this.createPlatonicUVs(vba);\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 0;\n        indices[1] = 3;\n        indices[2] = 2;\n        indices[3] = 0;\n        indices[4] = 2;\n        indices[5] = 1;\n        indices[6] = 0;\n        indices[7] = 1;\n        indices[8] = 5;\n        indices[9] = 0;\n        indices[10] = 5;\n        indices[11] = 4;\n        indices[12] = 0;\n        indices[13] = 4;\n        indices[14] = 7;\n        indices[15] = 0;\n        indices[16] = 7;\n        indices[17] = 3;\n        indices[18] = 6;\n        indices[19] = 5;\n        indices[20] = 1;\n        indices[21] = 6;\n        indices[22] = 1;\n        indices[23] = 2;\n        indices[24] = 6;\n        indices[25] = 2;\n        indices[26] = 3;\n        indices[27] = 6;\n        indices[28] = 3;\n        indices[29] = 7;\n        indices[30] = 6;\n        indices[31] = 7;\n        indices[32] = 4;\n        indices[33] = 6;\n        indices[34] = 4;\n        indices[35] = 5;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        return new TriMesh(this.format, vbuffer, ibuffer);\n    }\n    octahedron() {\n        const numVertices = 6;\n        const numTriangles = 8;\n        const numIndices = 24;\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [1, 0, 0]);\n        vba.setPosition(1, [-1, 0, 0]);\n        vba.setPosition(2, [0, 1, 0]);\n        vba.setPosition(3, [0, -1, 0]);\n        vba.setPosition(4, [0, 0, 1]);\n        vba.setPosition(5, [0, 0, -1]);\n        this.createPlatonicNormals(vba);\n        this.createPlatonicUVs(vba);\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 4;\n        indices[1] = 0;\n        indices[2] = 2;\n        indices[3] = 4;\n        indices[4] = 2;\n        indices[5] = 1;\n        indices[6] = 4;\n        indices[7] = 1;\n        indices[8] = 3;\n        indices[9] = 4;\n        indices[10] = 3;\n        indices[11] = 0;\n        indices[12] = 5;\n        indices[13] = 2;\n        indices[14] = 0;\n        indices[15] = 5;\n        indices[16] = 1;\n        indices[17] = 2;\n        indices[18] = 5;\n        indices[19] = 3;\n        indices[20] = 1;\n        indices[21] = 5;\n        indices[22] = 0;\n        indices[23] = 3;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        return new TriMesh(this.format, vbuffer, ibuffer);\n    }\n\n    dodecahedron() {\n        const a = 1 / _Math.sqrt(3);\n        const b = _Math.sqrt((3 - _Math.sqrt(5)) / 6);\n        const c = _Math.sqrt((3 + _Math.sqrt(5)) / 6);\n\n        const numVertices = 20;\n        const numTriangles = 36;\n        const numIndices = 108;\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(this.format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [a, a, a]);\n        vba.setPosition(1, [a, a, -a]);\n        vba.setPosition(2, [a, -a, a]);\n        vba.setPosition(3, [a, -a, -a]);\n        vba.setPosition(4, [-a, a, a]);\n        vba.setPosition(5, [-a, a, -a]);\n        vba.setPosition(6, [-a, -a, a]);\n        vba.setPosition(7, [-a, -a, -a]);\n        vba.setPosition(8, [b, c, 0]);\n        vba.setPosition(9, [-b, c, 0]);\n        vba.setPosition(10, [b, -c, 0]);\n        vba.setPosition(11, [-b, -c, 0]);\n        vba.setPosition(12, [c, 0, b]);\n        vba.setPosition(13, [c, 0, -b]);\n        vba.setPosition(14, [-c, 0, b]);\n        vba.setPosition(15, [-c, 0, -b]);\n        vba.setPosition(16, [0, b, c]);\n        vba.setPosition(17, [0, -b, c]);\n        vba.setPosition(18, [0, b, -c]);\n        vba.setPosition(19, [0, -b, -c]);\n        this.createPlatonicNormals(vba);\n        this.createPlatonicUVs(vba);\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 0;\n        indices[1] = 8;\n        indices[2] = 9;\n        indices[3] = 0;\n        indices[4] = 9;\n        indices[5] = 4;\n        indices[6] = 0;\n        indices[7] = 4;\n        indices[8] = 16;\n        indices[9] = 0;\n        indices[10] = 12;\n        indices[11] = 13;\n        indices[12] = 0;\n        indices[13] = 13;\n        indices[14] = 1;\n        indices[15] = 0;\n        indices[16] = 1;\n        indices[17] = 8;\n        indices[18] = 0;\n        indices[19] = 16;\n        indices[20] = 17;\n        indices[21] = 0;\n        indices[22] = 17;\n        indices[23] = 2;\n        indices[24] = 0;\n        indices[25] = 2;\n        indices[26] = 12;\n        indices[27] = 8;\n        indices[28] = 1;\n        indices[29] = 18;\n        indices[30] = 8;\n        indices[31] = 18;\n        indices[32] = 5;\n        indices[33] = 8;\n        indices[34] = 5;\n        indices[35] = 9;\n        indices[36] = 12;\n        indices[37] = 2;\n        indices[38] = 10;\n        indices[39] = 12;\n        indices[40] = 10;\n        indices[41] = 3;\n        indices[42] = 12;\n        indices[43] = 3;\n        indices[44] = 13;\n        indices[45] = 16;\n        indices[46] = 4;\n        indices[47] = 14;\n        indices[48] = 16;\n        indices[49] = 14;\n        indices[50] = 6;\n        indices[51] = 16;\n        indices[52] = 6;\n        indices[53] = 17;\n        indices[54] = 9;\n        indices[55] = 5;\n        indices[56] = 15;\n        indices[57] = 9;\n        indices[58] = 15;\n        indices[59] = 14;\n        indices[60] = 9;\n        indices[61] = 14;\n        indices[62] = 4;\n        indices[63] = 6;\n        indices[64] = 11;\n        indices[65] = 10;\n        indices[66] = 6;\n        indices[67] = 10;\n        indices[68] = 2;\n        indices[69] = 6;\n        indices[70] = 2;\n        indices[71] = 17;\n        indices[72] = 3;\n        indices[73] = 19;\n        indices[74] = 18;\n        indices[75] = 3;\n        indices[76] = 18;\n        indices[77] = 1;\n        indices[78] = 3;\n        indices[79] = 1;\n        indices[80] = 13;\n        indices[81] = 7;\n        indices[82] = 15;\n        indices[83] = 5;\n        indices[84] = 7;\n        indices[85] = 5;\n        indices[86] = 18;\n        indices[87] = 7;\n        indices[88] = 18;\n        indices[89] = 19;\n        indices[90] = 7;\n        indices[91] = 11;\n        indices[92] = 6;\n        indices[93] = 7;\n        indices[94] = 6;\n        indices[95] = 14;\n        indices[96] = 7;\n        indices[97] = 14;\n        indices[98] = 15;\n        indices[99] = 7;\n        indices[100] = 19;\n        indices[101] = 3;\n        indices[102] = 7;\n        indices[103] = 3;\n        indices[104] = 10;\n        indices[105] = 7;\n        indices[106] = 10;\n        indices[107] = 11;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        return new TriMesh(format, vbuffer, ibuffer);\n    }\n\n    icosahedron() {\n        const goldenRatio = 0.5 * (1 + _Math.sqrt(5));\n        const invRoot = 1 / _Math.sqrt(1 + goldenRatio * goldenRatio);\n        const u = goldenRatio * invRoot;\n        const v = invRoot;\n\n        const numVertices = 12;\n        const numTriangles = 20;\n        const numIndices = 60;\n        const format = this.format;\n        const stride = format.stride;\n        const usage = this.usage;\n\n        // Create a vertex buffer.\n        let vbuffer = new VertexBuffer(numVertices, stride, usage);\n        let vba = new VertexBufferAccessor(this.format, vbuffer);\n\n        // Generate geometry.\n        vba.setPosition(0, [u, v, 0]);\n        vba.setPosition(1, [-u, v, 0]);\n        vba.setPosition(2, [u, -v, 0]);\n        vba.setPosition(3, [-u, -v, 0]);\n        vba.setPosition(4, [v, 0, u]);\n        vba.setPosition(5, [v, 0, -u]);\n        vba.setPosition(6, [-v, 0, u]);\n        vba.setPosition(7, [-v, 0, -u]);\n        vba.setPosition(8, [0, u, v]);\n        vba.setPosition(9, [0, -u, v]);\n        vba.setPosition(10, [0, u, -v]);\n        vba.setPosition(11, [0, -u, -v]);\n\n        this.createPlatonicNormals(vba);\n        this.createPlatonicUVs(vba);\n        this.transformData(vba);\n\n        // Generate indices.\n        let ibuffer = new IndexBuffer(numIndices, 4, usage);\n        let indices = new Uint32Array(ibuffer.getData().buffer);\n        indices[0] = 0;\n        indices[1] = 8;\n        indices[2] = 4;\n        indices[3] = 0;\n        indices[4] = 5;\n        indices[5] = 10;\n        indices[6] = 2;\n        indices[7] = 4;\n        indices[8] = 9;\n        indices[9] = 2;\n        indices[10] = 11;\n        indices[11] = 5;\n        indices[12] = 1;\n        indices[13] = 6;\n        indices[14] = 8;\n        indices[15] = 1;\n        indices[16] = 10;\n        indices[17] = 7;\n        indices[18] = 3;\n        indices[19] = 9;\n        indices[20] = 6;\n        indices[21] = 3;\n        indices[22] = 7;\n        indices[23] = 11;\n        indices[24] = 0;\n        indices[25] = 10;\n        indices[26] = 8;\n        indices[27] = 1;\n        indices[28] = 8;\n        indices[29] = 10;\n        indices[30] = 2;\n        indices[31] = 9;\n        indices[32] = 11;\n        indices[33] = 3;\n        indices[34] = 11;\n        indices[35] = 9;\n        indices[36] = 4;\n        indices[37] = 2;\n        indices[38] = 0;\n        indices[39] = 5;\n        indices[40] = 0;\n        indices[41] = 2;\n        indices[42] = 6;\n        indices[43] = 1;\n        indices[44] = 3;\n        indices[45] = 7;\n        indices[46] = 3;\n        indices[47] = 1;\n        indices[48] = 8;\n        indices[49] = 6;\n        indices[50] = 4;\n        indices[51] = 9;\n        indices[52] = 4;\n        indices[53] = 6;\n        indices[54] = 10;\n        indices[55] = 5;\n        indices[56] = 7;\n        indices[57] = 11;\n        indices[58] = 7;\n        indices[59] = 5;\n\n        if (this.inside) {\n            this.reverseTriangleOrder(numTriangles, indices);\n        }\n\n        return new TriMesh(format, vbuffer, ibuffer);\n    }\n}\n\ndef(StandardMesh, 'MAX_UNITS', VertexFormat.MAX_TCOORD_UNITS);\n\nexport { StandardMesh };\n","import { Triangles } from './Triangles';\nimport { D3Object } from '../../core/D3Object';\n\nclass TriStrip extends Triangles {\n\n    /**\n     * @param {VertexFormat} format\n     * @param {VertexBuffer} vertexBuffer\n     * @param {number} indexSize\n     */\n    constructor(format, vertexBuffer, indexSize) {\n        super(Visual.PT_TRISTRIP, format, vertexBuffer, null);\n        console.assert(indexSize === 2 || indexSize === 4, 'Invalid index size.');\n\n        const numVertices = this.vertexBuffer.numElements;\n        this.indexBuffer = new IndexBuffer(numVertices, indexSize);\n        let i, indices;\n\n        if (indexSize == 2) {\n            indices = new Uint16Array(this.indexBuffer.getData());\n        }\n        else // indexSize == 4\n        {\n            indices = new Uint32Array(this.indexBuffer.getData());\n        }\n        for (i = 0; i < numVertices; ++i) {\n            indices[i] = i;\n        }\n    }\n\n    /**\n     * 获取网格中的三角形数量\n     * @returns {number}\n     */\n    getNumTriangles() {\n        return this.indexBuffer.numElements - 2;\n    }\n\n    /**\n     * 获取位置I处的三角形索引\n     * @param {number} i\n     * @param {Array<number>} output - 3 elements\n     * @returns {boolean}\n     */\n    getTriangle(i, output) {\n        if (0 <= i && i < this.getNumTriangles()) {\n            let data = new Uint32Array(this.indexBuffer.getData());\n            output[0] = data[i];\n            if (i & 1) {\n                output[1] = data[i + 2];\n                output[2] = data[i + 1];\n            }\n            else {\n                output[1] = data[i + 1];\n                output[2] = data[i + 2];\n            }\n            return output[0] !== output[1] &&\n                output[0] !== output[2] &&\n                output[1] !== output[2];\n        }\n        return false;\n    }\n}\n\nD3Object.Register('TriStrip', TriStrip.factory);\nexport { TriStrip };\n","import { Controller } from './Controller';\nimport { D3Object } from '../../core/D3Object';\nimport { Renderer } from '../renderer/Renderer';\nimport { VertexBufferAccessor } from '../resources/namespace';\nimport { Transform } from '../dataTypes/Transform';\nimport { Point } from '../../math/index';\nimport { Visual } from '../sceneTree/namespace';\n\nclass SkinController extends Controller {\n\n    /**\n     * The numbers of vertices and bones are fixed for the lifetime of the object.\n     * @param {number} numVertices - numbers of vertices\n     * @param {number} numBones - numbers of bones\n     */\n    constructor(numVertices = 0, numBones = 0) {\n        super();\n        this.numVertices = numVertices;\n        this.numBones = numBones;\n        this.__init();\n    }\n\n    /**\n     * @private\n     */\n    __init() {\n        const { numBones, numVertices } = this;\n        if (numVertices > 0) {\n            this.bones = new Array(numBones);         // bones[numBones]                -> Node\n            this.weights = new Array(numVertices);    // weights[numVertices][numBones] -> number\n            this.offsets = new Array(numVertices);    // offsets[numVertices][numBones] -> Point\n\n            this.weights.fill(new Array(numBones));\n            this.offsets.fill(new Array(numBones));\n        }\n    }\n\n    /**\n     * @param {number} applicationTime - milliseconds\n     * @returns {boolean}\n     */\n    update(applicationTime) {\n        if (!super.update(applicationTime)) {\n            return false;\n        }\n\n        let visual = this.object;\n        console.assert(\n            this.numVertices === visual.vertexBuffer.numElements,\n            'SkinController must have the same number of vertices as the vertex buffer.'\n        );\n\n        let vba = VertexBufferAccessor.fromVisual(visual);\n\n        // The skin vertices are calculated in the bone world coordinate system,\n        // so the visual's world transform must be the identity.\n        visual.worldTransform = Transform.IDENTITY;\n        visual.worldTransformIsCurrent = true;\n\n        // Compute the skin vertex locations.\n        const { numBones, numVertices } = this;\n        let i, j, weight, offset, worldOffset, position;\n        for (i = 0; i < numVertices; ++i) {\n            position = Point.ORIGIN;\n            for (j = 0; j < numBones; ++j) {\n                weight = this.weights[i][j];\n                if (weight !== 0) {\n                    offset = this.offsets[i][j];\n                    worldOffset = this.bones[j].worldTransform.mulPoint(offset);  // bones[j].worldTransform * offset\n                    position.copy(position.add(worldOffset.scalar(weight)));      // position += worldOffset * weight\n                }\n            }\n            vba.setPosition(i, position);\n        }\n\n        visual.updateModelSpace(Visual.GU_NORMALS);\n        Renderer.updateAll(visual.vertexBuffer);\n        return true;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        let numVertices = inStream.readUint32();\n        let numBones = inStream.readUint32();\n\n        this.numVertices = numVertices;\n        this.numBones = numBones;\n        this.__init();\n        let total = this.numVertices * this.numBones, i;\n        let t = inStream.readArray(total);\n        let t1 = inStream.readSizedPointArray(total);\n        for (i = 0; i < numVertices; ++i) {\n            this.weights[i] = t.slice(i * numBones, (i + 1) * numBones);\n            this.offsets[i] = t1.slice(i * numBones, (i + 1) * numBones);\n        }\n        this.bones = inStream.readSizedPointerArray(numBones);\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        inStream.resolveArrayLink(this.numBones, this.bones);\n    }\n}\n\nD3Object.Register('SkinController', SkinController.factory.bind(SkinController));\n\nexport { SkinController };","import { D3Object } from '../../core/D3Object';\n\nclass ShaderFloat extends D3Object {\n    /**\n     * @param {number} numRegisters\n     */\n    constructor(numRegisters) {\n        super();\n        this.numElements = 0;\n        this.data = null;\n        this.allowUpdater = false;\n        this.setNumRegisters(numRegisters);\n    }\n\n    /**\n     * @param {number} numRegisters\n     */\n    setNumRegisters(numRegisters) {\n        console.assert(numRegisters > 0, 'Number of registers must be positive');\n        this.numElements = 4 * numRegisters;\n        this.data = new Float32Array(this.numElements);\n    }\n\n    getNumRegisters() {\n        return this.numElements / 4;\n    }\n\n    item(index, val) {\n        console.assert(0 <= index && index < this.numElements, 'Invalid index');\n        if (val === undefined) {\n            return this.data[index];\n        }\n        this.data[index] = val;\n    }\n\n    /**\n     * @param {number} i - location of elements\n     * @param {Float32Array} data 4-tuple float\n     */\n    setOneRegister(i, data) {\n        console.assert(0 <= i && i < this.numElements / 4, 'Invalid register');\n        this.data.set(data.subarray(0, 4), 4 * i);\n    }\n\n    /**\n     * @param {Float32Array} data\n     */\n    setRegister(data) {\n        this.data.set(data.subarray(0, this.numElements));\n    }\n\n    /**\n     * @param {number} i\n     * @returns {Float32Array}\n     */\n    getOneRegister(i) {\n        console.assert(0 <= i && i < this.numElements / 4, 'Invalid register');\n        return new Float32Array(this.data.subarray(4 * i, 4 * i + 4));\n    }\n\n    getRegisters() {\n        return new Float32Array(this.data.buffer);\n    }\n\n    /**\n     * @param {Float32Array} data\n     */\n    copy(data) {\n        this.data.set(data);\n        return this;\n    }\n\n    /**\n     * @param {Visual} visual\n     * @param {Camera} camera\n     * @abstract\n     */\n    update(visual, camera) { }\n\n    /**\n     * @param {Instream} inStream \n     */\n    load(inStream) {\n        super.load(inStream);\n        this.data = new Float32Array(inStream.readFloatArray());\n        this.numElements = this.data.length;\n        this.allowUpdater = inStream.readBool();\n    }\n    \n    save(outStream) {\n        super.save(outStream);\n        outStream.writeFloat32Array(this.numElements, this.data);\n        outStream.writeBool(this.allowUpdater);\n    }\n}\n\nexport { ShaderFloat };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightAmbientConstant extends ShaderFloat {\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n\n        this.light = light;\n        this.allowUpdater = true;\n    }\n\n    update(visual, camera) {\n        this.copy(this.light.ambient);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightAmbientConstant', LightAmbientConstant.factory);\n\nexport { LightAmbientConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightDiffuseConstant extends ShaderFloat {\n\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.copy(this.light.diffuse);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightDiffuseConstant', LightDiffuseConstant.factory);\n\nexport { LightDiffuseConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightSpecularConstant extends ShaderFloat {\n\n    /**\n     * @param light {Light}\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.copy(this.light.specular);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightSpecularConstant', LightSpecularConstant.factory);\n\nexport { LightSpecularConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightAttenuationConstant extends ShaderFloat {\n\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.data[0] = this.light.constant;\n        this.data[1] = this.light.linear;\n        this.data[2] = this.light.quadratic;\n        this.data[3] = this.light.intensity;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightAttenuationConstant', LightAttenuationConstant.factory);\n\nexport { LightAttenuationConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightSpotConstant extends ShaderFloat {\n\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.data[0] = this.light.angle;\n        this.data[1] = this.light.cosAngle;\n        this.data[2] = this.light.sinAngle;\n        this.data[3] = this.light.exponent;\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightSpotConstant', LightSpotConstant.factory);\n\nexport { LightSpotConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightModelDirectionConstant extends ShaderFloat {\n\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        const worldInvMatrix = visual.worldTransform.inverse();\n        this.copy(worldInvMatrix.mulPoint(this.light.direction));\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightModelDirectionConstant', LightModelDirectionConstant.factory);\n\nexport { LightModelDirectionConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightModelPositionConstant extends ShaderFloat {\n\n    /**\n     * @param {Light} light\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        const worldInvMatrix = visual.worldTransform.inverse();\n        this.copy(worldInvMatrix.mulPoint(this.light.position));\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n};\n\nD3Object.Register('LightModelPositionConstant', LightModelPositionConstant.factory);\n\nexport { LightModelPositionConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightWorldDirectionConstant extends ShaderFloat {\n\n    /**\n     * @param light {Light}\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.copy(this.light.direction);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightWorldDirectionConstant', LightWorldDirectionConstant.factory);\n\nexport { LightWorldDirectionConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass LightWorldPositionConstant extends ShaderFloat {\n\n    /**\n     * @param light {Light}\n     */\n    constructor(light) {\n        super(1);\n        this.allowUpdater = true;\n        this.light = light;\n    }\n\n    update(visual, camera) {\n        this.copy(this.light.position);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.light = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.light = inStream.resolveLink(this.light);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.light);\n    }\n}\n\nD3Object.Register('LightWorldPositionConstant', LightWorldPositionConstant.factory);\n\nexport { LightWorldPositionConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass MaterialAmbientConstant extends ShaderFloat {\n\n    /**\n     * @param {Material} material\n     */\n    constructor(material) {\n        super(1);\n        this.allowUpdater = true;\n        this.material = material;\n    }\n\n    update(visual, camera) {\n        this.copy(this.material.ambient);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.material = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.material = inStream.resolveLink(this.material);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.material);\n    }\n}\n\nD3Object.Register('MaterialAmbientConstant', MaterialAmbientConstant.factory);\n\nexport { MaterialAmbientConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass MaterialDiffuseConstant extends ShaderFloat {\n\n    /**\n     * @param material {Material} 材质\n     */\n    constructor(material) {\n        super(1);\n        this.allowUpdater = true;\n        this.material = material;\n    }\n\n    update(visual, camera) {\n        this.copy(this.material.diffuse);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.material = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.material = inStream.resolveLink(this.material);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.material);\n    }\n};\n\nD3Object.Register('MaterialDiffuseConstant', MaterialDiffuseConstant.factory);\n\nexport { MaterialDiffuseConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass MaterialEmissiveConstant extends ShaderFloat {\n\n    /**\n     * @param {Material} material\n     */\n    constructor(material) {\n        super(1);\n        this.allowUpdater = true;\n        this.material = material;\n    }\n\n    update(visual, camera) {\n        this.copy(this.material.emissive);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.material = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.material = inStream.resolveLink(this.material);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.material);\n    }\n};\n\nD3Object.Register('MaterialEmissiveConstant', MaterialEmissiveConstant.factory);\n\nexport { MaterialEmissiveConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass MaterialSpecularConstant extends ShaderFloat {\n\n    /**\n     * @param {Material} material\n     */\n    constructor(material) {\n        super(1);\n        this.allowUpdater = true;\n        this.material = material;\n    }\n\n    /**\n     * @param {Visual} visual\n     * @param {Camera} camera\n     */\n    update(visual, camera) {\n        this.copy(this.material.specular);\n    }\n\n    load(inStream) {\n        super.load(inStream);\n        this.material = inStream.readPointer();\n    }\n\n    link(inStream) {\n        super.link(inStream);\n        this.material = inStream.resolveLink(this.material);\n    }\n\n    save(outStream) {\n        super.save(outStream);\n        outStream.writePointer(this.material);\n    }\n};\n\nD3Object.Register('MaterialSpecularConstant', MaterialSpecularConstant.factory);\n\nexport { MaterialSpecularConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass WMatrixConstant extends ShaderFloat {\n\n    constructor() {\n        super(4);\n        this.allowUpdater = true;\n    }\n\n    update(visual, camera) {\n        const worldMatrix = visual.worldTransform.toMatrix();\n        this.copy(worldMatrix);\n    }\n}\n\nD3Object.Register('WMatrixContant', WMatrixConstant.factory.bind(WMatrixConstant));\n\nexport { WMatrixConstant };","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass PVWMatrixConstant extends ShaderFloat {\n    constructor() {\n        super(4);\n        this.allowUpdater = true;\n    }\n\n    update(visual, camera) {\n        const projViewMatrix = camera.projectionViewMatrix;\n        const worldMatrix = visual.worldTransform.toMatrix();\n        this.copy(projViewMatrix.mul(worldMatrix));\n    }\n}\n\nD3Object.Register('PVWMatrixConstant', PVWMatrixConstant.factory);\n\nexport { PVWMatrixConstant };\n","import { ShaderFloat } from './ShaderFloat';\nimport { D3Object } from '../../core/D3Object';\n\nclass CameraModelPositionConstant extends ShaderFloat {\n    constructor() {\n        super(1);\n        this.allowUpdater = true;\n    }\n\n    update(visual, camera) {\n        const worldPosition = camera.position;\n        const worldInvMatrix = visual.worldTransform.inverse();\n        this.copy(worldInvMatrix.mulPoint(worldPosition));\n    }\n}\n\nD3Object.Register('CameraModelPositionConstant', CameraModelPositionConstant.factory);\n\nexport { CameraModelPositionConstant };\n","import { DECLARE_ENUM } from '../../util/util';\n\nimport {\n    VisualEffect, VisualEffectInstance, VisualTechnique, VisualPass,\n    Program, Shader, VertexShader, FragShader,\n    AlphaState, CullState, DepthState, OffsetState, StencilState\n} from '../shaders/namespace';\n\nimport { PVWMatrixConstant } from '../shaderFloat/namespace';\n\nclass DefaultEffect extends VisualEffect {\n    constructor() {\n        super();\n\n        let vs = new VertexShader('DefaultVS', 1, 1, 0);\n        vs.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vs.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vs.setProgram(DefaultEffect.VS);\n\n        let fs = new FragShader('DefaultFS');\n        fs.setProgram(DefaultEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('DefaultProgram', vs, fs);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    createInstance() {\n        var instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        return instance;\n    }\n}\n\nDECLARE_ENUM(DefaultEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nvoid main(){\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nout vec4 fragColor;\nvoid main (void) {\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}`});\n\nexport { DefaultEffect };\n","import { DECLARE_ENUM } from '../../util/util';\n\nimport {\n    VisualEffect, VisualEffectInstance, VisualTechnique, VisualPass,\n    Program, Shader, VertexShader, FragShader,\n    AlphaState, CullState, DepthState, OffsetState, StencilState\n} from '../shaders/namespace';\nimport { PVWMatrixConstant, MaterialEmissiveConstant, MaterialAmbientConstant, LightAmbientConstant, LightAttenuationConstant } from '../shaderFloat/namespace';\n\nclass LightAmbEffect extends VisualEffect {\n\n    constructor() {\n        super();\n        let vs = new VertexShader('LightAmbEffectVS', 1, 5);\n        vs.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vs.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vs.setConstant(1, 'MaterialEmissive', Shader.VT_VEC4);\n        vs.setConstant(2, 'MaterialAmbient', Shader.VT_VEC4);\n        vs.setConstant(3, 'LightAmbient', Shader.VT_VEC4);\n        vs.setConstant(4, 'LightAttenuation', Shader.VT_VEC4);\n        vs.setProgram(LightAmbEffect.VS);\n\n        let fs = new FragShader('LightAmbEffectFS', 1);\n        fs.setProgram(LightAmbEffect.FS);\n\n        let program = new Program('LightAmbProgram', vs, fs);\n\n        let pass = new VisualPass();\n        pass.program = program;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setVertexConstant(0, 1, new MaterialEmissiveConstant(material));\n        instance.setVertexConstant(0, 2, new MaterialAmbientConstant(material));\n        instance.setVertexConstant(0, 3, new LightAmbientConstant(light));\n        instance.setVertexConstant(0, 4, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n    static createUniqueInstance(light, material) {\n        let effect = new LightAmbEffect();\n        return effect.createInstance(light, material);\n    }\n}\n\nDECLARE_ENUM(LightAmbEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec3 LightAmbient;\nuniform vec4 LightAttenuation;    // [constant, linear, quadratic, intensity]\nlayout(location=0) in vec3 modelPosition;\nout vec3 vColor;\nvoid main(){\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n    vec3 ambient = LightAttenuation.w * LightAmbient;\n    vColor = MaterialEmissive + MaterialAmbient * ambient;\n}`,\n    FS: `#version 300 es\nprecision highp float;\nin vec3 vColor;\nout vec4 fragColor;\nvoid main(){\n    fragColor = vec4(vColor, 1.0);\n}`});\n\nexport { LightAmbEffect };","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport {\n    VisualEffect,\n    VisualEffectInstance,\n    VisualTechnique,\n    VisualPass,\n    Program,\n    Shader,\n    VertexShader,\n    FragShader,\n    AlphaState,\n    CullState,\n    DepthState,\n    OffsetState,\n    StencilState\n} from '../shaders/namespace';\nimport {\n    PVWMatrixConstant,\n    CameraModelPositionConstant,\n    MaterialEmissiveConstant,\n    MaterialAmbientConstant,\n    MaterialDiffuseConstant,\n    MaterialSpecularConstant,\n    LightModelDirectionConstant,\n    LightAmbientConstant,\n    LightDiffuseConstant,\n    LightSpecularConstant,\n    LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass LightDirPerFragEffect extends VisualEffect {\n\n    constructor() {\n        super();\n\n        let vshader = new VertexShader('LightDirPerFragVS', 2, 1);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setProgram(LightDirPerFragEffect.VS);\n\n        let fshader = new FragShader('LightDirPerFragFS', 0, 10);\n        fshader.setConstant(0, 'CameraModelPosition', Shader.VT_VEC3);\n        fshader.setConstant(1, 'MaterialEmissive', Shader.VT_VEC3);\n        fshader.setConstant(2, 'MaterialAmbient', Shader.VT_VEC3);\n        fshader.setConstant(3, 'MaterialDiffuse', Shader.VT_VEC4);\n        fshader.setConstant(4, 'MaterialSpecular', Shader.VT_VEC4);\n        fshader.setConstant(5, 'LightModelDirection', Shader.VT_VEC3);\n        fshader.setConstant(6, 'LightAmbient', Shader.VT_VEC3);\n        fshader.setConstant(7, 'LightDiffuse', Shader.VT_VEC3);\n        fshader.setConstant(8, 'LightSpecular', Shader.VT_VEC3);\n        fshader.setConstant(9, 'LightAttenuation', Shader.VT_VEC4);\n        fshader.setProgram(LightDirPerFragEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('LightDirPerFragProgram', vshader, fshader);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    static createUniqueInstance(light, material) {\n        let effect = new LightDirPerFragEffect();\n        return effect.createInstance(light, material);\n    }\n\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragConstant(0, 0, new CameraModelPositionConstant());\n\n        instance.setFragConstant(0, 1, new MaterialEmissiveConstant(material));\n        instance.setFragConstant(0, 2, new MaterialAmbientConstant(material));\n        instance.setFragConstant(0, 3, new MaterialDiffuseConstant(material));\n        instance.setFragConstant(0, 4, new MaterialSpecularConstant(material));\n\n        instance.setFragConstant(0, 5, new LightModelDirectionConstant(light));\n\n        instance.setFragConstant(0, 6, new LightAmbientConstant(light));\n        instance.setFragConstant(0, 7, new LightDiffuseConstant(light));\n        instance.setFragConstant(0, 8, new LightSpecularConstant(light));\n        instance.setFragConstant(0, 9, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n\n    load(inStream) {\n        this.___ = this.techniques;\n        super.load(inStream);\n    }\n\n    postLink() {\n        super.postLink();\n        let pass = this.techniques[0].getPass(0);\n        pass.program.vertexShader.program = (LightDirPerFragEffect.VS);\n        pass.program.fragShader.program = (LightDirPerFragEffect.FS);\n\n        this.techniques = this.___;\n    }\n};\n\nDECLARE_ENUM(LightDirPerFragEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\nout vec3 vertexPosition;\nout vec3 vertexNormal;\nvoid main(){\n    vertexPosition = modelPosition;\n    vertexNormal = modelNormal;\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}\n`,\n    FS: `#version 300 es\nprecision highp float;\nuniform vec3 CameraModelPosition;\n\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;    // alpha通道存储光滑度\n\nuniform vec3 LightModelDirection;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightAttenuation;    // [constant, linear, quadratic, intensity]\n\nin vec3 vertexPosition;\nin vec3 vertexNormal;\nout vec4 fragColor;\n\nvoid main () {\n    vec3 normal = normalize(vertexNormal);\n    float diffuseWeight = max( dot(normal, -LightModelDirection), 0.0 );\n    vec3 color = LightAmbient * MaterialAmbient + LightDiffuse * MaterialDiffuse.rgb * diffuseWeight;\n    if (diffuseWeight > 0.0) {\n        vec3 viewVector = normalize( CameraModelPosition - vertexPosition);\n        vec3 reflectVector = normalize( reflect(-LightModelDirection, normal ) );\n        float rdotv = max( dot(reflectVector, viewVector), 0.0);\n        float weight = pow(rdotv, MaterialSpecular.w);\n        color += LightSpecular * MaterialSpecular.rgb * weight;\n    }\n    fragColor = vec4(color * LightAttenuation.w + MaterialEmissive, MaterialDiffuse.a);\n}`});\n\nD3Object.Register('LightDirPerFragEffect', LightDirPerFragEffect.factory);\n\nexport { LightDirPerFragEffect };","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport {\n    VisualEffect,\n    VisualEffectInstance,\n    VisualTechnique,\n    VisualPass,\n    Program,\n    Shader,\n    VertexShader,\n    FragShader,\n    AlphaState,\n    CullState,\n    DepthState,\n    OffsetState,\n    StencilState\n} from '../shaders/namespace';\nimport {\n    PVWMatrixConstant,\n    CameraModelPositionConstant,\n    MaterialEmissiveConstant,\n    MaterialAmbientConstant,\n    MaterialDiffuseConstant,\n    MaterialSpecularConstant,\n    LightModelDirectionConstant,\n    LightAmbientConstant,\n    LightDiffuseConstant,\n    LightSpecularConstant,\n    LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass LightDirPerVerEffect extends VisualEffect {\n\n    constructor() {\n        super();\n        let vshader = new VertexShader('LightDirPerVerVS', 2, 11);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setConstant(1, 'CameraModelPosition', Shader.VT_VEC3);\n        vshader.setConstant(2, 'MaterialEmissive', Shader.VT_VEC3);\n        vshader.setConstant(3, 'MaterialAmbient', Shader.VT_VEC3);\n        vshader.setConstant(4, 'MaterialDiffuse', Shader.VT_VEC4);\n        vshader.setConstant(5, 'MaterialSpecular', Shader.VT_VEC4);\n\n        vshader.setConstant(6, 'LightModelDirection', Shader.VT_VEC3);\n        vshader.setConstant(7, 'LightAmbient', Shader.VT_VEC3);\n        vshader.setConstant(8, 'LightDiffuse', Shader.VT_VEC3);\n        vshader.setConstant(9, 'LightSpecular', Shader.VT_VEC3);\n        vshader.setConstant(10, 'LightAttenuation', Shader.VT_VEC4);\n        vshader.setProgram(LightDirPerVerEffect.VS);\n\n        let fshader = new FragShader('LightDirPerVerFS');\n        fshader.setProgram(LightDirPerVerEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('LightDirPerVerProgram', vshader, fshader);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setVertexConstant(0, 1, new CameraModelPositionConstant());\n        instance.setVertexConstant(0, 2, new MaterialEmissiveConstant(material));\n        instance.setVertexConstant(0, 3, new MaterialAmbientConstant(material));\n        instance.setVertexConstant(0, 4, new MaterialDiffuseConstant(material));\n        instance.setVertexConstant(0, 5, new MaterialSpecularConstant(material));\n        instance.setVertexConstant(0, 6, new LightModelDirectionConstant(light));\n        instance.setVertexConstant(0, 7, new LightAmbientConstant(light));\n        instance.setVertexConstant(0, 8, new LightDiffuseConstant(light));\n        instance.setVertexConstant(0, 9, new LightSpecularConstant(light));\n        instance.setVertexConstant(0, 10, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n    static createUniqueInstance(light, material) {\n        let effect = new LightDirPerVerEffect();\n        return effect.createInstance(light, material);\n    }\n\n    load(inStream) {\n        this.___ = this.techniques;\n        super.load(inStream);\n    }\n\n    postLink() {\n        super.postLink();\n        let pass = this.techniques[0].getPass(0);\n        pass.program.vertexShader.vertexShader = (LightDirPerVerEffect.VertexSource);\n        pass.program.fragShader.fragShader = (LightDirPerVerEffect.FragSource);\n        this.techniques = this.___;\n    }\n};\n\nDECLARE_ENUM(LightDirPerVerEffect, {\n    VS: `#version 300 es\nconst float zere = 0.0;\nuniform mat4 PVWMatrix;\nuniform vec3 CameraModelPosition;\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;       // alpha channel store shininess\nuniform vec3 LightModelDirection;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightAttenuation;    // [constant, linear, quadratic, intensity]\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\nout vec4 vColor;\nvoid main(){\n    vec3 nor = normalize( modelNormal );\n    vec3 dir = normalize( LightModelDirection );\n    float weight = max( dot(nor, -dir), zero );\n    vec3 color = LightAmbient * MaterialAmbient + LightDiffuse * MaterialDiffuse.rgb * weight;\n    if ( weight > zero) {\n        vec3 viewVector = normalize(CameraModelPosition - modelPosition);\n        vec3 reflectDir = normalize( reflect(-dir, nor) );\n        weight = max( dot(reflectDir, viewVector), zero);\n        color += LightSpecular * MaterialSpecular.rgb * pow(weight, MaterialSpecular.w);\n    }    \n    vColor = vec4(color * LightAttenuation.w + MaterialEmissive, MaterialDiffuse.a);\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(){\n    fragColor = vColor;\n}`});\n\nD3Object.Register('LightDirPerVerEffect', LightDirPerVerEffect.factory);\n\nexport { LightDirPerVerEffect };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\n\nimport {\n    VisualEffect,\n    VisualEffectInstance,\n    VisualTechnique,\n    VisualPass,\n    Program, Shader, VertexShader, FragShader,\n    AlphaState, CullState, DepthState, OffsetState, StencilState\n} from '../shaders/namespace';\n\nimport {\n    PVWMatrixConstant,\n    WMatrixConstant,\n    CameraModelPositionConstant,\n    MaterialEmissiveConstant,\n    MaterialAmbientConstant,\n    MaterialDiffuseConstant,\n    MaterialSpecularConstant,\n    LightModelPositionConstant,\n    LightAmbientConstant,\n    LightDiffuseConstant,\n    LightSpecularConstant,\n    LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass LightPointPerFragEffect extends VisualEffect {\n\n    constructor() {\n        super();\n        let vshader = new VertexShader('LightPointPerFragVS', 2, 1);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setProgram(LightPointPerFragEffect.VS);\n\n        let fshader = new FragShader('LightPointPerFragFS', 0, 11);\n        fshader.setConstant(0, 'WMatrix', Shader.VT_MAT4);\n        fshader.setConstant(1, 'CameraModelPosition', Shader.VT_VEC3);\n        fshader.setConstant(2, 'MaterialEmissive', Shader.VT_VEC3);\n        fshader.setConstant(3, 'MaterialAmbient', Shader.VT_VEC3);\n        fshader.setConstant(4, 'MaterialDiffuse', Shader.VT_VEC4);\n        fshader.setConstant(5, 'MaterialSpecular', Shader.VT_VEC4);\n        fshader.setConstant(6, 'LightModelPosition', Shader.VT_VEC3);\n        fshader.setConstant(7, 'LightAmbient', Shader.VT_VEC3);\n        fshader.setConstant(8, 'LightDiffuse', Shader.VT_VEC3);\n        fshader.setConstant(9, 'LightSpecular', Shader.VT_VEC3);\n        fshader.setConstant(10, 'LightAttenuation', Shader.VT_VEC4);\n        fshader.setProgram(LightPointPerFragEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('LightPointPerFragProgram', vshader, fshader);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * 创建点光源顶点光照程序\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragConstant(0, 0, new WMatrixConstant());\n        instance.setFragConstant(0, 1, new CameraModelPositionConstant());\n        instance.setFragConstant(0, 2, new MaterialEmissiveConstant(material));\n        instance.setFragConstant(0, 3, new MaterialAmbientConstant(material));\n        instance.setFragConstant(0, 4, new MaterialDiffuseConstant(material));\n        instance.setFragConstant(0, 5, new MaterialSpecularConstant(material));\n        instance.setFragConstant(0, 6, new LightModelPositionConstant(light));\n        instance.setFragConstant(0, 7, new LightAmbientConstant(light));\n        instance.setFragConstant(0, 8, new LightDiffuseConstant(light));\n        instance.setFragConstant(0, 9, new LightSpecularConstant(light));\n        instance.setFragConstant(0, 10, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n    /**\n     * 创建唯一点光源顶点光照程序\n     *\n     * 注意: 应避免使用该函数多次, 因为WebGL的program实例数量有限\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(light, material) {\n        let effect = new LightPointPerFragEffect();\n        return effect.createInstance(light, material);\n    }\n\n    load(inStream) {\n        this.___ = this.techniques;\n        super.load(inStream);\n    }\n\n    link(inStream) {\n        super.link(inStream);\n    }\n\n    postLink() {\n        super.postLink();\n        let pass = this.techniques[0].getPass(0);\n        pass.program.vertexShader.setProgram(LightPointPerFragEffect.VertexSource);\n        pass.program.fragShader.setProgram(LightPointPerFragEffect.FragSource);\n        this.techniques = this.___;\n    }\n\n    save(inStream) {\n        super.save(inStream);\n        // todo: implement\n    }\n};\n\nDECLARE_ENUM(LightPointPerFragEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\nout vec3 vertexPosition;\nout vec3 vertexNormal;\n\nvoid main(){\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n    vertexPosition = modelPosition;\n    vertexNormal = modelNormal;\n}`,\n    FS: `#version 300 es\nprecision highp float;\nuniform mat4 WMatrix;\nuniform vec3 CameraModelPosition;\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;\nuniform vec3 LightModelPosition;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightAttenuation;\n\nin vec3 vertexPosition;\nin vec3 vertexNormal;\nout vec4 fragColor;\n\nvoid main(){\n    vec3 nor = normalize(vertexNormal);\n    vec3 vertexLightDiff = LightModelPosition - vertexPosition;\n    vec3 dir = normalize(vertexLightDiff);\n    float t = length(mat3(WMatrix) * dir);\n\n    // t = intensity / (constant + d * linear + d*d* quadratic);\n    t = LightAttenuation.w/(LightAttenuation.x + t * (LightAttenuation.y + t*LightAttenuation.z));\n    vec3 color = MaterialAmbient * LightAmbient;\n\n    float d = max(dot(nor, dir), 0.0);\n    color = color + d * MaterialDiffuse.rgb * LightDiffuse;\n\n    if (d > 0.0) {\n        vec3 viewVector = normalize(CameraModelPosition - vertexPosition);\n        vec3 reflectDir = normalize( reflect(-dir, nor) );               // 计算反射方向\n        d = max(dot(reflectDir, viewVector), 0.0);\n        d = pow(d, clamp(MaterialSpecular.a, -128.0, 128.0));\n        color = color + d * MaterialSpecular.rgb * LightSpecular;\n    }\n    fragColor = vec4(MaterialEmissive + t * color, MaterialDiffuse.a);\n}`});\n\nD3Object.Register('LightPointPerFragEffect', LightPointPerFragEffect.factory.bind(LightPointPerFragEffect));\n\nexport { LightPointPerFragEffect };\n","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport {\n    VisualEffect, VisualEffectInstance, VisualTechnique, VisualPass,\n    Program, Shader, VertexShader, FragShader,\n    AlphaState, CullState, DepthState, OffsetState, StencilState\n} from '../shaders/namespace';\n\nimport {\n    PVWMatrixConstant,\n    WMatrixConstant,\n    CameraModelPositionConstant,\n    MaterialEmissiveConstant,\n    MaterialAmbientConstant,\n    MaterialDiffuseConstant,\n    MaterialSpecularConstant,\n    LightModelPositionConstant,\n    LightAmbientConstant,\n    LightDiffuseConstant,\n    LightSpecularConstant,\n    LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass LightPointPerVertexEffect extends VisualEffect {\n\n    constructor() {\n        super();\n        let vshader = new VertexShader('LightPointPerVertexVS', 2, 12);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setConstant(1, 'WMatrix', Shader.VT_MAT4);\n        vshader.setConstant(2, 'CameraModelPosition', Shader.VT_VEC3);\n        vshader.setConstant(3, 'MaterialEmissive', Shader.VT_VEC3);\n        vshader.setConstant(4, 'MaterialAmbient', Shader.VT_VEC3);\n        vshader.setConstant(5, 'MaterialDiffuse', Shader.VT_VEC4);\n        vshader.setConstant(6, 'MaterialSpecular', Shader.VT_VEC4);\n        vshader.setConstant(7, 'LightModelPosition', Shader.VT_VEC3);\n        vshader.setConstant(8, 'LightAmbient', Shader.VT_VEC3);\n        vshader.setConstant(9, 'LightDiffuse', Shader.VT_VEC3);\n        vshader.setConstant(10, 'LightSpecular', Shader.VT_VEC3);\n        vshader.setConstant(11, 'LightAttenuation', Shader.VT_VEC4);\n        vshader.setProgram(LightPointPerVertexEffect.VS);\n\n        let fshader = new FragShader('LightPointPerVertexFS');\n        fshader.setProgram(LightPointPerVertexEffect.FS);\n\n        let program = new Program('LightPointPerVertexProgram', vshader, fshader);\n\n        let pass = new VisualPass();\n        pass.program = program;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * 创建点光源顶点光照程序\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setVertexConstant(0, 1, new WMatrixConstant());\n        instance.setVertexConstant(0, 2, new CameraModelPositionConstant());\n        instance.setVertexConstant(0, 3, new MaterialEmissiveConstant(material));\n        instance.setVertexConstant(0, 4, new MaterialAmbientConstant(material));\n        instance.setVertexConstant(0, 5, new MaterialDiffuseConstant(material));\n        instance.setVertexConstant(0, 6, new MaterialSpecularConstant(material));\n        instance.setVertexConstant(0, 7, new LightModelPositionConstant(light));\n        instance.setVertexConstant(0, 8, new LightAmbientConstant(light));\n        instance.setVertexConstant(0, 9, new LightDiffuseConstant(light));\n        instance.setVertexConstant(0, 10, new LightSpecularConstant(light));\n        instance.setVertexConstant(0, 11, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n    /**\n     * 创建唯一点光源顶点光照程序\n     *\n     * 注意: 应避免使用该函数多次, 因为WebGL的program实例数量有限\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(light, material) {\n        let effect = new LightPointPerVertexEffect();\n        return effect.createInstance(light, material);\n    }\n\n    load(inStream) {\n        this.___ = this.techniques;\n        super.load(inStream);\n    }\n\n    link(inStream) {\n        super.link(inStream);\n    }\n\n    postLink() {\n        super.postLink.call(this);\n        let pass = this.techniques[0].getPass(0);\n        pass.program.vertexShader.setProgram(LightPointPerVertexEffect.VertexSource);\n        pass.program.fragShader.setProgram(LightPointPerVertexEffect.FragSource);\n        this.techniques = this.___;\n    }\n\n    save(inStream) {\n        super.save(inStream);\n        // todo: implement\n    }\n};\n\nDECLARE_ENUM(LightPointPerVertexEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nuniform mat4 WMatrix;\nuniform vec3 CameraModelPosition;\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;\nuniform vec3 LightModelPosition;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightAttenuation;\n\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\n\nout vec4 vColor;\nvoid main(){\n    vec3 nor = normalize(modelNormal);\n    vec3 v1 = LightModelPosition - modelPosition;  // 指向光源的方向\n    float t = length(WMatrix * vec4(v1, 0.0));\n    t = LightAttenuation.w/(LightAttenuation.x + t * (LightAttenuation.y + t*LightAttenuation.z));\n    vec3 dir = normalize(v1);                              // 光源方向\n    float d = max( dot(nor, dir), 0.0);                    // 计算漫反射权重\n    vec3 color = MaterialAmbient * LightAmbient;        // 环境光分量\n    color = d * MaterialDiffuse.rgb*LightDiffuse + color; // 漫反射分量\n    if (d > 0.0) {\n        vec3 viewVector = normalize(CameraModelPosition - modelPosition); // 观察方向\n        vec3 reflectDir = normalize( reflect(-dir, nor) );               // 计算反射方向\n        d = max(dot(reflectDir, viewVector), 0.0);\n        d = pow(d, clamp(MaterialSpecular.a, -128.0, 128.0));\n        color = color + d * MaterialSpecular.rgb * LightSpecular;\n    }\n    vColor = vec4(MaterialEmissive + t*color, MaterialDiffuse.a);\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main() {\n    fragColor = vColor;\n}`});\n\nD3Object.Register('LightPointPerVertexEffect', LightPointPerVertexEffect.factory);\n\nexport { LightPointPerVertexEffect };","import { D3Object } from '../../core/D3Object'\nimport { DECLARE_ENUM } from '../../util/util'\nimport { VisualEffect } from '../shaders/VisualEffect'\nimport { VisualEffectInstance } from '../shaders/VisualEffectInstance'\nimport { VisualTechnique } from '../shaders/VisualTechnique'\nimport { VisualPass } from '../shaders/VisualPass'\nimport { Program } from '../shaders/Program'\nimport { Shader } from '../shaders/Shader'\nimport { VertexShader } from '../shaders/VertexShader'\nimport { FragShader } from '../shaders/FragShader'\nimport { AlphaState } from '../shaders/AlphaState'\nimport { CullState } from '../shaders/CullState'\nimport { DepthState } from '../shaders/DepthState'\nimport { OffsetState } from '../shaders/OffsetState'\nimport { StencilState } from '../shaders/StencilState'\n\nimport { PVWMatrixConstant } from '../shaderFloat/PVWMatrixConstant'\nimport { WMatrixConstant } from '../shaderFloat/WMatrixConstant'\nimport { CameraModelPositionConstant } from '../shaderFloat/CameraModelPositionConstant'\nimport { MaterialEmissiveConstant } from '../shaderFloat/MaterialEmissiveConstant'\nimport { MaterialAmbientConstant } from '../shaderFloat/MaterialAmbientConstant'\nimport { MaterialDiffuseConstant } from '../shaderFloat/MaterialDiffuseConstant'\nimport { MaterialSpecularConstant } from '../shaderFloat/MaterialSpecularConstant'\nimport { LightModelPositionConstant } from '../shaderFloat/LightModelPositionConstant'\nimport { LightModelDirectionConstant } from '../shaderFloat/LightModelDirectionConstant'\nimport { LightAmbientConstant } from '../shaderFloat/LightAmbientConstant'\nimport { LightDiffuseConstant } from '../shaderFloat/LightDiffuseConstant'\nimport { LightSpecularConstant } from '../shaderFloat/LightSpecularConstant'\nimport { LightSpotConstant } from '../shaderFloat/LightSpotConstant'\nimport { LightAttenuationConstant } from '../shaderFloat/LightAttenuationConstant'\n\nexport class LightSpotPerFragEffect extends VisualEffect {\n\n    constructor() {\n        super();\n        var vshader = new VertexShader('LightSpotPerFragVS', 2, 1);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setProgram(LightSpotPerFragEffect.VertexSource);\n\n        var fshader = new FragShader('LightSpotPerFragFS', 2, 13);\n        fshader.setInput(0, 'vertexPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        fshader.setInput(1, 'vertexNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        fshader.setConstant(0, 'WMatrix', Shader.VT_MAT4);\n        fshader.setConstant(1, 'CameraModelPosition', Shader.VT_VEC4);\n        fshader.setConstant(2, 'MaterialEmissive', Shader.VT_VEC4);\n        fshader.setConstant(3, 'MaterialAmbient', Shader.VT_VEC4);\n        fshader.setConstant(4, 'MaterialDiffuse', Shader.VT_VEC4);\n        fshader.setConstant(5, 'MaterialSpecular', Shader.VT_VEC4);\n        fshader.setConstant(6, 'LightModelPosition', Shader.VT_VEC4);\n        fshader.setConstant(7, 'LightModelDirection', Shader.VT_VEC4);\n        fshader.setConstant(8, 'LightAmbient', Shader.VT_VEC4);\n        fshader.setConstant(9, 'LightDiffuse', Shader.VT_VEC4);\n        fshader.setConstant(10, 'LightSpecular', Shader.VT_VEC4);\n        fshader.setConstant(11, 'LightSpotCutoff', Shader.VT_VEC4);\n        fshader.setConstant(12, 'LightAttenuation', Shader.VT_VEC4);\n        fshader.setProgram(LightSpotPerFragEffect.FragSource);\n\n        var program = new Program('LightSpotPerFragProgram', vshader, fshader);\n\n        var pass = new VisualPass();\n        pass.program = program;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        var technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * 创建聚光灯片元光照程序\n     *\n     * @param light {Light}\n     * @param material {Material}\n     * @returns {VisualEffectInstance}\n     */\n    createInstance(light, material) {\n        var instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragConstant(0, 0, new WMatrixConstant());\n        instance.setFragConstant(0, 1, new CameraModelPositionConstant());\n        instance.setFragConstant(0, 2, new MaterialEmissiveConstant(material));\n        instance.setFragConstant(0, 3, new MaterialAmbientConstant(material));\n        instance.setFragConstant(0, 4, new MaterialDiffuseConstant(material));\n        instance.setFragConstant(0, 5, new MaterialSpecularConstant(material));\n        instance.setFragConstant(0, 6, new LightModelPositionConstant(light));\n        instance.setFragConstant(0, 7, new LightModelDirectionConstant(light));\n        instance.setFragConstant(0, 8, new LightAmbientConstant(light));\n        instance.setFragConstant(0, 9, new LightDiffuseConstant(light));\n        instance.setFragConstant(0, 10, new LightSpecularConstant(light));\n        instance.setFragConstant(0, 11, new LightSpotConstant(light));\n        instance.setFragConstant(0, 12, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n\n    /**\n     * 创建唯一聚光灯光照程序\n     *\n     * 注意: 应避免使用该函数多次, 因为WebGL的program实例数量有限\n     *\n     * @param light {Light}\n     * @param material {Material}\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(light, material) {\n        var effect = new LightSpotPerFragEffect();\n        return effect.createInstance(light, material);\n    }\n};\n\nDECLARE_ENUM(LightSpotPerFragEffect, {\n    VertexSource: [\n        'uniform mat4 PVWMatrix;',\n        'attribute vec3 modelPosition;',\n        'attribute vec3 modelNormal;',\n        'varying vec3 vertexPosition;',\n        'varying vec3 vertexNormal;',\n        'void main(){',\n        '    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);',\n        '    vertexPosition = modelPosition;',\n        '    vertexNormal = modelNormal;',\n        '}'\n    ].join('\\n'),\n    FragSource: [\n        'precision highp float;',\n        'uniform mat4 WMatrix;',\n        'uniform vec4 CameraModelPosition;',\n        'uniform vec4 MaterialEmissive;',\n        'uniform vec4 MaterialAmbient;',\n        'uniform vec4 MaterialDiffuse;',\n        'uniform vec4 MaterialSpecular;',\n        'uniform vec4 LightModelPosition;',\n        'uniform vec4 LightModelDirection;',\n        'uniform vec4 LightAmbient;',\n        'uniform vec4 LightDiffuse;',\n        'uniform vec4 LightSpecular;',\n        'uniform vec4 LightSpotCutoff;',\n        'uniform vec4 LightAttenuation;',\n        'varying vec3 vertexPosition;',\n        'varying vec3 vertexNormal;',\n        'void main (void) {',\n        '    vec3 nor = normalize(vertexNormal);',\n        '    vec3 spotDir = normalize(LightModelDirection.xyz);',\n        '    vec3 lightDir = LightModelPosition.xyz - vertexPosition;',     // 指向光源的向量\n        '    float attr = length(WMatrix * vec4(lightDir, 1.0));',         // 距离, 距离衰减系数\n        '    attr = LightAttenuation.w/(LightAttenuation.x + attr *(LightAttenuation.y + attr*LightAttenuation.z));',\n        '    lightDir = normalize(lightDir);',\n        '    float dWeight = max(dot(nor, lightDir), 0.0);',         // 漫反射权重\n        '    vec3 color = MaterialAmbient.rgb*LightAmbient.rgb;',\n        '    if (dWeight > 0.0) {',\n        '        float spotEffect = dot(spotDir, -lightDir);',          // 聚光轴 与 光线 的夹角cos值\n        '        if (spotEffect >= LightSpotCutoff.y) {',\n        '            spotEffect = pow(spotEffect, LightSpotCutoff.w);',\n        '            vec3 reflectDir = normalize( reflect(-lightDir, nor) );',               // 计算反射方向\n        '            vec3 viewVector = normalize(CameraModelPosition.xyz - vertexPosition);', // 观察方向\n        '            float sWeight = max( dot(reflectDir, viewVector), 0.0);',\n        '            sWeight = pow(sWeight, clamp(MaterialSpecular.a, -128.0, 128.0));',\n        '            vec3 sColor = dWeight * MaterialDiffuse.rgb * LightDiffuse.rgb;',  // 漫反射分量\n        '            sColor = sColor + sWeight * MaterialSpecular.rgb * LightSpecular.rgb;',  // 高光分量\n        '            color = color + spotEffect * sColor;',\n        '        }',\n        '    }',\n        '    gl_FragColor = vec4(MaterialEmissive.rgb + attr*color, MaterialDiffuse.a);',\n        '}'\n    ].join('\\n')\n});","import { D3Object } from '../../core/D3Object';\nimport { DECLARE_ENUM } from '../../util/util';\nimport {\n    VisualEffect,\n    VisualEffectInstance,\n    VisualTechnique,\n    VisualPass,\n\n    Program,\n    Shader,\n    VertexShader,\n    FragShader,\n\n    AlphaState,\n    CullState,\n    DepthState,\n    OffsetState,\n    StencilState\n} from '../shaders/namespace';\nimport {\n    PVWMatrixConstant,\n    WMatrixConstant,\n    CameraModelPositionConstant,\n\n    MaterialEmissiveConstant,\n    MaterialAmbientConstant,\n    MaterialDiffuseConstant,\n    MaterialSpecularConstant,\n\n    LightModelPositionConstant,\n    LightModelDirectionConstant,\n\n    LightAmbientConstant,\n    LightDiffuseConstant,\n    LightSpecularConstant,\n\n    LightSpotConstant,\n    LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass LightSpotPerVertexEffect extends VisualEffect {\n    constructor() {\n        super();\n        let vshader = new VertexShader('LightSpotPerVertexVS', 2, 14);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setConstant(1, 'WMatrix', Shader.VT_MAT4);\n        vshader.setConstant(2, 'CameraModelPosition', Shader.VT_VEC3);\n        vshader.setConstant(3, 'MaterialEmissive', Shader.VT_VEC3);\n        vshader.setConstant(4, 'MaterialAmbient', Shader.VT_VEC3);\n        vshader.setConstant(5, 'MaterialDiffuse', Shader.VT_VEC4);\n        vshader.setConstant(6, 'MaterialSpecular', Shader.VT_VEC4);\n        vshader.setConstant(7, 'LightModelPosition', Shader.VT_VEC3);\n        vshader.setConstant(8, 'LightModelDirection', Shader.VT_VEC3);\n        vshader.setConstant(9, 'LightAmbient', Shader.VT_VEC3);\n        vshader.setConstant(10, 'LightDiffuse', Shader.VT_VEC3);\n        vshader.setConstant(11, 'LightSpecular', Shader.VT_VEC3);\n        vshader.setConstant(12, 'LightSpotCutoff', Shader.VT_VEC4);\n        vshader.setConstant(13, 'LightAttenuation', Shader.VT_VEC4);\n        vshader.setProgram(LightSpotPerVertexEffect.VS);\n\n        let fshader = new FragShader('LightSpotPerVertexFS');\n        fshader.setProgram(LightSpotPerVertexEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('LightSpotPerVertexProgram', vshader, fshader);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * 创建点光源顶点光照程序\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    createInstance(light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setVertexConstant(0, 1, new WMatrixConstant());\n        instance.setVertexConstant(0, 2, new CameraModelPositionConstant());\n        instance.setVertexConstant(0, 3, new MaterialEmissiveConstant(material));\n        instance.setVertexConstant(0, 4, new MaterialAmbientConstant(material));\n        instance.setVertexConstant(0, 5, new MaterialDiffuseConstant(material));\n        instance.setVertexConstant(0, 6, new MaterialSpecularConstant(material));\n        instance.setVertexConstant(0, 7, new LightModelPositionConstant(light));\n        instance.setVertexConstant(0, 8, new LightModelDirectionConstant(light));\n        instance.setVertexConstant(0, 9, new LightAmbientConstant(light));\n        instance.setVertexConstant(0, 10, new LightDiffuseConstant(light));\n        instance.setVertexConstant(0, 11, new LightSpecularConstant(light));\n        instance.setVertexConstant(0, 12, new LightSpotConstant(light));\n        instance.setVertexConstant(0, 13, new LightAttenuationConstant(light));\n        return instance;\n    }\n\n    /**\n     * 创建唯一点光源顶点光照程序\n     *\n     * 注意: 应避免使用该函数多次, 因为WebGL的program实例数量有限\n     *\n     * @param {Light} light\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(light, material) {\n        let effect = new LightSpotPerVertexEffect();\n        return effect.createInstance(light, material);\n    }\n}\n\nDECLARE_ENUM(LightSpotPerVertexEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nuniform mat4 WMatrix;\nuniform vec3 CameraModelPosition;\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;\nuniform vec3 LightModelPosition;\nuniform vec3 LightModelDirection;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightSpotCutoff;\nuniform vec4 LightAttenuation;\n\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\nout vec4 vColor;\n\nvoid main(){\n    vec3 nor = normalize(modelNormal);\n    vec3 spotDir = normalize( LightModelDirection );\n    vec3 lightDir = LightModelPosition - modelPosition;     // 指向光源的向量\n    float attr = length(WMatrix * vec4(lightDir, 1.0));     // 距离, 距离衰减系数\n    attr = LightAttenuation.w/(LightAttenuation.x + attr *(LightAttenuation.y + attr*LightAttenuation.z));\n    lightDir = normalize(lightDir);\n    float dWeight = max(dot(nor, lightDir), 0.0);           // 漫反射权重\n    vec3 color = MaterialAmbient * LightAmbient;\n    if (dWeight > 0.0) {\n        float spotEffect = dot(spotDir, -lightDir);         // 聚光轴 与 光线 的夹角cos值\n        if (spotEffect >= LightSpotCutoff.y) {\n            spotEffect = pow(spotEffect, LightSpotCutoff.w);\n            vec3 reflectDir = normalize( reflect(-lightDir, nor) );            // 计算反射方向\n            vec3 viewVector = normalize(CameraModelPosition - modelPosition);  // 观察方向\n            float sWeight = max( dot(reflectDir, viewVector), 0.0);\n            sWeight = pow(sWeight, clamp(MaterialSpecular.a, -128.0, 128.0));\n            vec3 sColor = dWeight * MaterialDiffuse.rgb * LightDiffuse;        // 漫反射分量\n            sColor = sColor + sWeight * MaterialSpecular.rgb * LightSpecular;  // 高光分量\n            color = color + spotEffect * sColor;\n        }\n    }\n    vColor = vec4(MaterialEmissive + attr*color, MaterialDiffuse.a);\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main() {\n    fragColor = vColor;\n}`});\n\nexport { LightSpotPerVertexEffect };","import { DECLARE_ENUM } from '../../util/util';\nimport {\n    Shader, VertexShader, FragShader, Program,\n    VisualPass, VisualTechnique, VisualEffectInstance, VisualEffect,\n    AlphaState, CullState, DepthState, OffsetState, StencilState,\n} from '../shaders/namespace';\nimport { PVWMatrixConstant, MaterialDiffuseConstant } from '../shaderFloat/namespace';\n\nclass MaterialEffect extends VisualEffect {\n    constructor() {\n        super();\n\n        var vs = new VertexShader('MaterialVS', 1, 1);\n        vs.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vs.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vs.setProgram(MaterialEffect.VS);\n\n        var fs = new FragShader('MaterialFS', 0, 1);\n        fs.setConstant(0, 'MaterialDiffuse', Shader.VT_VEC4);\n        fs.setProgram(MaterialEffect.FS);\n\n        var program = new Program('MaterialProgram', vs, fs);\n        var pass = new VisualPass();\n        pass.program = program;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        var technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n    /**\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    createInstance(material) {\n        var instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragConstant(0, 0, new MaterialDiffuseConstant(material));\n        return instance;\n    }\n\n    /**\n     * @param {Material} material\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(material) {\n        var effect = new MaterialEffect();\n        return effect.createInstance(material);\n    }\n}\n\nDECLARE_ENUM(MaterialEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nvoid main(){\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nuniform vec4 MaterialDiffuse;\nout vec4 fragColor;\nvoid main(){\n    fragColor = MaterialDiffuse;\n}`});\n\nexport { MaterialEffect };\n","import { DECLARE_ENUM } from '../../util/util';\nimport { PVWMatrixConstant } from '../shaderFloat/namespace';\nimport {\n    VisualEffect,\n    VisualEffectInstance,\n    VisualTechnique,\n    VisualPass,\n\n    Program,\n    Shader,\n    VertexShader,\n    FragShader,\n    SamplerState,\n\n    AlphaState,\n    CullState,\n    DepthState,\n    OffsetState,\n    StencilState\n} from '../shaders/namespace';\n\nclass Texture2DEffect extends VisualEffect {\n    /**\n     * @param {SamplerState} filter\n     */\n    constructor(sampler = null) {\n        super();\n\n        let vshader = new VertexShader('Texture2DVS', 2, 1, 0);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelTCoord0', Shader.VT_VEC2, Shader.VS_TEXCOORD0);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setProgram(Texture2DEffect.VS);\n\n        let fshader = new FragShader('Texture2DFS', 0, 0, 1);\n        fshader.setSampler(0, 'BaseSampler', Shader.ST_2D);\n        fshader.setSamplerState(0, sampler || SamplerState.defaultSampler);\n        fshader.setTextureUnit(0, Texture2DEffect.FragTextureUnit);\n        fshader.setProgram(Texture2DEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('Texture2DProgram', vshader, fshader);\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * Any change in sampler state is made via the frag shader.\n     * @returns {FragShader}\n     */\n    getFragShader() {\n        return super.getFragShader(0, 0);\n    }\n\n    /**\n     * Create an instance of the effect with unique parameters.\n     * If the sampler filter mode is set to a value corresponding to mipmapping,\n     * then the mipmaps will be generated if necessary.\n     *\n     * @param {Texture2D} texture\n     * @return {VisualEffectInstance}\n     */\n    createInstance(texture) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragTexture(0, 0, texture);\n        texture.upload();\n        return instance;\n    }\n\n    /**\n     * Convenience for creating an instance.  The application does not have to\n     * create the effect explicitly in order to create an instance from it.\n     * @param {Texture2D} texture\n     * @param {SamplerState} sampler\n     * @returns {VisualEffectInstance}\n     */\n    static createUniqueInstance(texture, sampler = null) {\n        let effect = new Texture2DEffect();\n        let fshader = effect.getFragShader();\n        if (sampler !== null) {\n            fshader.setSampler(0, sampler);\n        }\n        return effect.createInstance(texture);\n    }\n}\n\nDECLARE_ENUM(Texture2DEffect, {\n    FragTextureUnit: 0,\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nlayout(location=8) in vec2 modelTCoord0;\nout vec2 tcoord;\nvoid main () {\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n    tcoord = modelTCoord0;\n}`,\n    FS: `#version 300 es\nprecision highp float;\nuniform sampler2D BaseSampler;\nin vec2 tcoord;\nout vec4 fragColor;\nvoid main (void) {\n    fragColor = texture(BaseSampler, tcoord);\n}`});\n\nexport { Texture2DEffect };\n","import { DECLARE_ENUM } from '../../util/util';\nimport {\n    VisualEffect, VisualPass, VisualEffectInstance, VisualTechnique,\n    Shader, VertexShader, FragShader, Program,\n    AlphaState, CullState, DepthState, OffsetState, StencilState\n} from '../shaders/namespace';\nimport { PVWMatrixConstant } from '../shaderFloat/PVWMatrixConstant';\n\nclass VertexColor3Effect extends VisualEffect {\n    constructor() {\n        super();\n        let vs = new VertexShader('VertexColor3VS', 2, 1);\n        vs.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vs.setInput(0, 'modelColor', Shader.VT_VEC3, Shader.VS_COLOR0);\n        vs.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vs.setProgram(VertexColor3Effect.VS);\n\n        let fs = new FragShader('VertexColor3FS');\n        fs.setProgram(VertexColor3Effect.FS);\n\n        let program = new Program('VertexColor3Program', vs, fs);\n\n        let pass = new VisualPass();\n        pass.program = program;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    createInstance() {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        return instance;\n    }\n\n    static createUniqueInstance() {\n        let effect = new VertexColor3Effect();\n        return effect.createInstance();\n    }\n}\n\nDECLARE_ENUM(VertexColor3Effect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nlayout(location=3) in vec3 modelColor0;\nlayout(location=6) in float modelPointSize;\nout vec3 vertexColor;\nvoid main(){\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n    vertexColor = modelColor0;\n    gl_PointSize = modelPointSize;\n}`,\n    FS: `#version 300 es\nprecision highp float;\nin vec3 vertexColor;\nout vec4 fragColor;\nvoid main () {\n    fragColor = vec4(vertexColor, 1.0);\n}`});\n\nexport { VertexColor3Effect };\n","import { DECLARE_ENUM } from '../../util/util';\nimport {\n    Shader, VertexShader, FragShader, Program, SamplerState,\n    VisualPass, VisualTechnique, VisualEffectInstance, VisualEffect,\n    AlphaState, CullState, DepthState, OffsetState, StencilState,\n} from '../shaders/namespace';\nimport {\n    PVWMatrixConstant, CameraModelPositionConstant, MaterialEmissiveConstant,\n    MaterialAmbientConstant, MaterialDiffuseConstant, MaterialSpecularConstant,\n    LightModelDirectionConstant, LightAmbientConstant, LightDiffuseConstant,\n    LightSpecularConstant, LightAttenuationConstant\n} from '../shaderFloat/namespace';\n\nclass Texture2DLightDirPerFragEffect extends VisualEffect {\n\n    /**\n     * @param {SamplerState} sampler\n     */\n    constructor(sampler = null) {\n        super();\n\n        let vshader = new VertexShader('Texture2DLightDirPerFragVS', 3, 1);\n        vshader.setInput(0, 'modelPosition', Shader.VT_VEC3, Shader.VS_POSITION);\n        vshader.setInput(1, 'modelNormal', Shader.VT_VEC3, Shader.VS_NORMAL);\n        vshader.setInput(2, 'modelTCoord0', Shader.VT_VEC2, Shader.VS_TEXCOORD0);\n        vshader.setConstant(0, 'PVWMatrix', Shader.VT_MAT4);\n        vshader.setProgram(Texture2DLightDirPerFragEffect.VS);\n\n        let fshader = new FragShader('Texture2DLightDirPerFragFS', 0, 10, 1);\n        fshader.setConstant(0, 'CameraModelPosition', Shader.VT_VEC3);\n        fshader.setConstant(1, 'MaterialEmissive', Shader.VT_VEC3);\n        fshader.setConstant(2, 'MaterialAmbient', Shader.VT_VEC3);\n        fshader.setConstant(3, 'MaterialDiffuse', Shader.VT_VEC4);\n        fshader.setConstant(4, 'MaterialSpecular', Shader.VT_VEC4);\n        fshader.setConstant(5, 'LightModelDirection', Shader.VT_VEC3);\n        fshader.setConstant(6, 'LightAmbient', Shader.VT_VEC3);\n        fshader.setConstant(7, 'LightDiffuse', Shader.VT_VEC3);\n        fshader.setConstant(8, 'LightSpecular', Shader.VT_VEC3);\n        fshader.setConstant(9, 'LightAttenuation', Shader.VT_VEC4);\n\n        fshader.setSampler(0, 'DiffuseSampler', Shader.ST_2D);\n        fshader.setSamplerState(0, sampler || SamplerState.defaultSampler);\n        fshader.setTextureUnit(0, 0);\n\n        fshader.setProgram(Texture2DLightDirPerFragEffect.FS);\n\n        let pass = new VisualPass();\n        pass.program = new Program('TextureLightDirPerFragProgram', vshader, fshader);;\n        pass.alphaState = new AlphaState();\n        pass.cullState = new CullState();\n        pass.depthState = new DepthState();\n        pass.offsetState = new OffsetState();\n        pass.stencilState = new StencilState();\n\n        let technique = new VisualTechnique();\n        technique.insertPass(pass);\n        this.insertTechnique(technique);\n    }\n\n    /**\n     * @param {Texture2D} texture \n     * @param {Light} light \n     * @param {Material} material \n     * @param {SamplerState} sampler\n     */\n    static createUniqueInstance(texture, light, material, sampler = null) {\n        let effect = new Texture2DLightDirPerFragEffect();\n        let fshader = effect.getFragShader();\n        if (sampler !== null) {\n            fshader.setSampler(0, sampler);\n        }\n        return effect.createInstance(texture, light, material);\n    }\n\n    createInstance(texture, light, material) {\n        let instance = new VisualEffectInstance(this, 0);\n        instance.setVertexConstant(0, 0, new PVWMatrixConstant());\n        instance.setFragConstant(0, 0, new CameraModelPositionConstant());\n        instance.setFragConstant(0, 1, new MaterialEmissiveConstant(material));\n        instance.setFragConstant(0, 2, new MaterialAmbientConstant(material));\n        instance.setFragConstant(0, 3, new MaterialDiffuseConstant(material));\n        instance.setFragConstant(0, 4, new MaterialSpecularConstant(material));\n        instance.setFragConstant(0, 5, new LightModelDirectionConstant(light));\n        instance.setFragConstant(0, 6, new LightAmbientConstant(light));\n        instance.setFragConstant(0, 7, new LightDiffuseConstant(light));\n        instance.setFragConstant(0, 8, new LightSpecularConstant(light));\n        instance.setFragConstant(0, 9, new LightAttenuationConstant(light));\n\n        instance.setFragTexture(0, 0, texture);\n        texture.upload();\n        return instance;\n    }\n}\n\nDECLARE_ENUM(Texture2DLightDirPerFragEffect, {\n    VS: `#version 300 es\nuniform mat4 PVWMatrix;\nlayout(location=0) in vec3 modelPosition;\nlayout(location=2) in vec3 modelNormal;\nlayout(location=8) in vec2 modelTCoord0;\nout vec3 vertexPosition;\nout vec3 vertexNormal;\nout vec2 vTCoord0;\n\nvoid main(){\n    vertexPosition = modelPosition;\n    vertexNormal = modelNormal;\n    vTCoord0 = modelTCoord0;\n    gl_Position = PVWMatrix * vec4(modelPosition, 1.0);\n}`,\n    FS: `#version 300 es\nprecision highp float;\nuniform vec3 CameraModelPosition;\n\nuniform vec3 MaterialEmissive;\nuniform vec3 MaterialAmbient;\nuniform vec4 MaterialDiffuse;\nuniform vec4 MaterialSpecular;    // alpha通道存储光滑度\n\nuniform vec3 LightModelDirection;\nuniform vec3 LightAmbient;\nuniform vec3 LightDiffuse;\nuniform vec3 LightSpecular;\nuniform vec4 LightAttenuation;    // [constant, linear, quadratic, intensity]\n\nuniform sampler2D DiffuseSampler;\n\nin vec2 vTCoord0;\nin vec3 vertexPosition;\nin vec3 vertexNormal;\nout vec4 fragColor;\n\nvoid main () {\n    vec3 normal = normalize( vertexNormal );\n    float diffuseWeight = max( dot(normal, -LightModelDirection), 0.0);\n    vec3 color = LightAmbient * MaterialAmbient + LightDiffuse * MaterialDiffuse.rgb * diffuseWeight;\n    \n    if (diffuseWeight > 0.0) {\n        vec3 reflectVector = normalize( reflect(-LightModelDirection, normal) );\n        vec3 viewVector = normalize( CameraModelPosition - vertexPosition);\n        float rdv = max( dot(reflectVector, viewVector), 0.0);\n        float weight = pow(rdv, MaterialSpecular.w);\n        color += weight * MaterialSpecular.rgb * LightSpecular;\n    }\n\n    vec3 tColor = texture( DiffuseSampler, vTCoord0 ).rgb;\n    fragColor = vec4(color * tColor * LightAttenuation.w + MaterialEmissive, MaterialDiffuse.a);\n}`});\n\nexport { Texture2DLightDirPerFragEffect };","/**\n * 按键定义\n * @author lonphy\n * @version 1.0\n */\nexport const KBM_SHIFT = 0x01;\nexport const KBM_CTRL = 0x02;\nexport const KBM_ALT = 0x03;\nexport const KBM_META = 0x04;\n\nexport const KB_BACK = 8;\nexport const KB_TAB = 9;\nexport const KB_ENTER = 13;\nexport const KB_SHIFT = 16;\nexport const KB_CTRL = 17;\nexport const KB_ALT = 18;\nexport const KB_CAPSLK = 20;\nexport const KB_META = 91;\n\nexport const KB_DELETE = 46;\n\nexport const KB_ESC = 27;\nexport const KB_ESCAPE = 32;\nexport const KB_LEFT = 37;\nexport const KB_UP = 38;\nexport const KB_RIGHT = 39;\nexport const KB_DOWN = 40;\n\nexport const KB_0 = 48;\nexport const KB_1 = 49;\nexport const KB_2 = 50;\nexport const KB_3 = 51;\nexport const KB_4 = 52;\nexport const KB_5 = 53;\nexport const KB_6 = 54;\nexport const KB_7 = 55;\nexport const KB_8 = 56;\nexport const KB_9 = 57;\n\nexport const KB_A = 65;\nexport const KB_B = 66;\nexport const KB_C = 67;\nexport const KB_D = 68;\nexport const KB_E = 69;\nexport const KB_F = 70;\nexport const KB_G = 71;\nexport const KB_H = 72;\nexport const KB_I = 73;\nexport const KB_J = 74;\nexport const KB_K = 75;\nexport const KB_L = 76;\nexport const KB_M = 77;\nexport const KB_N = 78;\nexport const KB_O = 79;\nexport const KB_P = 80;\nexport const KB_Q = 81;\nexport const KB_R = 82;\nexport const KB_S = 83;\nexport const KB_T = 84;\nexport const KB_U = 85;\nexport const KB_V = 86;\nexport const KB_W = 87;\nexport const KB_X = 88;\nexport const KB_Y = 89;\nexport const KB_Z = 90;\n\nexport const KB_F1 = 112;\nexport const KB_F2 = 113;\nexport const KB_F3 = 114;\nexport const KB_F4 = 115;\nexport const KB_F5 = 116;\nexport const KB_F6 = 117;\nexport const KB_F7 = 118;\nexport const KB_F8 = 119;\nexport const KB_F9 = 120;\nexport const KB_F10 = 121;\nexport const KB_F11 = 122;\nexport const KB_F12 = 123;\n\nexport const MS_LEFT = 1;\nexport const MS_MIDDLE = 2;\nexport const MS_RIGHT = 3;\n\n","import { Renderer } from '../graphics/renderer/Renderer';\nimport { Texture } from '../graphics/resources/Texture';\nimport { Input } from '../input/index';\n\nclass BaseApplication {\n    /**\n     * @param {string} title - 应用名称\n     * @param {number} width - 绘制区域宽度\n     * @param {number} height - 绘制区域高度\n     * @param {Float32Array} clearColor - 背景颜色\n     * @param {string} canvas - 需要渲染的CanvasID\n     */\n    constructor(title, width, height, clearColor, canvas) {\n        BaseApplication._instance = this;\n        let renderDOM = document.getElementById(canvas);\n        renderDOM = renderDOM || document.createElement('canvas');\n\n        renderDOM.width = width;\n        renderDOM.height = height;\n\n        this.title = title;\n        this.width = width;\n        this.height = height;\n        this.clearColor = clearColor;\n\n        this.colorFormat = Texture.TF_A8R8G8B8;\n        this.depthStencilFormat = Texture.TF_D24S8;\n\n        this.numMultisamples = 0;\n\n        this.renderer = new Renderer(renderDOM, width, height, clearColor, this.colorFormat, this.depthStencilFormat, this.numMultisamples);\n        this.renderDOM = renderDOM;\n\n        this.lastTime = -1;\n        this.accumulatedTime = 0;\n        this.frameRate = 0;\n\n        this.frameCount = 0;\n        this.accumulatedFrameCount = 0;\n        this.timer = 30;\n        this.maxTimer = 30;\n\n        this.textColor = '#000';\n\n        this.loadWait = 0;\n\n        this.applicationRun = false;\n    }\n\n    resetTime() {\n        this.lastTime = -1;\n    }\n\n    run() {\n        if (!this.onPreCreate()) return;\n\n        if (!this.fpsOutput) {\n            this.fpsOutput = document.createElement('div');\n            this.fpsOutput.setAttribute('style', 'position:absolute;top:8px;left:8px;color:' + this.textColor);\n            this.renderDOM.parentNode.appendChild(this.fpsOutput);\n        }\n\n        // Create the renderer.\n        this.renderer.initialize(this.title, this.width, this.height,\n            this.colorFormat, this.depthStencilFormat, this.numMultisamples);\n\n\n        let handles = BaseApplication.handles;\n        // TODO : 事件回调定义\n        window.addEventListener('resize', handles.ResizeHandler, false);\n        window.addEventListener('keydown', handles.KeyDownHandler, false);\n        window.addEventListener('keyup', handles.KeyUpHandler, false);\n        window.addEventListener('mousemove', handles.MouseMoveHandler, false);\n\n        if (!this.onInitialize()) return -4;\n\n        // The default OnPreidle() clears the buffers.  Allow the application to\n        // fill them before the window is shown and before the event loop starts.\n        this.onPreIdle();\n\n        this.applicationRun = true;\n        let $this = this;\n        let loopFunc = function (deltaTime) {\n            if (!$this.applicationRun) {\n                $this.onTerminate();\n                delete $this.renderer;\n                delete $this.renderDOM;\n                return;\n            }\n            $this.updateFrameCount();\n            $this.measureTime();\n\n            if ($this.loadWait === 0) {\n                $this.onIdle.call($this, deltaTime);\n            }\n            requestAnimationFrame(loopFunc);\n        };\n        requestAnimationFrame(loopFunc);\n    }\n\n    measureTime() {\n        // start performance measurements\n        if (this.lastTime === -1.0) {\n            this.lastTime = Date.now();\n            this.accumulatedTime = 0;\n            this.frameRate = 0;\n            this.frameCount = 0;\n            this.accumulatedFrameCount = 0;\n            this.timer = this.maxTimer;\n        }\n\n        // accumulate the time only when the miniature time allows it\n        if (--this.timer === 0) {\n            let currentTime = Date.now();\n            let dDelta = currentTime - this.lastTime;\n            this.lastTime = currentTime;\n            this.accumulatedTime += dDelta;\n            this.accumulatedFrameCount += this.frameCount;\n            this.frameCount = 0;\n            this.timer = this.maxTimer;\n        }\n    }\n\n    updateFrameCount() {\n        ++this.frameCount;\n    }\n\n    /**\n     * 更新FPS显示\n     */\n    drawFrameRate() {\n        if (this.accumulatedTime > 0) {\n            this.frameRate = (this.accumulatedFrameCount / this.accumulatedTime) * 1000;\n        }\n        else {\n            this.frameRate = 0;\n        }\n        this.renderer.drawText(8, 8, '#666', `fps: ${this.frameRate.toFixed(1)}`);\n    }\n\n    getAspectRatio() {\n        return this.width / this.height;\n    }\n\n    onInitialize() {\n        this.renderer.clearColor = this.clearColor;\n        return true;\n    }\n\n    onTerminate() {\n        this.applicationRun = false;\n    }\n\n    // 预创建,添加输入事件监听\n    onPreCreate() {\n        return true;\n    }\n\n    onPreIdle() {\n        this.renderer.clearBuffers();\n    }\n\n    onIdle(t) {\n    }\n\n    onKeyDown(key, x, y) {\n        if (key === Input.KB_F2) {\n            this.resetTime();\n            return true;\n        }\n        return false;\n    }\n\n    onKeyUp(key, x, y) {\n    }\n\n    onMouseClick(button, state, x, y, modifiers) {\n    }\n\n    onMotion(button, x, y, modifiers) {\n    }\n\n    onPassiveMotion(x, y) {\n    }\n\n    onMouseWheel(delta, x, y, modifiers) {\n    }\n\n    onResize(w, h) {\n        if (w > 0 && h > 0) {\n            if (this.renderer) {\n                this.renderer.resize(w, h);\n                this.renderDOM.width = w;\n                this.renderDOM.height = h;\n            }\n            this.width = w;\n            this.height = h;\n        }\n    }\n\n    getMousePosition() {\n    }\n\n    /**\n     * @returns {BaseApplication}\n     */\n    static get instance() {\n        return BaseApplication._instance || null;\n    }\n\n    /**\n     * @param val {BaseApplication}\n     */\n    static set instance(val) {\n        BaseApplication._instance = val;\n    }\n\n    static get gButton() {\n        return BaseApplication._gButton || -1;\n    }\n\n    static set gButton(val) {\n        BaseApplication._gButton = val;\n    }\n\n    static get gModifyButton() {\n        return BaseApplication._gModifyButton || -1;\n    }\n\n    static set gModifyButton(val) {\n        BaseApplication._gModifyButton = val;\n    }\n\n    static get mX() {\n        return BaseApplication._mX || 0;\n    }\n\n    static set mX(val) {\n        BaseApplication._mX = val;\n    }\n\n    static get mY() {\n        return BaseApplication._mY || 0;\n    }\n\n    static set mY(val) {\n        BaseApplication._mY = val;\n    }\n\n    static get handles() {\n\n        return this._handles || (this._handles = {\n            /**\n             * 窗口大小调整事件\n             * @param evt {Event}\n             */\n            ResizeHandler: evt => {\n                let ins = this.instance;\n                if (ins) {\n                    ins.onResize(window.innerWidth, window.innerHeight);\n                }\n            },\n\n            KeyDownHandler: evt => {\n                let key = evt.keyCode;\n                let ins = this.instance;\n                if (ins) {\n                    if (key === Input.KB_ESC && evt.ctrlKey) {\n                        ins.onTerminate();\n                        return;\n                    }\n                    ins.onKeyDown(key, this.mX, this.mY);\n                    ins.onSpecialKeyDown(key, this.mX, this.mY);\n                }\n            },\n            KeyUpHandler: evt => {\n                let key = evt.keyCode;\n                let ins = this.instance;\n                if (ins) {\n                    ins.onKeyUp(key, this.mX, this.mY);\n                    ins.onSpecialKeyUp(key, this.mX, this.mY);\n\n                }\n            },\n            MouseMoveHandler: evt => {\n                this.mX = evt.x;\n                this.mY = evt.y;\n            },\n            MouseHandler: evt => {\n                let ins = this.instance;\n                if (ins) {\n                    this.gModifyButton = evt.ctrlKey;\n                    if (evt.state === 'down') {\n                        this.gButton = evt.button;\n                    } else {\n                        this.gButton = -1;\n                    }\n                    ins.onMouseClick(evt.button, evt.state, x, y, this.gModifyButton);\n                }\n            },\n            MotionHandler: (x, y) => {\n                let ins = this.instance;\n                if (ins) {\n                    ins.onMotion(this.gButton, x, y, this.gModifyButton);\n                }\n            },\n            PassiveMotionHandler: (x, y) => {\n                let ins = this.instance;\n                if (ins) {\n                    ins.onPassiveMotion(x, y);\n                }\n            }\n        });\n    }\n}\n\nexport { BaseApplication };\n","import { BaseApplication } from './BaseApplication';\nimport { _Math, Vector, Matrix } from '../math/index';\nimport * as Input from '../input/key';\nimport { Camera } from '../graphics/sceneTree/Camera';\n\nclass Application3D extends BaseApplication {\n    /**\n     * @param {string} title\n     * @param {number} width\n     * @param {number} height\n     * @param {ArrayLike<number>} clearColor\n     * @param {string} canvas - canvas's DOM id\n     */\n    constructor(title, width, height, clearColor, canvas) {\n        super(title, width, height, clearColor, canvas);\n        this.camera = null;\n        this.worldAxis = [Vector.ZERO, Vector.ZERO, Vector.ZERO];\n\n        this.trnSpeed = 0;\n        this.trnSpeedFactor = 2;\n        this.rotSpeed = 0;\n        this.rotSpeedFactor = 2;\n\n        this.UArrowPressed = false;\n        this.DArrowPressed = false;\n        this.LArrowPressed = false;\n        this.RArrowPressed = false;\n        this.PgUpPressed = false;\n        this.PgDnPressed = false;\n        this.HomePressed = false;\n        this.EndPressed = false;\n        this.InsertPressed = false;\n        this.DeletePressed = false;\n        this.cameraMoveable = false;\n\n        /** @type {Spatial} */\n        this.motionObject = null;\n        this.doRoll = 0;\n        this.doYaw = 0;\n        this.doPitch = 0;\n        this.xTrack0 = 0;\n        this.xTrack1 = 0;\n        this.yTrack0 = 0;\n        this.yTrack1 = 0;\n        /** @type {Matrix} */\n        this.saveRotate = null;\n        this.useTrackBall = true;\n        this.trackBallDown = false;\n    }\n\n    /**\n     * @param {Spatial} motionObject\n     */\n    initializeObjectMotion(motionObject) {\n        this.motionObject = motionObject;\n    }\n\n    moveObject() {\n        // The coordinate system in which the rotations are applied is that of\n        // the object's parent, if it has one.  The parent's world rotation\n        // matrix is R, of which the columns are the coordinate axis directions.\n        // Column 0 is \"direction\", column 1 is \"up\", and column 2 is \"right\".\n        // If the object does not have a parent, the world coordinate axes are\n        // used, in which case the rotation matrix is I, the identity.  Column 0\n        // is (1,0,0) and is \"direction\", column 1 is (0,1,0) and is \"up\", and\n        // column 2 is (0,0,1) and is \"right\".  This choice is consistent with\n        // the use of rotations in the Camera and Light classes to store\n        // coordinate axes.\n        //\n        // Roll is about the \"direction\" axis, yaw is about the \"up\" axis, and\n        // pitch is about the \"right\" axis.\n        let motionObject = this.motionObject;\n\n        if (!this.cameraMoveable || !motionObject) {\n            return false;\n        }\n\n        // Check if the object has been moved by the virtual trackball.\n        if (this.trackBallDown) {\n            return true;\n        }\n\n        // Check if the object has been moved by the function keys.\n        let parent = motionObject.parent;\n        let axis = Vector.ZERO;\n        let angle;\n        let rot, incr;\n        let rotSpeed = this.rotSpeed;\n\n        if (this.doRoll) {\n            rot = motionObject.localTransform.getRotate();\n\n            angle = this.doRoll * rotSpeed;\n            if (parent) {\n                parent.worldTransform.getRotate().getColumn(0, axis);\n            }\n            else {\n                axis.set(1, 0, 0); // Vector.UNIT_X;\n            }\n\n            incr.makeRotation(axis, angle);\n            rot = incr * rot;\n            rot.orthoNormalize();\n            motionObject.localTransform.setRotate(rot);\n            return true;\n        }\n\n        if (this.doYaw) {\n            rot = motionObject.localTransform.getRotate();\n\n            angle = this.doYaw * rotSpeed;\n            if (parent) {\n                parent.worldTransform.getRotate().getColumn(1, axis);\n            }\n            else {\n                axis.set(0, 1, 0); // Vector.UNIT_Y;\n            }\n\n            incr.makeRotation(axis, angle);\n            rot = incr * rot;\n            rot.orthoNormalize();\n            motionObject.localTransform.setRotate(rot);\n            return true;\n        }\n\n        if (this.doPitch) {\n            rot = motionObject.localTransform.getRotate();\n\n            angle = this.doPitch * rotSpeed;\n            if (parent) {\n                parent.worldTransform.getRotate().getColumn(2, axis);\n            }\n            else {\n                axis.set(0, 0, 1); // Vector.UNIT_Z;\n            }\n\n            incr.makeRotation(axis, angle);\n            rot = incr * rot;\n            rot.orthoNormalize();\n            motionObject.localTransform.setRotate(rot);\n            return true;\n        }\n\n        return false;\n    }\n\n    rotateTrackBall(x0, y0, x1, y1) {\n        if ((x0 === x1 && y0 === y1) || !this.camera) {\n            // Nothing to rotate.\n            return;\n        }\n\n        // Get the first vector on the sphere.\n        let length = _Math.sqrt(x0 * x0 + y0 * y0), invLength, z0, z1;\n        if (length > 1) {\n            // Outside the unit disk, project onto it.\n            invLength = 1 / length;\n            x0 *= invLength;\n            y0 *= invLength;\n            z0 = 0;\n        }\n        else {\n            // Compute point (x0,y0,z0) on negative unit hemisphere.\n            z0 = 1 - x0 * x0 - y0 * y0;\n            z0 = z0 <= 0 ? 0 : _Math.sqrt(z0);\n        }\n        z0 = -z0;\n\n        // Use camera world coordinates, order is (D,U,R), so point is (z,y,x).\n        let vec0 = new Vector(z0, y0, x0);\n\n        // Get the second vector on the sphere.\n        length = _Math.sqrt(x1 * x1 + y1 * y1);\n        if (length > 1) {\n            // Outside unit disk, project onto it.\n            invLength = 1 / length;\n            x1 *= invLength;\n            y1 *= invLength;\n            z1 = 0;\n        }\n        else {\n            // Compute point (x1,y1,z1) on negative unit hemisphere.\n            z1 = 1 - x1 * x1 - y1 * y1;\n            z1 = z1 <= 0 ? 0 : _Math.sqrt(z1);\n        }\n        z1 = -z1;\n\n        // Use camera world coordinates, order is (D,U,R), so point is (z,y,x).\n        let vec1 = new Vector(z1, y1, x1);\n\n        // Create axis and angle for the rotation.\n        let axis = vec0.cross(vec1);\n        let dot = vec0.dot(vec1);\n        let angle;\n        if (axis.normalize() > _Math.ZERO_TOLERANCE) {\n            angle = _Math.acos(dot);\n        }\n        else  // Vectors are parallel.\n        {\n            if (dot < 0) {\n                // Rotated pi radians.\n                invLength = _Math.invSqrt(x0 * x0 + y0 * y0);\n                axis.x = y0 * invLength;\n                axis.y = -x0 * invLength;\n                axis.z = 0;\n                angle = _Math.PI;\n            }\n            else {\n                // Rotation by zero radians.\n                axis = Vector.UNIT_X;\n                angle = 0;\n            }\n        }\n\n        // Compute the world rotation matrix implied by trackball motion.  The\n        // axis vector was computed in camera coordinates.  It must be converted\n        // to world coordinates.  Once again, I use the camera ordering (D,U,R).\n        let worldAxis = this.camera.direction.scalar(axis.x).add(\n            this.camera.up.scalar(axis.y).add(\n                this.camera.right.scalar(axis.z)\n            )\n        );\n        let trackRotate = new Matrix(worldAxis, angle);\n\n        // Compute the new local rotation.  If the object is the root of the\n        // scene, the new rotation is simply the *incremental rotation* of the\n        // trackball applied *after* the object has been rotated by its old\n        // local rotation.  If the object is not the root of the scene, you have\n        // to convert the incremental rotation by a change of basis in the\n        // parent's coordinate space.\n        let parent = this.motionObject.parent;\n        let localRot;\n        if (parent) {\n            let parWorRotate = parent.worldTransform.GetRotate();\n            localRot = parWorRotate.transposeTimes(trackRotate) * parWorRotate * this.saveRotate;\n        }\n        else {\n            localRot = trackRotate * this.saveRotate;\n        }\n        localRot.orthonormalize();\n        this.motionObject.localTransform.setRotate(localRot);\n    }\n\n    /**\n     * @param {number} trnSpeed - move speed\n     * @param {number} rotSpeed - rotate speed /rad\n     * @param {number} trnSpeedFactor - move speed factor, default = 2\n     * @param {number} rotSpeedFactor - rotate speed factor, default = 2\n     */\n    initializeCameraMotion(trnSpeed, rotSpeed, trnSpeedFactor = 2, rotSpeedFactor = 2) {\n        this.cameraMoveable = true;\n\n        this.trnSpeed = trnSpeed;\n        this.rotSpeed = rotSpeed;\n        this.trnSpeedFactor = trnSpeedFactor;\n        this.rotSpeedFactor = rotSpeedFactor;\n\n        this.worldAxis[0] = this.camera.direction;\n        this.worldAxis[1] = this.camera.up;\n        this.worldAxis[2] = this.camera.right;\n    }\n\n    /**\n     * if we move camera, then update camera\n     */\n    moveCamera() {\n        if (!this.cameraMoveable) {\n            return false;\n        }\n\n        let moved = false;\n\n        if (this.UArrowPressed) {\n            this.moveForward();\n            moved = true;\n        }\n\n        if (this.DArrowPressed) {\n            this.moveBackward();\n            moved = true;\n        }\n\n        if (this.HomePressed) {\n            this.moveUp();\n            moved = true;\n        }\n\n        if (this.EndPressed) {\n            this.moveDown();\n            moved = true;\n        }\n\n        if (this.LArrowPressed) {\n            this.turnLeft();\n            moved = true;\n        }\n\n        if (this.RArrowPressed) {\n            this.turnRight();\n            moved = true;\n        }\n\n        if (this.PgUpPressed) {\n            this.lookUp();\n            moved = true;\n        }\n\n        if (this.PgDnPressed) {\n            this.lookDown();\n            moved = true;\n        }\n\n        if (this.InsertPressed) {\n            this.moveRight();\n            moved = true;\n        }\n\n        if (this.DeletePressed) {\n            this.moveLeft();\n            moved = true;\n        }\n\n        return moved;\n    }\n\n    moveForward() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[0].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.sub(t));\n    }\n\n    moveBackward() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[0].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.add(t));\n    }\n\n    moveUp() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[1].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.sub(t));\n    }\n\n    moveDown() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[1].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.add(t));\n    }\n\n    moveLeft() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[2].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.sub(t));\n    }\n\n    moveRight() {\n        let pos = this.camera.position;\n        let t = this.worldAxis[2].scalar(this.trnSpeed);\n        this.camera.setPosition(pos.add(t));\n    }\n\n    turnLeft() {\n        let incr = Matrix.makeRotation(this.worldAxis[1], -this.rotSpeed);\n        this.worldAxis[0] = incr.mulPoint(this.worldAxis[0]);\n        this.worldAxis[2] = incr.mulPoint(this.worldAxis[2]);\n        let camera = this.camera;\n        let dir = incr.mulPoint(camera.direction);\n        let up = incr.mulPoint(camera.up);\n        let right = incr.mulPoint(camera.right);\n        this.camera.setAxes(dir, up, right);\n    }\n\n    turnRight() {\n        let incr = Matrix.makeRotation(this.worldAxis[1], this.rotSpeed);\n        this.worldAxis[0] = incr.mulPoint(this.worldAxis[0]);\n        this.worldAxis[2] = incr.mulPoint(this.worldAxis[2]);\n        let camera = this.camera;\n        let dVector = incr.mulPoint(camera.direction);\n        let uVector = incr.mulPoint(camera.up);\n        let rVector = incr.mulPoint(camera.right);\n        this.camera.setAxes(dVector, uVector, rVector);\n    }\n\n    lookUp() {\n        let incr = Matrix.makeRotation(this.worldAxis[2], -this.rotSpeed);\n        let camera = this.camera;\n        let dVector = incr.mulPoint(camera.direction);\n        let uVector = incr.mulPoint(camera.up);\n        let rVector = incr.mulPoint(camera.right);\n        this.camera.setAxes(dVector, uVector, rVector);\n    }\n\n    lookDown() {\n        let incr = Matrix.makeRotation(this.worldAxis[2], this.rotSpeed);\n        let camera = this.camera;\n        let dVector = incr.mulPoint(camera.direction);\n        let uVector = incr.mulPoint(camera.up);\n        let rVector = incr.mulPoint(camera.right);\n        this.camera.setAxes(dVector, uVector, rVector);\n    }\n\n    /**\n     *\n     * @param {boolean} isPerspective - 透视相机\n     * @returns {boolean}\n     */\n    onInitialize(isPerspective = true) {\n        if (!super.onInitialize()) {\n            return false;\n        }\n        this.camera = new Camera(isPerspective);\n        this.renderer.camera = this.camera;\n        this.motionObject = null;\n        return true;\n    }\n\n    onKeyDown(key, x, y) {\n        if (super.onKeyDown(key, x, y)) {\n            return true;\n        }\n        let cameraMoveable = this.cameraMoveable;\n\n        switch (key) {\n            case Input.KB_1:  // Slower camera translation.\n                if (cameraMoveable) {\n                    this.trnSpeed /= this.trnSpeedFactor;\n                }\n                return true;\n            case Input.KB_2:  // Faster camera translation.\n                if (cameraMoveable) {\n                    this.trnSpeed *= this.trnSpeedFactor;\n                }\n                return true;\n            case Input.KB_3:  // Slower camera rotation.\n                if (cameraMoveable) {\n                    this.rotSpeed /= this.rotSpeedFactor;\n                }\n                return true;\n            case Input.KB_4:  // Faster camera rotation.\n                if (cameraMoveable) {\n                    this.rotSpeed *= this.rotSpeedFactor;\n                }\n                return true;\n        }\n\n        return false;\n    }\n\n    onSpecialKeyDown(key, x, y) {\n        if (this.cameraMoveable) {\n            switch (key) {\n                case Input.KB_LEFT:\n                    return (this.LArrowPressed = true);\n                case Input.KB_RIGHT:\n                    return (this.RArrowPressed = true);\n                case Input.KB_UP:\n                    return (this.UArrowPressed = true);\n                case Input.KB_DOWN:\n                    return (this.DArrowPressed = true);\n            }\n        }\n\n        if (this.motionObject) {\n            if (key === Input.KB_F1) {\n                this.doRoll = -1;\n                return true;\n            }\n            if (key === Input.KB_F2) {\n                this.doRoll = 1;\n                return true;\n            }\n            if (key === Input.KB_F3) {\n                this.doYaw = -1;\n                return true;\n            }\n            if (key === Input.KB_F4) {\n                this.doYaw = 1;\n                return true;\n            }\n            if (key === Input.KB_F5) {\n                this.doPitch = -1;\n                return true;\n            }\n            if (key === Input.KB_F6) {\n                this.doPitch = 1;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onSpecialKeyUp(key, x, y) {\n        if (this.cameraMoveable) {\n            if (key === Input.KB_LEFT) {\n                this.LArrowPressed = false;\n                return true;\n            }\n            if (key === Input.KB_RIGHT) {\n                this.RArrowPressed = false;\n                return true;\n            }\n            if (key === Input.KB_UP) {\n                this.UArrowPressed = false;\n                return true;\n            }\n            if (key === Input.KB_DOWN) {\n                this.DArrowPressed = false;\n                return true;\n            }\n        }\n\n        if (this.motionObject) {\n            if (key === Input.KB_F1) {\n                this.doRoll = 0;\n                return true;\n            }\n            if (key === Input.KB_F2) {\n                this.doRoll = 0;\n                return true;\n            }\n            if (key === Input.KB_F3) {\n                this.doYaw = 0;\n                return true;\n            }\n            if (key === Input.KB_F4) {\n                this.doYaw = 0;\n                return true;\n            }\n            if (key === Input.KB_F5) {\n                this.doPitch = 0;\n                return true;\n            }\n            if (key === Input.KB_F6) {\n                this.doPitch = 0;\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    onMouseClick(button, state, x, y, modifiers) {\n        let width = this.width;\n        let height = this.height;\n        if (!this.useTrackBall ||\n            button !== Input.MS_LEFT || !this.motionObject\n        ) {\n            return false;\n        }\n\n        let mult = 1 / (width >= height ? height : width);\n\n        if (state === Input.MS_RIGHT) {\n            // Get the starting point.\n            this.trackBallDown = true;\n            this.saveRotate = this.motionObject.localTransform.getRotate();\n            this.xTrack0 = (2 * x - width) * mult;\n            this.yTrack0 = (2 * (height - 1 - y) - height) * mult;\n        }\n        else {\n            this.trackBallDown = false;\n        }\n\n        return true;\n    }\n\n    onMotion(button, x, y, modifiers) {\n        if (\n            !this.useTrackBall ||\n            button !== Input.MS_LEFT || !this.trackBallDown || !this.motionObject\n        ) {\n            return false;\n        }\n        let width = this.width;\n        let height = this.height;\n\n        // Get the ending point.\n        let mult = 1 / (width >= height ? height : width);\n        this.xTrack1 = (2 * x - width) * mult;\n        this.yTrack1 = (2 * (height - 1 - y) - height) * mult;\n\n        // Update the object's local rotation.\n        this.rotateTrackBall(this.xTrack0, this.yTrack0, this.xTrack1, this.yTrack1);\n        return true;\n    }\n\n    onResize(width, height) {\n        super.onResize(width, height);\n        let params = this.camera.getPerspective();\n        this.camera.setPerspective(params[0], this.getAspectRatio(), params[2], params[3]);\n    }\n}\n\nexport { Application3D };\n","\nconst APP_PATH = location.pathname.replace(/[^\\/]+$/, ''); // 获取应用程序路径\nlet cache = new Map();\t// 资源缓存\nlet calling = new Map();\t// 请求队列\n\nlet XhrTask = Object.create(null);\n\n/**\n * Ajax加载器\n * \n * type must one of [arraybuffer blob document json text]\n * @param {string} url - 请求资源路径\n * @param {String} type - 请求类型\n * @todo 同地址， 不同请求类型处理\n */\nXhrTask.load = function (url, type = 'arraybuffer') {\n    let fullPath = url[0] === '/' ? url : (APP_PATH + url);\n\n    // 1. 查看请求队列,有则直接返回承诺对象\n    if (calling.has(fullPath)) {\n        return calling.get(fullPath);\n    }\n    // 2. 查看缓存池，有则兼容返回\n    if (cache.has(fullPath)) {\n        return Promise.resolve(cache.get(fullPath));\n    }\n    // 3. 否则新建请求\n    let task = new Promise(function (resolve, reject) {\n        let xhr = new XMLHttpRequest();\n        xhr.open('GET', fullPath);\n        xhr.responseType = type;\n        xhr.onloadend = function (e) {\n            if (e.target.status === 200) {\n                // 1. 放入缓存\n                cache.set(fullPath, e.target.response);\n                // 2. 从请求队列删除\n                calling.delete(fullPath);\n                resolve(e.target.response);\n            } else {\n                reject(new Error('XhrTask Load Error' + e.target.status));\n            }\n        };\n        xhr.onerror = reject;\n        xhr.ontimeout = reject;\n        xhr.send();\n    });\n    // 4. 加入请求队列\n    calling.set(fullPath, task);\n    return task;\n}\n\nlet __parsePlugins = new Map();\n\n\n\nXhrTask.plugin = function (name, fn) {\n    if (!fn) {\n        return __parsePlugins.get(name);\n    }\n    __parsePlugins.set(name, fn);\n};\n\nexport { XhrTask };","import {\n\tApplication3D, runApplication,\n\tPoint, Vector, Matrix,\n\tTexture2DEffect,\n\tShader, VertexFormat, Texture2D, CullState,\n\tCuller, Node, Spatial, StandardMesh,\n\tXhrTask,\n\tTransformController,\n\tTransform\n} from '../../../../src/L5';\n\nclass MyTransCtrl extends TransformController {\n\tconstructor() {\n\t\tsuper(Transform.IDENTITY);\n\t\tthis.rotateX = 0;\n\t}\n\tupdate(t) {\n\t\tthis.rotateX+=10;\n\t\tthis.rotateX %= 360;\n\t\tthis.localTransform.setRotate(Matrix.makeRotateX(this.rotateX*Math.PI/180));\n\t\tsuper.update(t);\n\t}\n}\n\n\nclass Texture2DTest extends Application3D {\n\tconstructor() {\n\t\tsuper('Texture2DTest', 640, 480, [0.75, 0.75, 0.75, 1], 'ctx');\n\t\tthis.textColor = \"#fff\";\n\t\tthis.sceneCuller = null;\n\t\tthis.scene = null;\n\t\tthis.ground = null;\n\t\tthis.count = 0;\n\t}\n\n\tonresize() { }\n\n\tonInitialize() {\n\t\tif (!super.onInitialize()) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// 设置相机\n\t\tthis.camera.setPerspective(45.0, this.getAspectRatio(), 0.1, 2000);\n\t\tthis.camera.lookAt(Point.ORIGIN, Point.ORIGIN, Vector.UNIT_Y);\n\t\tthis.camera.setPosition(new Point(0, 2, -8));\n\n\n\t\t// 禁用背面剔除\n\t\tthis.renderer.overrideCullState = new CullState();\n\t\tthis.renderer.overrideCullState.enabled = false;\n\n\t\tthis.createScene();\n\n\t\t// Initial update of objects.\n\t\tthis.scene.update();\n\n\t\t// Initial culling of scene,\n\t\tthis.sceneCuller = new Culler(this.camera);\n\t\tthis.sceneCuller.computeVisibleSet(this.scene);\n\n\n\t\tthis.initializeCameraMotion(0.1, 0.05);\n\t\tthis.initializeObjectMotion(this.scene);\n\t\treturn true;\n\t}\n\n\n\tonIdle() {\n\t\tthis.measureTime();\n\t\tthis.scene.update(this.applicationTime);\n\n\t\tif (this.moveCamera()) {\n\t\t\tthis.sceneCuller.computeVisibleSet(this.scene);\n\t\t}\n\t\tif (this.moveObject()) {\n\t\t\tthis.sceneCuller.computeVisibleSet(this.scene);\n\t\t}\n\n\t\tif (this.renderer.preDraw()) {\n\t\t\tthis.renderer.clearBuffers();\n\t\t\tthis.renderer.drawVisibleSet(this.sceneCuller.visibleSet);\n\t\t\tthis.drawFrameRate();\n\t\t\tthis.renderer.postDraw();\n\t\t}\n\t\tthis.updateFrameCount();\n\t}\n\n\tcreateScene() {\n\t\tthis.scene = new Node();\n\t\tthis.scene.culling = Spatial.CULLING_NEVER;\n\t\tthis.createGround()\n\t}\n\n\t// 创建地板\n\tcreateGround() {\n\t\tlet format = VertexFormat.create(2,\n\t\t\tVertexFormat.AU_POSITION, VertexFormat.AT_FLOAT3, 0,\n\t\t\tVertexFormat.AU_TEXCOORD, VertexFormat.AT_FLOAT2, 0\n\t\t);\n\t\tlet stdMesh = new StandardMesh(format);\n\n\t\tconsole.log(stdMesh);\n\n\t\tthis.ground = stdMesh.rectangle(2, 2, 2, 2);\n\n\t\tconst textureFile = '../../wmtf/grass_1024.l5tf';\n\t\tconst textureFile1 = 'l5kx.l5tf';\n\t\t++this.loadWait;\n\t\tXhrTask.load(textureFile).then(Texture2D.unpack).then(texture => {\n\t\t\ttexture.hasMipmaps = true;\n\t\t\tthis.ground.effect = Texture2DEffect.createUniqueInstance(texture);\n\t\t\t--this.loadWait;\n\t\t});\n\t\tthis.ground.attachController(new MyTransCtrl);\n\t\tthis.scene.attachChild(this.ground);\n\t}\n}\n\nrunApplication(Texture2DTest);"],"names":["Vector","Point","Plane","Matrix","Quaternion","Transform","IndexBuffer","webgl","VertexFormat","Bound","Visual","Renderer","mapping","key","Input.KB_F2","Input.KB_ESC","Input.KB_1","Input.KB_2","Input.KB_3","Input.KB_4","Input.KB_LEFT","Input.KB_RIGHT","Input.KB_UP","Input.KB_DOWN","Input.KB_F1","Input.KB_F3","Input.KB_F4","Input.KB_F5","Input.KB_F6","Input.MS_LEFT","Input.MS_RIGHT","XhrTask"],"mappings":"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G,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC5C,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,MAAM;YAC7C,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAA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ACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAA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,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,GAAG,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/B,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;;;QAGxB,IAAI,OAAO,GAAG,IAAIA,aAAW,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;QACxD,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAChB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,GAAG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CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QACjB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,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"}